{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u7814\u7a76\u5de5\u4f5c\u4e4b\u5916\u597d\u73a9\u6280\u672f\u4e0e\u77e5\u8bc6 \u8bb0\u5f55\u6280\u672f\u5b9e\u73b0\u9700\u8981\u7684\u6570\u5b66\u77e5\u8bc6 \u89e3\u8bfb\u90e8\u5206\u6280\u672f\u7684\u5173\u952e\u4ee3\u7801\u5b9e\u73b0 \u540e\u7eed\u8bfb\u4e66\u548c\u8bba\u6587\u7684\u7b14\u8bb0 \u77e5\u8bc6\u5206\u4eab","title":"\u7f51\u7ad9\u4ecb\u7ecd"},{"location":"#welcome-to-mkdocs","text":"\u7814\u7a76\u5de5\u4f5c\u4e4b\u5916\u597d\u73a9\u6280\u672f\u4e0e\u77e5\u8bc6 \u8bb0\u5f55\u6280\u672f\u5b9e\u73b0\u9700\u8981\u7684\u6570\u5b66\u77e5\u8bc6 \u89e3\u8bfb\u90e8\u5206\u6280\u672f\u7684\u5173\u952e\u4ee3\u7801\u5b9e\u73b0 \u540e\u7eed\u8bfb\u4e66\u548c\u8bba\u6587\u7684\u7b14\u8bb0 \u77e5\u8bc6\u5206\u4eab","title":"Welcome to MkDocs"},{"location":"about/","text":"\u7814\u7a76\u5de5\u4f5c\u4e4b\u5916\u597d\u73a9\u6280\u672f\u4e0e\u77e5\u8bc6 \u8bb0\u5f55\u6280\u672f\u5b9e\u73b0\u9700\u8981\u7684\u6570\u5b66\u77e5\u8bc6 \u89e3\u8bfb\u90e8\u5206\u6280\u672f\u7684\u5173\u952e\u4ee3\u7801\u5b9e\u73b0 \u540e\u7eed\u8bfb\u4e66\u548c\u8bba\u6587\u7684\u7b14\u8bb0 \u5206\u4eab\u77e5\u8bc6\uff08\u5982\u679c\u6709\u4eba\u9700\u8981\u7684\u8bdd\uff09","title":"About"},{"location":"test/","text":"Discrete Galerkin \u4e3a\u4ec0\u4e48\u8981\u7528 \u6570\u503c\u6c42\u89e3PDE\u6a21\u578b\uff0c\u8d8a\u5feb\u89e3\u51b3\u8d8a\u597d \u4f3d\u8fbd\u91d1\u65b9\u6cd5\u76f4\u89c2\u6b65\u9aa4 \u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6 \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f 1. \u5173\u4e8e\u5782\u76f4\u60ac\u81c2\u6881\u7aef\u70b9\u53d7\u529b\u7684\u95ee\u9898 \u4e00\u4e2a\u80fd\u591f\u663e\u5f0f\u6c42\u5f97\u89e3\u6790\u89e3\u7684\u4e00\u7ef4\u7684\u4f8b\u5b50 \u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a \u8bbe\u57fa\u51fd\u6570\u4e3a \\(\\phi_i,\\ i=1,2,3\\) \u5176\u4e2d\uff1a \\(\\phi_0=x,\\ \\phi_1=x,\\ \\phi_2=x^2\\) \u90a3\u4e48\u4f4d\u79fb\u51fd\u6570\u53ef\u4ee5\u8868\u8fbe\u4e3a\u7ebf\u6027\u7d2f\u52a0 \\(u(x)=\\displaystyle\\sum_{j=1}^3 a_j\\phi_j\\) \u4e8e\u662f\uff0c \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u5bf9\u4e8e\u7269\u7406\u65b9\u7a0b \\(E\\displaystyle\\frac{du(x)}{dx}-\\frac{f(x)}{A}=0\\) \uff0c\u7b2c1\u6b65\u4e2d\u7684 \\(u(x)\\) \u4e0d\u4e00\u5b9a\u5c31\u662f\u771f\u5b9e\u51fd\u6570 \u6240\u4ee5\uff0c\u9700\u8981\u8981\u6c42\u4e0a\u8ff0\u51fd\u6570\u4e0e\u5404\u57fa\u51fd\u6570\u7684\u5185\u79ef\u4e3a 0\uff0c\u5185\u79ef\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u540c\u4e00\u4e2a\u533a\u57df \\(\\Omega\\) \u7684\u4e24\u4e2a\u51fd\u6570 \\(f\\) \u548c \\(g\\) \u7684\u79ef\u5206\uff1a \\(\\displaystyle\\int_{\\Omega}fgd\\Omega=0\\) \u5177\u4f53\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L(E\\displaystyle\\frac{du(x)}{dx}-\\frac{F}{A})\\phi_jdx=0\\) \u79fb\u5411\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L\\phi_j du(x)=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u56e0\u4e3a \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \uff0c\u5e26\u5165\u53ef\u5f97 \\(\\displaystyle\\sum_{k=1}^3a_k\\int\\phi_jd\\phi_k=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f \u6839\u636e\u7b2c2\u6b65\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\displaystyle\\begin{bmatrix}\\displaystyle\\int_0^L\\phi_1d\\phi_1\\quad \\int_0^L\\phi_1d\\phi_2\\quad\\int_0^L\\phi_1d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_2d\\phi_1\\quad \\int_0^L\\phi_2d\\phi_2\\quad\\int_0^L\\phi_2d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_3d\\phi_1\\quad \\int_0^L\\phi_3d\\phi_2\\quad\\int_0^L\\phi_3d\\phi_3\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{1}{EA}\\begin{bmatrix}\\displaystyle\\int_0^LF\\phi_1dx\\\\\\displaystyle\\int_0^LF\\phi_2dx\\\\\\displaystyle\\int_0^LF\\phi_3dx\\end{bmatrix}\\) \u6c42\u89e3\u5f97\u5230 \\(a_1,a_2,a_3\\) \uff0c\u83b7\u5f97 \\(u(x)\\) \u7684\u8868\u8fbe\u5f0f 2. \u5173\u4e8e\u8584\u677f\u6320\u5ea6\u548c\u53d7\u529b\u7684\u4f8b\u5b50 \u4e00\u4e2a\u65e0\u6cd5\u663e\u793a\u6c42\u89e3\u7684\u4e8c\u7ef4\u7684\u4f8b\u5b50 \u57fa\u672c\u6b65\u9aa4\u548c\u4e0a\u8ff0\u7c7b\u4f3c\uff0c\u4f46\u662f\u57fa\u51fd\u6570\u7684\u9009\u53d6\u4e0d\u540c\u3002 \u4e3a\u4e86\u6ee1\u8db3\u4e8c\u7ef4\u8fb9\u754c\u6761\u4ef6\uff0c\u9009\u53d6\u4e09\u89d2\u51fd\u6570\u4f5c\u4e3a\u57fa\u51fd\u6570\uff1a \\(\\left\\{\\begin{aligned}\\phi_1(x,y)&=(1+cos\\displaystyle\\frac{\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_2(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_3(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{3\\pi y}{b})\\end{aligned}\\right.\\) \u4ee5\u53ca\u5728\u5199\u51fa\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4\u65f6\uff0c\u9700\u8981\u7b80\u5199\uff1a \u8bb0\uff1a \\(\\displaystyle\\int_{-a}^b\\int_{-a}^bf(x,y)dxdy=H(f)\\) \u5219\u7ebf\u6027\u65b9\u7a0b\u7ec4\u4e3a\uff1a \\(\\displaystyle\\begin{bmatrix}H(\\phi_1\\nabla^4\\phi_1)\\quad H(\\phi_1\\nabla^4\\phi_2)\\quad H(\\phi_1\\nabla^4\\phi_3)\\\\H(\\phi_2\\nabla^4\\phi_1)\\quad H(\\phi_2\\nabla^4\\phi_2)\\quad H(\\phi_2\\nabla^4\\phi_3)\\\\H(\\phi_3\\nabla^4\\phi_1)\\quad H(\\phi_3\\nabla^4\\phi_2)\\quad H(\\phi_3\\nabla^4\\phi_3)\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{q_0}{D}\\begin{bmatrix}H(\\phi_2)\\\\H(\\phi_1)\\\\H(\\phi_3)\\end{bmatrix}\\) \u7ed3\u8bba \u53ef\u80fd\u7684\u95ee\u9898\uff1a\u4ee5\u4e0a\u4f8b\u5b50\uff0c\u90fd\u662f\u5728\u6574\u4e2a\u8ba1\u7b97\u57df\u4e0a\u7528\u4e00\u4e2a\u51fd\u6570\u8868\u8fbe\u5f0f\u6765\u8fdb\u884c\u63cf\u8ff0\uff0c\u56fa\u7136\u5f88\u65b9\u4fbf\u3002\u4f46\u5e26\u6765\u7684\u95ee\u9898\u4f1a\u6709\u7cbe\u5ea6\u4e0a\u7684\u4e0d\u8db3\uff0c\u800c\u4e14\u89e3\u5f97\u6700\u7ec8\u6548\u679c\u4e5f\u5f88\u4f9d\u8d56\u4e8e\u57fa\u51fd\u6570\u7684\u9009\u53d6\u3002 \u89e3\u51b3\u65b9\u6848\uff1a\u5c06\u6574\u4e2a\u533a\u57df\u5206\u6210\u5c0f\u5757\uff0c\u5728\u5c0f\u5757\u4e0a\u8fdb\u884c\u4e00\u4e9b\u57fa\u51fd\u6570\u8fd1\u4f3c(FEM?) \u53c2\u8003 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e00\uff09 3. \u5c0f\u6bb5\u4e0a\u7684\u4f3d\u8fbd\u91d1\u6cd5 3.1 \u9488\u5bf9\u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4 \u5047\u8bbe\u6709\u4e00\u4e2a\u5f85\u6c42\u89e3\u7684\u65b9\u7a0b \\(Au(x)=f\\) \uff0c\u53d6\u4e00\u4e2a\u533a\u95f4 \\([x_k,x_{k+1}]\\) \uff0c\u5219\u6b65\u957f\u4e3a \\(h_k=x_{k+1}-x_k\\) \u5047\u8bbe\u5728 \\(x_k\\) \u70b9\u7684\u89e3 \\(u(x_k)=u_k\\) \uff0c\u5728 \\(x_{k+1}\\) \u70b9\u7684\u89e3 \\(u(x_{k+1})=u_{k+1}\\) \u5219\u4f3d\u8fbd\u91d1\u6cd5\u5728\u5c40\u90e8\u533a\u95f4\u4e0a\u7684\u7684\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u4e3a\uff1a \\(\\tilde u(x)=\\displaystyle\\frac{x_{k+1}-x}{h_k}u_k+\\frac{x-x_k}{h_k}u_{k+1}\\) \u5b83\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff1a \\(\\left\\{\\begin{aligned}&\\tilde u(x_k)=u_k\\\\&\\tilde u(x_{k+1})=u_{k+1}\\end{aligned}\\right.\\) \u57fa\u51fd\u6570\u53ef\u4ee5\u8bb0\u4e3a\uff1a \\(\\left\\{\\begin{aligned}&\\phi_0^k=\\displaystyle\\frac{x_{k+1}-x}{h_k}\\\\&\\phi_1^k=\\frac{x-x_k}{h_k}\\end{aligned}\\right.\\) \uff0c \\(k\\) \u5728\u6b64\u5904\u7684\u610f\u601d\u662f\uff0c\u67d0\u4e00\u4e2a\u533a\u95f4\u4efb\u610f\u53d6\u7684\u7b2c \\(k\\) \u6bb5 \u7ebf\u6027\u63d2\u503c\u51fd\u6570\u5219\u53ef\u4ee5\u8868\u8fbe\u4e3a\uff1a \\(\\tilde u(x)=\\phi_0^ku_k+\\phi_1^ku_{k+1},\\ x_k<x<x_{k+1}\\) \u6ce8\u610f\uff0c\u8fd9\u91cc\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u8868\u8fbe\u5f0f\u548c\u4e4b\u524d\u7684\u4f8b\u5b50\u7c7b\u4f3c\uff1a \\(\\tilde u(x)=a_0x+a_1x^2+a_2x^3\\) \u5b83\u4eec\u90fd\u662f\u7ebf\u6027\u5f62\u5f0f\uff1a \\(\\tilde u(x)=\\displaystyle\\sum a_j\\phi_j\\) \uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e0d\u518d\u5bf9\u5168\u5c40\u8fdb\u884c\u8fd1\u4f3c\uff0c\u800c\u662f\u5bf9\u5c40\u90e8\u7684 \\(k\\) \u6bb5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u4e8e\u662f\u57fa\u51fd\u6570\u5c31\u6709\u4e86\u4e0a\u6807 \\(k\\) \u7136\u540e\u5bf9 \\([x_k,x_{k+1}]\\) \u8fd9\u4e2a\u5c0f\u533a\u95f4\u4f7f\u7528Galerkin\u65b9\u6cd5\u7684\u5206\u6790\uff08\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff1a \\(\\displaystyle\\int_{x_k}^{x_{k+1}}(A\\tilde u(x)-f)\\phi_j^kdx=0,\\ j=0,1\\) \u540c\u6837\uff0c\u8bb0 \\(H_k(f)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)dx\\) \u53ef\u4ee5\u5f97\u5230\u9488\u5bf9\u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u5f62\u5f0f\uff1a \\(\\begin{bmatrix}H_k(\\phi_0^kA\\phi_0^k)\\quad H_k(\\phi_0^kA\\phi_1^k)\\\\H_k(\\phi_1^kA\\phi_0^k)\\quad H_k(\\phi_1^kA\\phi_1^k)\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}H_k(f\\phi_0^k)\\\\H_k(f\\phi_1^k)\\end{bmatrix}\\) \u4f46\u662f\u8fd9\u8fd8\u4e0d\u591f\uff0c\u9700\u8981\u5bf9\u5168\u5c40\u7684\u77e9\u9635\u8fdb\u884c\u7ec4\u88c5 3.2 \u5bf9\u5168\u5c40\u8fdb\u884c\u77e9\u9635\u7684\u7ec4\u88c5 \u9996\u5148\uff0c\u4e0a\u8ff0\u7ebf\u6027\u65b9\u7a0b\u7ec4\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a \\(A_{ij}^ku_k=b_i^k\\) \uff0c\u5176\u4e2d\uff1a \\(\\left\\{\\begin{aligned}&A_{ij}^k=H_k(\\phi_i^kA\\phi_j^k),\\quad i,j\\in {0,1}\\\\&b_i^k=H_k(f\\phi_i^k),\\quad i=0,1\\end{aligned}\\right.\\) \uff0c \\(u_k\\) \u5219\u662f\u65b9\u7a0b\u7b2c \\(k\\) \u6bb5\u7684\u89e3\uff0c\u9700\u8981\u6c42\u89e3 \u5176\u4e2d \\(i,j,k\\) \u7684\u542b\u4e49\u662f\uff1a \\(k\\) \u662f\u7b2c\u51e0\u4e2a\u5355\u5143 \u6839\u636e\u57fa\u51fd\u6570\u7684\u5b9a\u4e49\uff0c \\(A_{ij}^k\\) \u8868\u793a\u8282\u70b9 \\(j\\) \u5bf9\u8282\u70b9 \\(i\\) \u5904\u7684\u8d21\u732e \\(b_i^k\\) \u8868\u793a\u8282\u70b9 \\(i\\) \u5904\u6240\u83b7\u5f97\u7684\u8d21\u732e\u503c \u5047\u8bbe\uff0c\u6211\u4eec\u628a\u5168\u5c40\u5206\u6210\u4e863\u6bb5\uff0c\u5219\u67094\u4e2a\u8282\u70b9\uff0c\u5373 \\(k=0,1,2,3\\) \\(|_{u_0}\\_\\_\\_Unit\\_0\\_\\_\\_|_{u_1}\\_\\_\\_Unit\\_1\\_\\_\\_|_{u_2}\\_\\_\\_Unit\\_2\\_\\_\\_|_{u_3}\\) \u62ff \\(u_1\\) \u8fd9\u4e2a\u70b9\u6765\u4e3e\u4f8b\uff0c\u56e0\u4e3a\u5b83\u6a2a\u8de8\u4e86 \\(Unit0\\) \u548c \\(Unit1\\) \u5728 \\(Unit0\\) \u4e0a \u8282\u70b9 \\(u_0\\) \u5bf9 \\(u_0\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^0u_0\\) \u8282\u70b9 \\(u_0\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{10}^0u_0\\) \u8282\u70b9 \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{11}^0u_1\\) \\(b\\) \u5219\u662f\u8be5\u8282\u70b9\u4e0a\u7684\u603b\u8d21\u732e\u503c \\(\\begin{bmatrix}A_{00}^0\\quad A_{01}^0\\\\A_{10}^0\\quad A_{11}^0\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0\\end{bmatrix}\\) \u5728 \\(Unit1\\) \u4e0a \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^1u_1\\) \u8282\u70b9 \\(u_2\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{01}^1u_2\\) \\(\\begin{bmatrix}A_{00}^1\\quad A_{01}^1\\\\A_{10}^1\\quad A_{11}^1\\end{bmatrix}\\begin{bmatrix}u_1\\\\u_2\\end{bmatrix}=\\begin{bmatrix}b_0^1\\\\b_1^1\\end{bmatrix}\\) \u5728 \\(Unit2\\) \u4e0a \u540c\u4e0a \\(\\begin{bmatrix}A_{00}^2\\quad A_{01}^2\\\\A_{10}^2\\quad A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^2\\\\b_1^2\\end{bmatrix}\\) \u5173\u4e8e\u8282\u70b9 \\(u_k\\) \u7684\u77e9\u9635\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a \\(\\begin{bmatrix}&u_k\u70b9\u5bf9u_k\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_k\u70b9\u7684\u8d21\u732e\\\\&u_k\u70b9\u5bf9u_{k+1}\u70b9\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_{k+1}\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}u_k\u5904\u7684\u603b\u8d21\u732e\u503c\\\\u_{k+1}\u5904\u7684\u603b\u8d21\u732e\u503c\\end{bmatrix}\\) \u5c06\u4e0a\u8ff03\u4e2a\u77e9\u9635\u6839\u636e \\(u_k\\) \u8fdb\u884c\u62fc\u63a5\uff0c\u7ec4\u88c5\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6700\u7ec8\u7684\u5f62\u5f0f \\(Ax=b\\) \uff1a \\(\\begin{bmatrix}&A_{00}^0\\quad &A_{01}^0\\quad &0 \\quad &0\\\\&A_{10}^0\\quad &A_{11}^0+A_00^1 \\quad &A_{01}^1 \\quad &0\\\\&0 \\quad &A_{10}^1 \\quad &A_{11}^1+A_{00}^2 \\quad &0\\\\&0 \\quad &0 \\quad &A_{10}^2 \\quad &A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0 + b_0^1\\\\b_0^2+b_1^1\\\\b_1^2\\end{bmatrix}\\) \u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u6c42\u5f97\u7684 \\(u_0,u_1,u_2,u_3\\) \u5c31\u662f\u4e4b\u524d\u5047\u8bbe\u5728 \\(u(x_0),u(x_1),u(x_2),u(x_3)\\) \u4e0a\u7684\u89e3\u3002 \u4ee5\u4e0a\u4e3a\u5c40\u90e8\u4f7f\u7528Galerkin\u65b9\u6cd5\u83b7\u53d6\u5f31\u89e3\u5f62\u5f0f\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u56e0\u4e3a\u628a\u6574\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e86\u6709\u9650\u4e2a\u533a\u57df\uff0c\u6240\u4ee5\u4e5f\u53eb\u6709\u9650\u5143\u65b9\u6cd5\u3002 3.3 \u79ef\u5206\u6362\u5143 \u4ee4 \\(\\xi=\\displaystyle\\frac{x-x_k}{h_k}\\) \uff0c \\(h_kd\\xi=dx\\) \u5219 \\(\\left\\{\\begin{aligned}&\\phi_0^k=1-\\xi\\\\&\\phi_1^k=\\xi\\end{aligned}\\right.\\) \u90a3\u4e48\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}\\phi_i^kA\\phi_j^kdx=h_k\\int_0^1\\phi_i^kA\\phi_j^kd\\xi\\) \u5e76\u4e14\uff0c \\(H_k(f\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)\\phi_j^kdx=h_k\\int_0^1f(h_k\\xi+x_k)\\phi_j^kd\\xi\\) \u5f53\u5fae\u5206\u7b97\u5b50 \\(A\\) \u5df2\u77e5\u7684\u65f6\u5019\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)\\) \u90fd\u53ef\u4ee5\u663e\u5f0f\u5730\u5199\u51fa\u6765\uff0c\u4f46\u662f\uff0c\u7531\u4e8e \\(f(x)\\) \u5f80\u5f80\u6ca1\u6709\u80fd\u591f\u76f4\u63a5\u5199\u51fa\u6765\u7684\u663e\u5f0f\u79ef\u5206\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u5728 \\(h_k\\) \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u7528Simpson\u516c\u5f0f/\u7b80\u5355\u7684\u68af\u5f62\u516c\u5f0f\u8fdb\u884c\u8fd1\u4f3c\uff1a \\(H_k(f\\phi_0^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[f(x)+2f(x_k+\\frac{h_k}{2})]\\) \\(H_k(f\\phi_1^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[2f(x_k+\\frac{h_k}{2})+f(x_{k+1})]\\) 3.4 \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7684\u4f8b\u5b50 \u6c42\u89e3\u4f8b\u5b50\uff1a \\(\\displaystyle\\frac{du}{dx}=x^3e^x\\) \u53ef\u4ee5\u5f97\u5230\u5fae\u5206\u7b97\u5b50 \\(A=\\displaystyle\\frac{d}{dx}=\\frac{1}{h_k}\\frac{d}{d\\xi}\\) \uff0c\u5c06\u5fae\u5206\u7b97\u5b50\u4ee3\u5165\u516c\u5f0f\u53ef\u5f97\uff1a \\(\\left\\{\\begin{aligned}&H_k(\\phi_0^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1(1-\\xi)d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_0^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1(1-\\xi)d\\xi=\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1\\xi d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1\\xi d\\xi=\\frac{1}{2}\\end{aligned}\\right.\\) \u7531\u6b64\u53ef\u5f97 \\(Ax=b\\) \u4e3a\uff1a \\(\\begin{bmatrix}&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}&0&0&\\cdots&0\\\\&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&0&\\cdots &0\\\\&0&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&\\cdots &\\vdots\\\\&\\vdots&\\vdots&\\vdots&\\ddots&\\cdots&0\\\\&0&0&0&0&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\\\vdots\\\\u_{k-1}\\\\u_k\\end{bmatrix}=\\begin{bmatrix}\\displaystyle\\frac{6}{h_0}[f(x_0)+2f(x_0+\\displaystyle\\frac{h_0}{2})\\\\\\displaystyle\\frac{6}{h_0}[2f(x_0+\\displaystyle\\frac{h_0}{2})+f(x_1)]+\\displaystyle\\frac{6}{h_1}[f(x_1)+2f(x_1+\\displaystyle\\frac{h_1}{2})\\\\\\vdots\\\\\\displaystyle\\frac{6}{h_{k-1}}[2f(x_{k-1}+\\displaystyle\\frac{h_{k-1}}{2})+f(x_{k-1})]+\\displaystyle\\frac{6}{h_{k}}[f(x_{k})+2f(x_{k}+\\displaystyle\\frac{h_{k}}{2})\\\\?\\end{bmatrix}\\) \u7ed3\u8bba \u7ecf\u8fc7\u4ed6\u4eba\u7684\u52aa\u529b\u53d1\u73b0\uff0c\u5bf9\u4e8e \\(u^{'}=f\\) \u7684\u65b9\u7a0b\uff0c\u7528\u6709\u9650\u5143\u8fdb\u884c\u5212\u5206\uff0c\u672c\u8d28\u4e0a\u548c\u6709\u9650\u5dee\u5206\u6cd5\uff08FDM\uff09\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\u7c7b\u4f3c\u7684\u3002\u867d\u7136Galerkin\u65b9\u6cd5\u5728\u6bcf\u4e2a\u5355\u5143\u7684\u64cd\u4f5c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u6700\u7ec8\u548cFDM\u4e00\u6837\uff0c\u90fd\u662f\u5728\u8282\u70b9\u5904\u7528\u5dee\u5546\u4ee3\u66ff\u5fae\u5143\uff0c\u5728\u8fb9\u754c\u5904\u5f00\u59cb\u4e00\u6b65\u6b65\u9012\u8fdb\u8fd0\u7b97\u3002 \u53c2\u8003 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e8c\uff09 4. \u66f4\u597d\u7684\u7ebf\u6027\u63d2\u503c \u5212\u5206\u5355\u5143\u7684\u4f3d\u8fbd\u91d1\u6cd5\u4e2d\uff0c\u5212\u5206\u51fa\u6765\u5404\u6bb5\u7684\u6700\u7ec8\u51fd\u6570\u503c\u90fd\u662f\u4e00\u6761\u76f4\u7ebf\uff0c\u4e00\u6761\u7531\u5355\u5143\u4e24\u7aef\u51fd\u6570\u63a7\u5236\u7684\u76f4\u7ebf\u3002 \u4f46\u662f\u5355\u5143\u5185\u51fd\u6570\u5448\u7ebf\u6027\u53d8\u5316\uff0c\u4e14\u5355\u5143\u95f4\u4e24\u6761\u76f4\u7ebf\u659c\u7387\u4e0d\u4e00\u6837\u4f1a\u4ea7\u751f\u201c\u6298\u89d2\u201d\uff0c\u4e0d\u591f\u5149\u6ed1\u3002 \u53ef\u5426\u4f7f\u63d2\u503c\u51fd\u6570\u53d8\u5f97\u5149\u6ed1\uff08\u82e5\u5e72\u4ecb\u5bfc\u6570\u503c\u76f8\u540c\uff09\uff1f \u7b54\u6848\uff1a\u6837\u6761\u51fd\u6570\uff0c\u6837\u6761\u63d2\u503c\u65b9\u6cd5\u3002 \u4e09\u6b21\u6837\u6761\uff0c\u5373\u4e09\u5f2f\u77e9\u65b9\u7a0b\uff0c\u662f\u4f7f\u7528\u5f97\u6700\u5e7f\u6cdb\u7684\u3002\u56e0\u4e3a\u5176\u80fd\u4fdd\u8bc1\u4e8c\u9636\u5bfc\u6570\u503c\u76f8\u540c\uff0c\u4ece\u800c\u5e73\u6ed1\u3002","title":"Discrete Galerkin"},{"location":"test/#discrete-galerkin","text":"\u4e3a\u4ec0\u4e48\u8981\u7528 \u6570\u503c\u6c42\u89e3PDE\u6a21\u578b\uff0c\u8d8a\u5feb\u89e3\u51b3\u8d8a\u597d","title":"Discrete Galerkin"},{"location":"test/#_1","text":"\u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6 \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f","title":"\u4f3d\u8fbd\u91d1\u65b9\u6cd5\u76f4\u89c2\u6b65\u9aa4"},{"location":"test/#1","text":"","title":"1.  \u5173\u4e8e\u5782\u76f4\u60ac\u81c2\u6881\u7aef\u70b9\u53d7\u529b\u7684\u95ee\u9898"},{"location":"test/#_2","text":"\u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a \u8bbe\u57fa\u51fd\u6570\u4e3a \\(\\phi_i,\\ i=1,2,3\\) \u5176\u4e2d\uff1a \\(\\phi_0=x,\\ \\phi_1=x,\\ \\phi_2=x^2\\) \u90a3\u4e48\u4f4d\u79fb\u51fd\u6570\u53ef\u4ee5\u8868\u8fbe\u4e3a\u7ebf\u6027\u7d2f\u52a0 \\(u(x)=\\displaystyle\\sum_{j=1}^3 a_j\\phi_j\\) \u4e8e\u662f\uff0c \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u5bf9\u4e8e\u7269\u7406\u65b9\u7a0b \\(E\\displaystyle\\frac{du(x)}{dx}-\\frac{f(x)}{A}=0\\) \uff0c\u7b2c1\u6b65\u4e2d\u7684 \\(u(x)\\) \u4e0d\u4e00\u5b9a\u5c31\u662f\u771f\u5b9e\u51fd\u6570 \u6240\u4ee5\uff0c\u9700\u8981\u8981\u6c42\u4e0a\u8ff0\u51fd\u6570\u4e0e\u5404\u57fa\u51fd\u6570\u7684\u5185\u79ef\u4e3a 0\uff0c\u5185\u79ef\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u540c\u4e00\u4e2a\u533a\u57df \\(\\Omega\\) \u7684\u4e24\u4e2a\u51fd\u6570 \\(f\\) \u548c \\(g\\) \u7684\u79ef\u5206\uff1a \\(\\displaystyle\\int_{\\Omega}fgd\\Omega=0\\) \u5177\u4f53\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L(E\\displaystyle\\frac{du(x)}{dx}-\\frac{F}{A})\\phi_jdx=0\\) \u79fb\u5411\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L\\phi_j du(x)=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u56e0\u4e3a \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \uff0c\u5e26\u5165\u53ef\u5f97 \\(\\displaystyle\\sum_{k=1}^3a_k\\int\\phi_jd\\phi_k=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f \u6839\u636e\u7b2c2\u6b65\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\displaystyle\\begin{bmatrix}\\displaystyle\\int_0^L\\phi_1d\\phi_1\\quad \\int_0^L\\phi_1d\\phi_2\\quad\\int_0^L\\phi_1d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_2d\\phi_1\\quad \\int_0^L\\phi_2d\\phi_2\\quad\\int_0^L\\phi_2d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_3d\\phi_1\\quad \\int_0^L\\phi_3d\\phi_2\\quad\\int_0^L\\phi_3d\\phi_3\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{1}{EA}\\begin{bmatrix}\\displaystyle\\int_0^LF\\phi_1dx\\\\\\displaystyle\\int_0^LF\\phi_2dx\\\\\\displaystyle\\int_0^LF\\phi_3dx\\end{bmatrix}\\) \u6c42\u89e3\u5f97\u5230 \\(a_1,a_2,a_3\\) \uff0c\u83b7\u5f97 \\(u(x)\\) \u7684\u8868\u8fbe\u5f0f","title":"\u4e00\u4e2a\u80fd\u591f\u663e\u5f0f\u6c42\u5f97\u89e3\u6790\u89e3\u7684\u4e00\u7ef4\u7684\u4f8b\u5b50"},{"location":"test/#2","text":"","title":"2. \u5173\u4e8e\u8584\u677f\u6320\u5ea6\u548c\u53d7\u529b\u7684\u4f8b\u5b50"},{"location":"test/#_3","text":"\u57fa\u672c\u6b65\u9aa4\u548c\u4e0a\u8ff0\u7c7b\u4f3c\uff0c\u4f46\u662f\u57fa\u51fd\u6570\u7684\u9009\u53d6\u4e0d\u540c\u3002 \u4e3a\u4e86\u6ee1\u8db3\u4e8c\u7ef4\u8fb9\u754c\u6761\u4ef6\uff0c\u9009\u53d6\u4e09\u89d2\u51fd\u6570\u4f5c\u4e3a\u57fa\u51fd\u6570\uff1a \\(\\left\\{\\begin{aligned}\\phi_1(x,y)&=(1+cos\\displaystyle\\frac{\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_2(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_3(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{3\\pi y}{b})\\end{aligned}\\right.\\) \u4ee5\u53ca\u5728\u5199\u51fa\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4\u65f6\uff0c\u9700\u8981\u7b80\u5199\uff1a \u8bb0\uff1a \\(\\displaystyle\\int_{-a}^b\\int_{-a}^bf(x,y)dxdy=H(f)\\) \u5219\u7ebf\u6027\u65b9\u7a0b\u7ec4\u4e3a\uff1a \\(\\displaystyle\\begin{bmatrix}H(\\phi_1\\nabla^4\\phi_1)\\quad H(\\phi_1\\nabla^4\\phi_2)\\quad H(\\phi_1\\nabla^4\\phi_3)\\\\H(\\phi_2\\nabla^4\\phi_1)\\quad H(\\phi_2\\nabla^4\\phi_2)\\quad H(\\phi_2\\nabla^4\\phi_3)\\\\H(\\phi_3\\nabla^4\\phi_1)\\quad H(\\phi_3\\nabla^4\\phi_2)\\quad H(\\phi_3\\nabla^4\\phi_3)\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{q_0}{D}\\begin{bmatrix}H(\\phi_2)\\\\H(\\phi_1)\\\\H(\\phi_3)\\end{bmatrix}\\)","title":"\u4e00\u4e2a\u65e0\u6cd5\u663e\u793a\u6c42\u89e3\u7684\u4e8c\u7ef4\u7684\u4f8b\u5b50"},{"location":"test/#_4","text":"\u53ef\u80fd\u7684\u95ee\u9898\uff1a\u4ee5\u4e0a\u4f8b\u5b50\uff0c\u90fd\u662f\u5728\u6574\u4e2a\u8ba1\u7b97\u57df\u4e0a\u7528\u4e00\u4e2a\u51fd\u6570\u8868\u8fbe\u5f0f\u6765\u8fdb\u884c\u63cf\u8ff0\uff0c\u56fa\u7136\u5f88\u65b9\u4fbf\u3002\u4f46\u5e26\u6765\u7684\u95ee\u9898\u4f1a\u6709\u7cbe\u5ea6\u4e0a\u7684\u4e0d\u8db3\uff0c\u800c\u4e14\u89e3\u5f97\u6700\u7ec8\u6548\u679c\u4e5f\u5f88\u4f9d\u8d56\u4e8e\u57fa\u51fd\u6570\u7684\u9009\u53d6\u3002 \u89e3\u51b3\u65b9\u6848\uff1a\u5c06\u6574\u4e2a\u533a\u57df\u5206\u6210\u5c0f\u5757\uff0c\u5728\u5c0f\u5757\u4e0a\u8fdb\u884c\u4e00\u4e9b\u57fa\u51fd\u6570\u8fd1\u4f3c(FEM?)","title":"\u7ed3\u8bba"},{"location":"test/#_5","text":"\u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e00\uff09","title":"\u53c2\u8003"},{"location":"test/#3","text":"","title":"3. \u5c0f\u6bb5\u4e0a\u7684\u4f3d\u8fbd\u91d1\u6cd5"},{"location":"test/#31","text":"\u5047\u8bbe\u6709\u4e00\u4e2a\u5f85\u6c42\u89e3\u7684\u65b9\u7a0b \\(Au(x)=f\\) \uff0c\u53d6\u4e00\u4e2a\u533a\u95f4 \\([x_k,x_{k+1}]\\) \uff0c\u5219\u6b65\u957f\u4e3a \\(h_k=x_{k+1}-x_k\\) \u5047\u8bbe\u5728 \\(x_k\\) \u70b9\u7684\u89e3 \\(u(x_k)=u_k\\) \uff0c\u5728 \\(x_{k+1}\\) \u70b9\u7684\u89e3 \\(u(x_{k+1})=u_{k+1}\\) \u5219\u4f3d\u8fbd\u91d1\u6cd5\u5728\u5c40\u90e8\u533a\u95f4\u4e0a\u7684\u7684\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u4e3a\uff1a \\(\\tilde u(x)=\\displaystyle\\frac{x_{k+1}-x}{h_k}u_k+\\frac{x-x_k}{h_k}u_{k+1}\\) \u5b83\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff1a \\(\\left\\{\\begin{aligned}&\\tilde u(x_k)=u_k\\\\&\\tilde u(x_{k+1})=u_{k+1}\\end{aligned}\\right.\\) \u57fa\u51fd\u6570\u53ef\u4ee5\u8bb0\u4e3a\uff1a \\(\\left\\{\\begin{aligned}&\\phi_0^k=\\displaystyle\\frac{x_{k+1}-x}{h_k}\\\\&\\phi_1^k=\\frac{x-x_k}{h_k}\\end{aligned}\\right.\\) \uff0c \\(k\\) \u5728\u6b64\u5904\u7684\u610f\u601d\u662f\uff0c\u67d0\u4e00\u4e2a\u533a\u95f4\u4efb\u610f\u53d6\u7684\u7b2c \\(k\\) \u6bb5 \u7ebf\u6027\u63d2\u503c\u51fd\u6570\u5219\u53ef\u4ee5\u8868\u8fbe\u4e3a\uff1a \\(\\tilde u(x)=\\phi_0^ku_k+\\phi_1^ku_{k+1},\\ x_k<x<x_{k+1}\\) \u6ce8\u610f\uff0c\u8fd9\u91cc\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u8868\u8fbe\u5f0f\u548c\u4e4b\u524d\u7684\u4f8b\u5b50\u7c7b\u4f3c\uff1a \\(\\tilde u(x)=a_0x+a_1x^2+a_2x^3\\) \u5b83\u4eec\u90fd\u662f\u7ebf\u6027\u5f62\u5f0f\uff1a \\(\\tilde u(x)=\\displaystyle\\sum a_j\\phi_j\\) \uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e0d\u518d\u5bf9\u5168\u5c40\u8fdb\u884c\u8fd1\u4f3c\uff0c\u800c\u662f\u5bf9\u5c40\u90e8\u7684 \\(k\\) \u6bb5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u4e8e\u662f\u57fa\u51fd\u6570\u5c31\u6709\u4e86\u4e0a\u6807 \\(k\\) \u7136\u540e\u5bf9 \\([x_k,x_{k+1}]\\) \u8fd9\u4e2a\u5c0f\u533a\u95f4\u4f7f\u7528Galerkin\u65b9\u6cd5\u7684\u5206\u6790\uff08\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff1a \\(\\displaystyle\\int_{x_k}^{x_{k+1}}(A\\tilde u(x)-f)\\phi_j^kdx=0,\\ j=0,1\\) \u540c\u6837\uff0c\u8bb0 \\(H_k(f)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)dx\\) \u53ef\u4ee5\u5f97\u5230\u9488\u5bf9\u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u5f62\u5f0f\uff1a \\(\\begin{bmatrix}H_k(\\phi_0^kA\\phi_0^k)\\quad H_k(\\phi_0^kA\\phi_1^k)\\\\H_k(\\phi_1^kA\\phi_0^k)\\quad H_k(\\phi_1^kA\\phi_1^k)\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}H_k(f\\phi_0^k)\\\\H_k(f\\phi_1^k)\\end{bmatrix}\\) \u4f46\u662f\u8fd9\u8fd8\u4e0d\u591f\uff0c\u9700\u8981\u5bf9\u5168\u5c40\u7684\u77e9\u9635\u8fdb\u884c\u7ec4\u88c5","title":"3.1 \u9488\u5bf9\u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4"},{"location":"test/#32","text":"\u9996\u5148\uff0c\u4e0a\u8ff0\u7ebf\u6027\u65b9\u7a0b\u7ec4\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a \\(A_{ij}^ku_k=b_i^k\\) \uff0c\u5176\u4e2d\uff1a \\(\\left\\{\\begin{aligned}&A_{ij}^k=H_k(\\phi_i^kA\\phi_j^k),\\quad i,j\\in {0,1}\\\\&b_i^k=H_k(f\\phi_i^k),\\quad i=0,1\\end{aligned}\\right.\\) \uff0c \\(u_k\\) \u5219\u662f\u65b9\u7a0b\u7b2c \\(k\\) \u6bb5\u7684\u89e3\uff0c\u9700\u8981\u6c42\u89e3 \u5176\u4e2d \\(i,j,k\\) \u7684\u542b\u4e49\u662f\uff1a \\(k\\) \u662f\u7b2c\u51e0\u4e2a\u5355\u5143 \u6839\u636e\u57fa\u51fd\u6570\u7684\u5b9a\u4e49\uff0c \\(A_{ij}^k\\) \u8868\u793a\u8282\u70b9 \\(j\\) \u5bf9\u8282\u70b9 \\(i\\) \u5904\u7684\u8d21\u732e \\(b_i^k\\) \u8868\u793a\u8282\u70b9 \\(i\\) \u5904\u6240\u83b7\u5f97\u7684\u8d21\u732e\u503c \u5047\u8bbe\uff0c\u6211\u4eec\u628a\u5168\u5c40\u5206\u6210\u4e863\u6bb5\uff0c\u5219\u67094\u4e2a\u8282\u70b9\uff0c\u5373 \\(k=0,1,2,3\\) \\(|_{u_0}\\_\\_\\_Unit\\_0\\_\\_\\_|_{u_1}\\_\\_\\_Unit\\_1\\_\\_\\_|_{u_2}\\_\\_\\_Unit\\_2\\_\\_\\_|_{u_3}\\) \u62ff \\(u_1\\) \u8fd9\u4e2a\u70b9\u6765\u4e3e\u4f8b\uff0c\u56e0\u4e3a\u5b83\u6a2a\u8de8\u4e86 \\(Unit0\\) \u548c \\(Unit1\\) \u5728 \\(Unit0\\) \u4e0a \u8282\u70b9 \\(u_0\\) \u5bf9 \\(u_0\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^0u_0\\) \u8282\u70b9 \\(u_0\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{10}^0u_0\\) \u8282\u70b9 \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{11}^0u_1\\) \\(b\\) \u5219\u662f\u8be5\u8282\u70b9\u4e0a\u7684\u603b\u8d21\u732e\u503c \\(\\begin{bmatrix}A_{00}^0\\quad A_{01}^0\\\\A_{10}^0\\quad A_{11}^0\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0\\end{bmatrix}\\) \u5728 \\(Unit1\\) \u4e0a \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^1u_1\\) \u8282\u70b9 \\(u_2\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{01}^1u_2\\) \\(\\begin{bmatrix}A_{00}^1\\quad A_{01}^1\\\\A_{10}^1\\quad A_{11}^1\\end{bmatrix}\\begin{bmatrix}u_1\\\\u_2\\end{bmatrix}=\\begin{bmatrix}b_0^1\\\\b_1^1\\end{bmatrix}\\) \u5728 \\(Unit2\\) \u4e0a \u540c\u4e0a \\(\\begin{bmatrix}A_{00}^2\\quad A_{01}^2\\\\A_{10}^2\\quad A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^2\\\\b_1^2\\end{bmatrix}\\) \u5173\u4e8e\u8282\u70b9 \\(u_k\\) \u7684\u77e9\u9635\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a \\(\\begin{bmatrix}&u_k\u70b9\u5bf9u_k\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_k\u70b9\u7684\u8d21\u732e\\\\&u_k\u70b9\u5bf9u_{k+1}\u70b9\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_{k+1}\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}u_k\u5904\u7684\u603b\u8d21\u732e\u503c\\\\u_{k+1}\u5904\u7684\u603b\u8d21\u732e\u503c\\end{bmatrix}\\) \u5c06\u4e0a\u8ff03\u4e2a\u77e9\u9635\u6839\u636e \\(u_k\\) \u8fdb\u884c\u62fc\u63a5\uff0c\u7ec4\u88c5\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6700\u7ec8\u7684\u5f62\u5f0f \\(Ax=b\\) \uff1a \\(\\begin{bmatrix}&A_{00}^0\\quad &A_{01}^0\\quad &0 \\quad &0\\\\&A_{10}^0\\quad &A_{11}^0+A_00^1 \\quad &A_{01}^1 \\quad &0\\\\&0 \\quad &A_{10}^1 \\quad &A_{11}^1+A_{00}^2 \\quad &0\\\\&0 \\quad &0 \\quad &A_{10}^2 \\quad &A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0 + b_0^1\\\\b_0^2+b_1^1\\\\b_1^2\\end{bmatrix}\\) \u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u6c42\u5f97\u7684 \\(u_0,u_1,u_2,u_3\\) \u5c31\u662f\u4e4b\u524d\u5047\u8bbe\u5728 \\(u(x_0),u(x_1),u(x_2),u(x_3)\\) \u4e0a\u7684\u89e3\u3002 \u4ee5\u4e0a\u4e3a\u5c40\u90e8\u4f7f\u7528Galerkin\u65b9\u6cd5\u83b7\u53d6\u5f31\u89e3\u5f62\u5f0f\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u56e0\u4e3a\u628a\u6574\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e86\u6709\u9650\u4e2a\u533a\u57df\uff0c\u6240\u4ee5\u4e5f\u53eb\u6709\u9650\u5143\u65b9\u6cd5\u3002","title":"3.2 \u5bf9\u5168\u5c40\u8fdb\u884c\u77e9\u9635\u7684\u7ec4\u88c5"},{"location":"test/#33","text":"\u4ee4 \\(\\xi=\\displaystyle\\frac{x-x_k}{h_k}\\) \uff0c \\(h_kd\\xi=dx\\) \u5219 \\(\\left\\{\\begin{aligned}&\\phi_0^k=1-\\xi\\\\&\\phi_1^k=\\xi\\end{aligned}\\right.\\) \u90a3\u4e48\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}\\phi_i^kA\\phi_j^kdx=h_k\\int_0^1\\phi_i^kA\\phi_j^kd\\xi\\) \u5e76\u4e14\uff0c \\(H_k(f\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)\\phi_j^kdx=h_k\\int_0^1f(h_k\\xi+x_k)\\phi_j^kd\\xi\\) \u5f53\u5fae\u5206\u7b97\u5b50 \\(A\\) \u5df2\u77e5\u7684\u65f6\u5019\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)\\) \u90fd\u53ef\u4ee5\u663e\u5f0f\u5730\u5199\u51fa\u6765\uff0c\u4f46\u662f\uff0c\u7531\u4e8e \\(f(x)\\) \u5f80\u5f80\u6ca1\u6709\u80fd\u591f\u76f4\u63a5\u5199\u51fa\u6765\u7684\u663e\u5f0f\u79ef\u5206\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u5728 \\(h_k\\) \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u7528Simpson\u516c\u5f0f/\u7b80\u5355\u7684\u68af\u5f62\u516c\u5f0f\u8fdb\u884c\u8fd1\u4f3c\uff1a \\(H_k(f\\phi_0^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[f(x)+2f(x_k+\\frac{h_k}{2})]\\) \\(H_k(f\\phi_1^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[2f(x_k+\\frac{h_k}{2})+f(x_{k+1})]\\)","title":"3.3 \u79ef\u5206\u6362\u5143"},{"location":"test/#34","text":"\u6c42\u89e3\u4f8b\u5b50\uff1a \\(\\displaystyle\\frac{du}{dx}=x^3e^x\\) \u53ef\u4ee5\u5f97\u5230\u5fae\u5206\u7b97\u5b50 \\(A=\\displaystyle\\frac{d}{dx}=\\frac{1}{h_k}\\frac{d}{d\\xi}\\) \uff0c\u5c06\u5fae\u5206\u7b97\u5b50\u4ee3\u5165\u516c\u5f0f\u53ef\u5f97\uff1a \\(\\left\\{\\begin{aligned}&H_k(\\phi_0^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1(1-\\xi)d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_0^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1(1-\\xi)d\\xi=\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1\\xi d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1\\xi d\\xi=\\frac{1}{2}\\end{aligned}\\right.\\) \u7531\u6b64\u53ef\u5f97 \\(Ax=b\\) \u4e3a\uff1a \\(\\begin{bmatrix}&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}&0&0&\\cdots&0\\\\&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&0&\\cdots &0\\\\&0&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&\\cdots &\\vdots\\\\&\\vdots&\\vdots&\\vdots&\\ddots&\\cdots&0\\\\&0&0&0&0&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\\\vdots\\\\u_{k-1}\\\\u_k\\end{bmatrix}=\\begin{bmatrix}\\displaystyle\\frac{6}{h_0}[f(x_0)+2f(x_0+\\displaystyle\\frac{h_0}{2})\\\\\\displaystyle\\frac{6}{h_0}[2f(x_0+\\displaystyle\\frac{h_0}{2})+f(x_1)]+\\displaystyle\\frac{6}{h_1}[f(x_1)+2f(x_1+\\displaystyle\\frac{h_1}{2})\\\\\\vdots\\\\\\displaystyle\\frac{6}{h_{k-1}}[2f(x_{k-1}+\\displaystyle\\frac{h_{k-1}}{2})+f(x_{k-1})]+\\displaystyle\\frac{6}{h_{k}}[f(x_{k})+2f(x_{k}+\\displaystyle\\frac{h_{k}}{2})\\\\?\\end{bmatrix}\\)","title":"3.4 \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7684\u4f8b\u5b50"},{"location":"test/#_6","text":"\u7ecf\u8fc7\u4ed6\u4eba\u7684\u52aa\u529b\u53d1\u73b0\uff0c\u5bf9\u4e8e \\(u^{'}=f\\) \u7684\u65b9\u7a0b\uff0c\u7528\u6709\u9650\u5143\u8fdb\u884c\u5212\u5206\uff0c\u672c\u8d28\u4e0a\u548c\u6709\u9650\u5dee\u5206\u6cd5\uff08FDM\uff09\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\u7c7b\u4f3c\u7684\u3002\u867d\u7136Galerkin\u65b9\u6cd5\u5728\u6bcf\u4e2a\u5355\u5143\u7684\u64cd\u4f5c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u6700\u7ec8\u548cFDM\u4e00\u6837\uff0c\u90fd\u662f\u5728\u8282\u70b9\u5904\u7528\u5dee\u5546\u4ee3\u66ff\u5fae\u5143\uff0c\u5728\u8fb9\u754c\u5904\u5f00\u59cb\u4e00\u6b65\u6b65\u9012\u8fdb\u8fd0\u7b97\u3002","title":"\u7ed3\u8bba"},{"location":"test/#_7","text":"\u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e8c\uff09","title":"\u53c2\u8003"},{"location":"test/#4","text":"\u5212\u5206\u5355\u5143\u7684\u4f3d\u8fbd\u91d1\u6cd5\u4e2d\uff0c\u5212\u5206\u51fa\u6765\u5404\u6bb5\u7684\u6700\u7ec8\u51fd\u6570\u503c\u90fd\u662f\u4e00\u6761\u76f4\u7ebf\uff0c\u4e00\u6761\u7531\u5355\u5143\u4e24\u7aef\u51fd\u6570\u63a7\u5236\u7684\u76f4\u7ebf\u3002 \u4f46\u662f\u5355\u5143\u5185\u51fd\u6570\u5448\u7ebf\u6027\u53d8\u5316\uff0c\u4e14\u5355\u5143\u95f4\u4e24\u6761\u76f4\u7ebf\u659c\u7387\u4e0d\u4e00\u6837\u4f1a\u4ea7\u751f\u201c\u6298\u89d2\u201d\uff0c\u4e0d\u591f\u5149\u6ed1\u3002 \u53ef\u5426\u4f7f\u63d2\u503c\u51fd\u6570\u53d8\u5f97\u5149\u6ed1\uff08\u82e5\u5e72\u4ecb\u5bfc\u6570\u503c\u76f8\u540c\uff09\uff1f \u7b54\u6848\uff1a\u6837\u6761\u51fd\u6570\uff0c\u6837\u6761\u63d2\u503c\u65b9\u6cd5\u3002 \u4e09\u6b21\u6837\u6761\uff0c\u5373\u4e09\u5f2f\u77e9\u65b9\u7a0b\uff0c\u662f\u4f7f\u7528\u5f97\u6700\u5e7f\u6cdb\u7684\u3002\u56e0\u4e3a\u5176\u80fd\u4fdd\u8bc1\u4e8c\u9636\u5bfc\u6570\u503c\u76f8\u540c\uff0c\u4ece\u800c\u5e73\u6ed1\u3002","title":"4. \u66f4\u597d\u7684\u7ebf\u6027\u63d2\u503c"},{"location":"algorithm/","text":"","title":"Index"},{"location":"algorithm/complexity/","text":"\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6 \\(T(n) = O(f(n))\\) \\(f(n)\\) \u8868\u793a\u6bcf\u884c\u4ee3\u7801\u6267\u884c\u6b21\u6570\u4e4b\u548c\uff0c \\(O\\) \u8868\u793a\u6210\u6b63\u6bd4\u4f8b\u5173\u7cfb\u3002\u5168\u79f0\u4e3a \u7b97\u6cd5\u7684\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6 \u5e38\u6570\u9636 \\(O(1)\\) : \u65e0\u8bba\u4ee3\u7801\u6267\u884c\u591a\u5c11\u884c\uff0c\u53ea\u8981\u6ca1\u6709\u5faa\u73af\u7b49\u590d\u6742\u7ed3\u6784\uff0c\u4ee3\u7801\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(1)\\) \u7ebf\u6027\u9636 \\(O(n)\\) : \u4f8b\u5982for\u5faa\u73af\u91cc\u7684\u4ee3\u7801\uff0c\u4f1a\u6267\u884cn\u6b21\uff0c\u5b83\u6d88\u8017\u7684\u65f6\u95f4\u5c31\u662f\u968f\u7740n\u7684\u53d8\u5316\u800c\u53d8\u5316\u7684\uff0c\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(n)\\) \u5bf9\u6570\u9636 \\(O(log_n)\\) : \u4f8b\u5982 while i<n: i = i *2 \uff0c\u8fd9\u91cc\uff0c\u6bcf\u6b21i\u4e58\u4ee52\u4ee5\u540e\uff0ci\u8ddd\u79bbn\u4f1a\u8d8a\u6765\u8d8a\u8fd1\u3002\u5faa\u73afx\u6b21\u4ee5\u540e\uff0c\u5faa\u73af\u6761\u4ef6\u6ee1\u8db3\uff0c\u9000\u51fa\u3002\u8fd9\u91ccx = \\(log2^n\\) \u5e73\u65b9\u9636 \\(O(n^2)\\) : \u4e24\u4e2an\u6b21for\u5faa\u73af\u5d4c\u5957\uff0c\u5219\u65f6\u95f4\u6d88\u8017\u5c31\u662f \\(n^2\\) \uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2\\) ) \u7acb\u65b9\u9636\u3001k\u6b21\u65b9\u9636\u7c7b\u4f3c","title":"\u590d\u6742\u5ea6"},{"location":"algorithm/complexity/#_1","text":"\\(T(n) = O(f(n))\\) \\(f(n)\\) \u8868\u793a\u6bcf\u884c\u4ee3\u7801\u6267\u884c\u6b21\u6570\u4e4b\u548c\uff0c \\(O\\) \u8868\u793a\u6210\u6b63\u6bd4\u4f8b\u5173\u7cfb\u3002\u5168\u79f0\u4e3a \u7b97\u6cd5\u7684\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6 \u5e38\u6570\u9636 \\(O(1)\\) : \u65e0\u8bba\u4ee3\u7801\u6267\u884c\u591a\u5c11\u884c\uff0c\u53ea\u8981\u6ca1\u6709\u5faa\u73af\u7b49\u590d\u6742\u7ed3\u6784\uff0c\u4ee3\u7801\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(1)\\) \u7ebf\u6027\u9636 \\(O(n)\\) : \u4f8b\u5982for\u5faa\u73af\u91cc\u7684\u4ee3\u7801\uff0c\u4f1a\u6267\u884cn\u6b21\uff0c\u5b83\u6d88\u8017\u7684\u65f6\u95f4\u5c31\u662f\u968f\u7740n\u7684\u53d8\u5316\u800c\u53d8\u5316\u7684\uff0c\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(n)\\) \u5bf9\u6570\u9636 \\(O(log_n)\\) : \u4f8b\u5982 while i<n: i = i *2 \uff0c\u8fd9\u91cc\uff0c\u6bcf\u6b21i\u4e58\u4ee52\u4ee5\u540e\uff0ci\u8ddd\u79bbn\u4f1a\u8d8a\u6765\u8d8a\u8fd1\u3002\u5faa\u73afx\u6b21\u4ee5\u540e\uff0c\u5faa\u73af\u6761\u4ef6\u6ee1\u8db3\uff0c\u9000\u51fa\u3002\u8fd9\u91ccx = \\(log2^n\\) \u5e73\u65b9\u9636 \\(O(n^2)\\) : \u4e24\u4e2an\u6b21for\u5faa\u73af\u5d4c\u5957\uff0c\u5219\u65f6\u95f4\u6d88\u8017\u5c31\u662f \\(n^2\\) \uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2\\) ) \u7acb\u65b9\u9636\u3001k\u6b21\u65b9\u9636\u7c7b\u4f3c","title":"\u7b97\u6cd5\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6"},{"location":"algorithm/dynamic-planning/","text":"","title":"Index"},{"location":"books/design-pattern/","text":"Hands-On Design Patterns with C++ 1. Introduction to Inheritance and Polymorphism \u7ee7\u627f\u548c\u591a\u6001 Combining algorithms and data to be operated into single objects An object is a concrete instantiation of a class It is one of the signs of good design when the data is well encapsulated in the classes, and the methods have limited interaction with external data. A well-designed class hast mostly, or only, private data members, and the only public methods are those needed to express the public interface of the class \u597d\u7684\u8bbe\u8ba1\u662f\uff0c\u6570\u636e\u88ab\u5c01\u88c5\u5728\u7c7b\u5185\uff0c\u800c\u65b9\u6cd5\u4e0e\u5916\u754c\u7684\u6570\u636e\u53ea\u6709\u6709\u9650\u7684\u4ea4\u4e92\u3002\u4e00\u4e2a\u597d\u7684\u7c7b\u8bbe\u8ba1\u57fa\u672c\u4e0a\u53ea\u6709\u79c1\u6709\u6570\u636e\u4e58\u5458\uff0c\u5e76\u4e14\uff0c\u4ec5\u6709\u7684\u90a3\u4e9b\u516c\u5171\u65b9\u6cd5\uff0c\u4e5f\u662f\u8be5\u7c7b\u9700\u8981\u6709\u7684\u516c\u5171\u63a5\u53e3\u3002","title":"Hands-On Design Patterns with C++"},{"location":"books/design-pattern/#hands-on-design-patterns-with-c","text":"","title":"Hands-On Design Patterns with C++"},{"location":"books/design-pattern/#1-introduction-to-inheritance-and-polymorphism","text":"\u7ee7\u627f\u548c\u591a\u6001 Combining algorithms and data to be operated into single objects An object is a concrete instantiation of a class It is one of the signs of good design when the data is well encapsulated in the classes, and the methods have limited interaction with external data. A well-designed class hast mostly, or only, private data members, and the only public methods are those needed to express the public interface of the class \u597d\u7684\u8bbe\u8ba1\u662f\uff0c\u6570\u636e\u88ab\u5c01\u88c5\u5728\u7c7b\u5185\uff0c\u800c\u65b9\u6cd5\u4e0e\u5916\u754c\u7684\u6570\u636e\u53ea\u6709\u6709\u9650\u7684\u4ea4\u4e92\u3002\u4e00\u4e2a\u597d\u7684\u7c7b\u8bbe\u8ba1\u57fa\u672c\u4e0a\u53ea\u6709\u79c1\u6709\u6570\u636e\u4e58\u5458\uff0c\u5e76\u4e14\uff0c\u4ec5\u6709\u7684\u90a3\u4e9b\u516c\u5171\u65b9\u6cd5\uff0c\u4e5f\u662f\u8be5\u7c7b\u9700\u8981\u6709\u7684\u516c\u5171\u63a5\u53e3\u3002","title":"1. Introduction to Inheritance and Polymorphism"},{"location":"languages/c%2B%2B/","text":"","title":"Index"},{"location":"languages/python/","text":"","title":"Index"},{"location":"languages/rust/","text":"","title":"Index"},{"location":"math/","text":"","title":"Index"},{"location":"math/diff-operators/","text":"\u5fae\u5206\u7b97\u5b50 \u76ee\u6807 \u4e86\u89e3\u4ec0\u4e48\u662f\u5fae\u5206\u7b97\u5b50\u3002 1. \u68af\u5ea6 Gradient \\(\\nabla:\\mathbb{R}^1\\rightarrow \\mathbb{R}^3\\) \u5bf9\u4e00\u4e2a\u6807\u91cf\u8fdb\u884c\u68af\u5ea6\u8ba1\u7b97\uff0c\u4ece\u4e00\u7ef4\u5230\u4e09\u7ef4 \\(grad\\ s=\\nabla s = \\left[\\displaystyle\\frac{\\partial s}{\\partial x}, \\displaystyle\\frac{\\partial s}{\\partial y}, \\displaystyle\\frac{\\partial s}{\\partial z}\\right]^T\\) \u4f8b\u5982\u4e00\u4e2a\u901f\u5ea6\uff0c\u901f\u5ea6\u68af\u5ea6\uff1f 2. \u6563\u5ea6 Divergence \\(\\nabla\\cdot:\\mathbb{R}^3\\rightarrow \\mathbb{R}^1\\) \u5bf9\u4e00\u4e2a\u4e09\u7ef4\u5411\u91cf\u8fdb\u884c\u6563\u5ea6\u8ba1\u7b97\uff0c\u4ece\u4e09\u7ef4\u5230\u4e00\u4e2a\u4e00\u7ef4\u7684\u6807\u91cf \\(div\\ v = \\nabla \\cdot v = \\displaystyle\\frac{\\partial v_x}{\\partial x}+\\displaystyle\\frac{\\partial v_y}{\\partial y}+\\displaystyle\\frac{\\partial v_z}{\\partial z}\\) \u4f8b\u5982\u4e00\u4e2a\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\uff0c\u5728\u6d41\u51fa\u7684\u65f6\u5019\uff0c\u5982\u679cx\u65b9\u5411\u7684\u5bfc\u6570\u8fc7\u5927\uff08x\u65b9\u5411\u6d41\u51fa\u8fc7\u591a\uff09\uff0c\u90a3\u4e48y\u65b9\u5411\u7684\u5bfc\u6570\u76f8\u5e94\u8981\u5f88\u5c0f\uff08y\u65b9\u5411\u6d41\u51fa\u4e3a\u8d1f\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u63cf\u8ff0\u6d41\u4f53\u5728\u6d41\u52a8\u8fc7\u7a0b\u4e2d\u603b\u7684 \u4f53\u79ef \u4e0d\u53d8\u3002 \u901f\u5ea6\u7684\u6563\u5ea6\u70b9\u4e58\u5bc6\u5ea6\u7684\u8bdd\uff0c \\(\\rho(\\nabla \\cdot v)\\) \uff0c\u7b49\u4e8e\u63cf\u8ff0\u4e86\u6d41\u4f53\u5728\u6d41\u52a8\u8fc7\u7a0b\u4e2d\u603b\u7684 \u8d28\u91cf \u4e0d\u53d8\u3002 3. \u65cb\u5ea6 Curl \\(\\nabla \\times:\\mathbb{R}^3\\rightarrow\\mathbb{R}^3\\) \\(curl\\ v=\\nabla \\times v =\\left[\\displaystyle\\frac{\\partial v_z}{\\partial y}-\\displaystyle\\frac{\\partial v_y}{\\partial z}, \\displaystyle\\frac{\\partial v_x}{\\partial x}-\\displaystyle\\frac{\\partial v_x}{\\partial z}, \\displaystyle\\frac{\\partial v_y}{\\partial x}-\\displaystyle\\frac{\\partial v_x}{\\partial y}\\right]^T\\) 4. \u62c9\u666e\u62c9\u65af \u7b97\u5b50 \\(Laplace\\ \\Delta=\\nabla^2=\\nabla \\cdot \\nabla:\\mathbb{R}^n\\rightarrow\\mathbb{R}^n\\) \\(laplace\\ s=div(grad\\ s)=\\nabla^2s=\\displaystyle\\frac{\\partial^2 s}{\\partial x^2}+\\displaystyle\\frac{\\partial^2 s}{\\partial y^2}+\\displaystyle\\frac{\\partial^2 s}{\\partial z^2}\\) \u4f8b\u5982\u6269\u6563 \u95ee\u9898 \u51e0\u4e2a\u5b66\u79d1\u4e2d\u7684\u5e94\u7528","title":"\u5fae\u5206\u7b97\u5b50"},{"location":"math/diff-operators/#_1","text":"","title":"\u5fae\u5206\u7b97\u5b50"},{"location":"math/diff-operators/#_2","text":"\u4e86\u89e3\u4ec0\u4e48\u662f\u5fae\u5206\u7b97\u5b50\u3002","title":"\u76ee\u6807"},{"location":"math/diff-operators/#1","text":"Gradient \\(\\nabla:\\mathbb{R}^1\\rightarrow \\mathbb{R}^3\\) \u5bf9\u4e00\u4e2a\u6807\u91cf\u8fdb\u884c\u68af\u5ea6\u8ba1\u7b97\uff0c\u4ece\u4e00\u7ef4\u5230\u4e09\u7ef4 \\(grad\\ s=\\nabla s = \\left[\\displaystyle\\frac{\\partial s}{\\partial x}, \\displaystyle\\frac{\\partial s}{\\partial y}, \\displaystyle\\frac{\\partial s}{\\partial z}\\right]^T\\) \u4f8b\u5982\u4e00\u4e2a\u901f\u5ea6\uff0c\u901f\u5ea6\u68af\u5ea6\uff1f","title":"1. \u68af\u5ea6"},{"location":"math/diff-operators/#2","text":"Divergence \\(\\nabla\\cdot:\\mathbb{R}^3\\rightarrow \\mathbb{R}^1\\) \u5bf9\u4e00\u4e2a\u4e09\u7ef4\u5411\u91cf\u8fdb\u884c\u6563\u5ea6\u8ba1\u7b97\uff0c\u4ece\u4e09\u7ef4\u5230\u4e00\u4e2a\u4e00\u7ef4\u7684\u6807\u91cf \\(div\\ v = \\nabla \\cdot v = \\displaystyle\\frac{\\partial v_x}{\\partial x}+\\displaystyle\\frac{\\partial v_y}{\\partial y}+\\displaystyle\\frac{\\partial v_z}{\\partial z}\\) \u4f8b\u5982\u4e00\u4e2a\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\uff0c\u5728\u6d41\u51fa\u7684\u65f6\u5019\uff0c\u5982\u679cx\u65b9\u5411\u7684\u5bfc\u6570\u8fc7\u5927\uff08x\u65b9\u5411\u6d41\u51fa\u8fc7\u591a\uff09\uff0c\u90a3\u4e48y\u65b9\u5411\u7684\u5bfc\u6570\u76f8\u5e94\u8981\u5f88\u5c0f\uff08y\u65b9\u5411\u6d41\u51fa\u4e3a\u8d1f\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u63cf\u8ff0\u6d41\u4f53\u5728\u6d41\u52a8\u8fc7\u7a0b\u4e2d\u603b\u7684 \u4f53\u79ef \u4e0d\u53d8\u3002 \u901f\u5ea6\u7684\u6563\u5ea6\u70b9\u4e58\u5bc6\u5ea6\u7684\u8bdd\uff0c \\(\\rho(\\nabla \\cdot v)\\) \uff0c\u7b49\u4e8e\u63cf\u8ff0\u4e86\u6d41\u4f53\u5728\u6d41\u52a8\u8fc7\u7a0b\u4e2d\u603b\u7684 \u8d28\u91cf \u4e0d\u53d8\u3002","title":"2. \u6563\u5ea6"},{"location":"math/diff-operators/#3","text":"Curl \\(\\nabla \\times:\\mathbb{R}^3\\rightarrow\\mathbb{R}^3\\) \\(curl\\ v=\\nabla \\times v =\\left[\\displaystyle\\frac{\\partial v_z}{\\partial y}-\\displaystyle\\frac{\\partial v_y}{\\partial z}, \\displaystyle\\frac{\\partial v_x}{\\partial x}-\\displaystyle\\frac{\\partial v_x}{\\partial z}, \\displaystyle\\frac{\\partial v_y}{\\partial x}-\\displaystyle\\frac{\\partial v_x}{\\partial y}\\right]^T\\)","title":"3. \u65cb\u5ea6"},{"location":"math/diff-operators/#4","text":"\\(Laplace\\ \\Delta=\\nabla^2=\\nabla \\cdot \\nabla:\\mathbb{R}^n\\rightarrow\\mathbb{R}^n\\) \\(laplace\\ s=div(grad\\ s)=\\nabla^2s=\\displaystyle\\frac{\\partial^2 s}{\\partial x^2}+\\displaystyle\\frac{\\partial^2 s}{\\partial y^2}+\\displaystyle\\frac{\\partial^2 s}{\\partial z^2}\\) \u4f8b\u5982\u6269\u6563","title":"4. \u62c9\u666e\u62c9\u65af \u7b97\u5b50"},{"location":"math/diff-operators/#_3","text":"\u51e0\u4e2a\u5b66\u79d1\u4e2d\u7684\u5e94\u7528","title":"\u95ee\u9898"},{"location":"math/distances/","text":"\u95f5\u6c0f\u8ddd\u79bb (Minkowski Distance)\uff0c\u662f\u4e00\u79cd\u63a8\u5e7f\u3002\u53d6\u51b3\u4e8ep\u503c\u3002 \u82f1\u8bed \u4e2d\u6587 \u89e3\u91ca \u4f5c\u7528 p Manhattan Distance \u66fc\u54c8\u987f\u8ddd\u79bb \u5750\u6807\u8f74\u4e0a\u7684\u7edd\u5bf9\u8f74\u8ddd\u4e4b\u548c 1 Euclidean Distance \u6b27\u6c0f\u8ddd\u79bb \u4e8c\u7ef4\u548c\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5b9e\u9645\u8ddd\u79bb\u3002\u9ad8\u7ef4\uff1a\u5411\u91cf\u7684\u81ea\u7136\u957f\u5ea6\u3002 2 Standardized Euclidean Distance \u6807\u51c6\u5316\u6b27\u6c0f\u8ddd\u79bb \u6807\u51c6\u5316\u6570\u636e\u4e4b\u540e\u8ba1\u7b97\u6b27\u6c0f\u8ddd\u79bb Mahalanobis Distance \u9a6c\u6c0f\u8ddd\u79bb \u5f52\u4e00\u5316\u6570\u636e\u5230[0,1]\u4e4b\u540e\u6c42\u6b27\u6c0f\u8ddd\u79bb \u6392\u9664\u91cf\u7eb2\u7684\u5e72\u6270 Cosine Distance \u4f59\u5f26\u8ddd\u79bb \u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\u4f59\u5f26\u516c\u5f0f \u8861\u91cf\u4e24\u4e2a\u5411\u91cf\u65b9\u5411\u7684\u5dee\u5f02 Hamming Distance \u6c49\u660e\u8ddd\u79bb \u4e24\u4e2a\u7b49\u957f\u5b57\u7b26\u4e32s1\u4e0es2\u7684\u6c49\u660e\u8ddd\u79bb\u4e3a\uff1a\u5c06\u5176\u4e2d\u4e00\u4e2a\u53d8\u4e3a\u53e6\u5916\u4e00\u4e2a\u6240\u9700\u8981\u4f5c\u7684\u6700\u5c0f\u5b57\u7b26\u4e32\u66ff\u6362\u6570 \u4fe1\u606f\u7f16\u7801\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u589e\u5f3a\u5bb9\u9519\u6027\uff0c\u5e94\u4f7f\u5f97\u7f16\u7801\u95f4\u7684\u6700\u5c0f\u6c49\u660e\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5927 Jaccard Distance \u6770\u5361\u5fb7\u8ddd\u79bb \u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u4ea4\u96c6\u4e2a\u6570n\uff0c\u5728\u5b83\u4eec\u5e76\u96c6\u4e2a\u6570m\u4e0a\u7684\u6bd4\u4f8b n/m \u4e24\u4e2a\u96c6\u5408\u4e2d\u4e0d\u540c\u5143\u7d20\u5360\u6240\u6709\u5143\u7d20\u7684\u6bd4\u4f8b\u6765\u8861\u91cf\u4e24\u4e2a\u96c6\u5408\u7684\u533a\u5206\u5ea6 Correlation Distance \u76f8\u5173\u8ddd\u79bb \u4e5f\u53eb\u76f8\u5173\u7cfb\u6570 Information Entropy \u4fe1\u606f\u71b5 \u7cfb\u7edf\u5185\u90e8\u6837\u672c\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6216\u53eb \u7cfb\u7edf\u5185\u6837\u672c\u5206\u5e03\u7684\u96c6\u4e2d\u7a0b\u5ea6\u3001\u5206\u6563\u7a0b\u5ea6\u7b49 \u3002 \u4fe1\u606f\u71b5\u8d8a\u5927\u8868\u660e\u6837\u672c\u96c6S\u7684\u5206\u5e03\u8d8a\u5206\u6563\uff0c\u53cd\u4e4b\u8d8a\u96c6\u4e2d","title":"\u8ddd\u79bb\u5ea6\u91cf"},{"location":"math/euler-eq/","text":"\u6b27\u62c9\u516c\u5f0f \u76ee\u6807 \u7406\u89e3\u4e00\u4e0b\u6b27\u62c9\u516c\u5f0f\u7684\u57fa\u672c\u6982\u5ff5\u3002 1. \u9ea6\u514b\u52b3\u6797\u7ea7\u6570 \u4ece\u6cf0\u52d2\u7ea7\u6570\uff0c\u5230\u9ea6\u514b\u52b3\u6797\u7ea7\u6570 \u7ea7\u6570=\u903c\u8fd1 \u4e3e\u4e00\u4e2a\u56db\u6b21\u65b9\u7684\u4f8b\u5b50 \\((1)\\) \\(f(x)=Ax^4+Bx^3+Cx^2+Dx+E \\qquad (1)\\) \\(\\rightarrow f(0)=E\\) \\(\\rightarrow f^{'}(x)=4Ax^3+3Bx^2+2Cx+D\\quad \\rightarrow f^{'}(0)=D\\) \u540c\u7406\uff1a \\(f^{''}(0)=2C\\) \\(f^{'''}(0)=6B\\) \u5219\u4ece \\((1)\\) \u5f97\u5230\uff1a \\(f(x)=\\displaystyle\\frac{f^{(4)}(0)}{(4\\times3\\times2\\times1)}x^4+\\frac{f^{(3)}(0)}{(3\\times2\\times1)}x^3+\\frac{f^{(2)}(0)}{(2\\times1)}x^2+\\frac{f^{(1)}(0)}{(1)}x^1+f(0)x^0\\) \u9636\u4e58 factorial \u9ea6\u514b\u52b3\u6797\u7ea7\u6570 \\((3)\\) \u662f\u6cf0\u52d2\u7ea7\u6570\u5728 \\(x=0\\) \u5c55\u5f00\u7684\u7279\u6b8a\u60c5\u51b5 \\(f(x)=\\displaystyle\\sum_{n=0}^{\\infty}\\frac{f^{(n)}(0)}{n!}x^n \\qquad (3)\\) 2. \u4e09\u89d2\u51fd\u6570 \\(f(x)=sin(x)\\) \u6c42\u5bfc \\(f^{'}(x)=cos(x)\\) \u4f7f\u7528\u9ea6\u514b\u52b3\u6797\u7ea7\u6570\u5bf9 \\(f(x)=sin(x)\\) \u5c55\u5f00\uff0c\u5f97\u5230 \\(f(x)=sin(x)=f(0)+f^{'}(0)x+\\displaystyle\\frac{f^{''}(0)}{2!}x^2 + \\frac{f^{'''}(0)}{3!}x^3...\\) \u5373 \\(sinx=0+1x+0\\displaystyle\\frac{x^2}{2!}+(-1)\\frac{x^3}{3!}+...\\qquad (4)\\) \u518d\u4f7f\u7528\u9ea6\u514b\u52b3\u6797\u7ea7\u6570\u5bf9 \\(f(x)=cos(x)\\) \u5c55\u5f00\uff0c\u5f97\u5230 \\(cosx=1+0x+(-1)\\displaystyle\\frac{x^2}{2!}+0\\frac{x^3}{3!}+...\\qquad (5)\\) \u518d\u4f7f\u7528\u9ea6\u514b\u52b3\u6797\u7ea7\u6570\u5bf9 \\(f(x)=e^x\\) \u5c55\u5f00 \\(e^x=1+x+\\displaystyle\\frac{x^2}{2!}+\\frac{x^3}{3!}+...\\qquad (6)\\) \u5982\u679c\u628a\u516c\u5f0f \\((4)\\) \u548c\u516c\u5f0f \\((5)\\) \u76f8\u52a0\uff0c\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u516c\u53f8 \\((6)\\) \u7684\u516c\u5f0f\uff0c\u4f46\u662f\u6709\u4e9b\u9879\u7684\u7b26\u53f7\u4e3a\u8d1f\u3002 \u4e3a\u4e86\u6d88\u9664\u8d1f\u53f7\uff0c\u6b27\u62c9\u5f15\u5165\u4e86 \\(i^2=-1\\) \u6839\u636e\u516c\u5f0f \\((6)\\) \uff0c\u6709\u5982\u4e0b\u516c\u5f0f \\(e^{xi}=1+xi+i^2\\displaystyle\\frac{x^2}{2!}+i^2\\frac{x^3i}{3!}+...\\qquad (7)\\) \u8c03\u548c\u516c\u5f0f \\((4)\\) \u548c\u516c\u5f0f \\((5)\\) \uff0c \\(i\\ast sinx+cosx\\) \uff0c\u53ef\u4ee5\u5f97\u5230\u516c\u5f0f \\((7)\\) \u4e8e\u662f\u5f97\u5230\u6b27\u62c9\u516c\u5f0f\uff1a \\(e^{xi}=cosx+i\\ast sinx\\) 3. \u6b27\u62c9\u516c\u5f0f\u7684\u5e94\u7528 \u94fe\u63a5 \u94fe\u63a52 \u590d\u6570\u7684\u5e42 \\(\\rightarrow\\) \u590d\u6570\uff1a \\((a+bi)^n=r^ne^{in\\theta}\\) \u542b\u590d\u6570\u7684\u6307\u6570 \\(\\rightarrow\\) \u590d\u6570\uff1a \\(5^{3+2i}=5^3(cos(2ln5)+i\\ast sin(2ln5))\\approx-124.64+0.65i\\) \u95ee\u9898 Euler's identity \u6b27\u62c9\u6052\u7b49\u5f0f\uff1f \u590d\u6570\u7684\u6307\u6570\u5f62\u5f0f \u4e09\u89d2\u51fd\u6570\u548c\u53cc\u66f2\u7ebf\u51fd\u6570\u7684\u4ee3\u66ff Alternate definitions of trigonometric and hyperbolic functions \u6307\u6570\u548c\u5bf9\u6570\u51fd\u6570\u5bf9\u590d\u6570\u7684\u63a8\u5e7f==\u590d\u6570\u7684\u6307\u6570== \u68e3\u83ab\u5f17\u5b9a\u7406 \u548c\u4e09\u89d2\u52a0\u6cd5\u76f8\u540c\u70b9\u7684\u66ff\u4ee3\u8bc1\u660e Alternate proofs of de Moivre\u2019s theorem and trigonometric additive identities \\((a+bi)^n\\) \u53ef\u4ee5\u901a\u8fc7\u6b27\u62c9\u516c\u5f0f\u7684\u5f62\u5f0f\u5316\u7b80 \u4e0a\u9762\u63a8\u5230\u8fc7\uff0c\u5219 \\((re^{i\\theta})^n\\ =\\ (r)^n(e^{i\\theta})^n\\) \u4e8e\u662f \\(r^ne^{in\\theta}\\ =\\ r^n(cos(n\\theta)+i\\ast sin(n\\theta))\\)","title":"\u6b27\u62c9\u516c\u5f0f"},{"location":"math/euler-eq/#_1","text":"","title":"\u6b27\u62c9\u516c\u5f0f"},{"location":"math/euler-eq/#_2","text":"\u7406\u89e3\u4e00\u4e0b\u6b27\u62c9\u516c\u5f0f\u7684\u57fa\u672c\u6982\u5ff5\u3002","title":"\u76ee\u6807"},{"location":"math/euler-eq/#1","text":"\u4ece\u6cf0\u52d2\u7ea7\u6570\uff0c\u5230\u9ea6\u514b\u52b3\u6797\u7ea7\u6570 \u7ea7\u6570=\u903c\u8fd1 \u4e3e\u4e00\u4e2a\u56db\u6b21\u65b9\u7684\u4f8b\u5b50 \\((1)\\) \\(f(x)=Ax^4+Bx^3+Cx^2+Dx+E \\qquad (1)\\) \\(\\rightarrow f(0)=E\\) \\(\\rightarrow f^{'}(x)=4Ax^3+3Bx^2+2Cx+D\\quad \\rightarrow f^{'}(0)=D\\) \u540c\u7406\uff1a \\(f^{''}(0)=2C\\) \\(f^{'''}(0)=6B\\) \u5219\u4ece \\((1)\\) \u5f97\u5230\uff1a \\(f(x)=\\displaystyle\\frac{f^{(4)}(0)}{(4\\times3\\times2\\times1)}x^4+\\frac{f^{(3)}(0)}{(3\\times2\\times1)}x^3+\\frac{f^{(2)}(0)}{(2\\times1)}x^2+\\frac{f^{(1)}(0)}{(1)}x^1+f(0)x^0\\) \u9636\u4e58 factorial \u9ea6\u514b\u52b3\u6797\u7ea7\u6570 \\((3)\\) \u662f\u6cf0\u52d2\u7ea7\u6570\u5728 \\(x=0\\) \u5c55\u5f00\u7684\u7279\u6b8a\u60c5\u51b5 \\(f(x)=\\displaystyle\\sum_{n=0}^{\\infty}\\frac{f^{(n)}(0)}{n!}x^n \\qquad (3)\\)","title":"1. \u9ea6\u514b\u52b3\u6797\u7ea7\u6570"},{"location":"math/euler-eq/#2","text":"\\(f(x)=sin(x)\\) \u6c42\u5bfc \\(f^{'}(x)=cos(x)\\) \u4f7f\u7528\u9ea6\u514b\u52b3\u6797\u7ea7\u6570\u5bf9 \\(f(x)=sin(x)\\) \u5c55\u5f00\uff0c\u5f97\u5230 \\(f(x)=sin(x)=f(0)+f^{'}(0)x+\\displaystyle\\frac{f^{''}(0)}{2!}x^2 + \\frac{f^{'''}(0)}{3!}x^3...\\) \u5373 \\(sinx=0+1x+0\\displaystyle\\frac{x^2}{2!}+(-1)\\frac{x^3}{3!}+...\\qquad (4)\\) \u518d\u4f7f\u7528\u9ea6\u514b\u52b3\u6797\u7ea7\u6570\u5bf9 \\(f(x)=cos(x)\\) \u5c55\u5f00\uff0c\u5f97\u5230 \\(cosx=1+0x+(-1)\\displaystyle\\frac{x^2}{2!}+0\\frac{x^3}{3!}+...\\qquad (5)\\) \u518d\u4f7f\u7528\u9ea6\u514b\u52b3\u6797\u7ea7\u6570\u5bf9 \\(f(x)=e^x\\) \u5c55\u5f00 \\(e^x=1+x+\\displaystyle\\frac{x^2}{2!}+\\frac{x^3}{3!}+...\\qquad (6)\\) \u5982\u679c\u628a\u516c\u5f0f \\((4)\\) \u548c\u516c\u5f0f \\((5)\\) \u76f8\u52a0\uff0c\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u516c\u53f8 \\((6)\\) \u7684\u516c\u5f0f\uff0c\u4f46\u662f\u6709\u4e9b\u9879\u7684\u7b26\u53f7\u4e3a\u8d1f\u3002 \u4e3a\u4e86\u6d88\u9664\u8d1f\u53f7\uff0c\u6b27\u62c9\u5f15\u5165\u4e86 \\(i^2=-1\\) \u6839\u636e\u516c\u5f0f \\((6)\\) \uff0c\u6709\u5982\u4e0b\u516c\u5f0f \\(e^{xi}=1+xi+i^2\\displaystyle\\frac{x^2}{2!}+i^2\\frac{x^3i}{3!}+...\\qquad (7)\\) \u8c03\u548c\u516c\u5f0f \\((4)\\) \u548c\u516c\u5f0f \\((5)\\) \uff0c \\(i\\ast sinx+cosx\\) \uff0c\u53ef\u4ee5\u5f97\u5230\u516c\u5f0f \\((7)\\) \u4e8e\u662f\u5f97\u5230\u6b27\u62c9\u516c\u5f0f\uff1a \\(e^{xi}=cosx+i\\ast sinx\\)","title":"2. \u4e09\u89d2\u51fd\u6570"},{"location":"math/euler-eq/#3","text":"\u94fe\u63a5 \u94fe\u63a52 \u590d\u6570\u7684\u5e42 \\(\\rightarrow\\) \u590d\u6570\uff1a \\((a+bi)^n=r^ne^{in\\theta}\\) \u542b\u590d\u6570\u7684\u6307\u6570 \\(\\rightarrow\\) \u590d\u6570\uff1a \\(5^{3+2i}=5^3(cos(2ln5)+i\\ast sin(2ln5))\\approx-124.64+0.65i\\)","title":"3. \u6b27\u62c9\u516c\u5f0f\u7684\u5e94\u7528"},{"location":"math/euler-eq/#_3","text":"Euler's identity \u6b27\u62c9\u6052\u7b49\u5f0f\uff1f \u590d\u6570\u7684\u6307\u6570\u5f62\u5f0f \u4e09\u89d2\u51fd\u6570\u548c\u53cc\u66f2\u7ebf\u51fd\u6570\u7684\u4ee3\u66ff Alternate definitions of trigonometric and hyperbolic functions \u6307\u6570\u548c\u5bf9\u6570\u51fd\u6570\u5bf9\u590d\u6570\u7684\u63a8\u5e7f==\u590d\u6570\u7684\u6307\u6570== \u68e3\u83ab\u5f17\u5b9a\u7406 \u548c\u4e09\u89d2\u52a0\u6cd5\u76f8\u540c\u70b9\u7684\u66ff\u4ee3\u8bc1\u660e Alternate proofs of de Moivre\u2019s theorem and trigonometric additive identities \\((a+bi)^n\\) \u53ef\u4ee5\u901a\u8fc7\u6b27\u62c9\u516c\u5f0f\u7684\u5f62\u5f0f\u5316\u7b80 \u4e0a\u9762\u63a8\u5230\u8fc7\uff0c\u5219 \\((re^{i\\theta})^n\\ =\\ (r)^n(e^{i\\theta})^n\\) \u4e8e\u662f \\(r^ne^{in\\theta}\\ =\\ r^n(cos(n\\theta)+i\\ast sin(n\\theta))\\)","title":"\u95ee\u9898"},{"location":"math/galerkin/","text":"\u4f3d\u8fbd\u91d1\u6cd5 \u76ee\u6807 \u8ba4\u8bc6\u4f3d\u8fbd\u91d1\u6cd5\uff0c\u4e86\u89e3\u4f3d\u8fbd\u91d1\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4 1. \u4e3a\u4ec0\u4e48\u8981\u7528\u4f3d\u8fbd\u91d1\u6cd5 \u6570\u503c\u6c42\u89e3PDE\u6a21\u578b\uff0c\u8d8a\u5feb\u89e3\u51b3\u8d8a\u597d 2. \u4f3d\u8fbd\u91d1\u65b9\u6cd5\u76f4\u89c2\u6b65\u9aa4 \u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6 \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f 3. \u4f3d\u8fbd\u91d1\u6cd5\u4e00\u7ef4\u4f8b\u5b50 \u5173\u4e8e\u5782\u76f4\u60ac\u81c2\u6881\u7aef\u70b9\u53d7\u529b\u7684\u95ee\u9898\uff0c\u5b58\u5728\u89e3\u6790\u89e3\uff0c\u53ef\u4ee5\u663e\u5f0f\u6c42\u89e3\u3002 \u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a \u8bbe\u57fa\u51fd\u6570\u4e3a \\(\\phi_i,\\ i=1,2,3\\) \u5176\u4e2d\uff1a \\(\\phi_0=x,\\ \\phi_1=x,\\ \\phi_2=x^2\\) \u90a3\u4e48\u4f4d\u79fb\u51fd\u6570\u53ef\u4ee5\u8868\u8fbe\u4e3a\u7ebf\u6027\u7d2f\u52a0 \\(u(x)=\\displaystyle\\sum_{j=1}^3 a_j\\phi_j\\) \u4e8e\u662f\uff0c \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u5bf9\u4e8e\u7269\u7406\u65b9\u7a0b \\(E\\displaystyle\\frac{du(x)}{dx}-\\frac{f(x)}{A}=0\\) \uff0c\u7b2c1\u6b65\u4e2d\u7684 \\(u(x)\\) \u4e0d\u4e00\u5b9a\u5c31\u662f\u771f\u5b9e\u51fd\u6570 \u6240\u4ee5\uff0c\u9700\u8981\u8981\u6c42\u4e0a\u8ff0\u51fd\u6570\u4e0e\u5404\u57fa\u51fd\u6570\u7684\u5185\u79ef\u4e3a 0\uff0c\u5185\u79ef\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u540c\u4e00\u4e2a\u533a\u57df \\(\\Omega\\) \u7684\u4e24\u4e2a\u51fd\u6570 \\(f\\) \u548c \\(g\\) \u7684\u79ef\u5206\uff1a \\(\\displaystyle\\int_{\\Omega}fgd\\Omega=0\\) \u5177\u4f53\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L(E\\displaystyle\\frac{du(x)}{dx}-\\frac{F}{A})\\phi_jdx=0\\) \u79fb\u5411\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L\\phi_j du(x)=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u56e0\u4e3a \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \uff0c\u5e26\u5165\u53ef\u5f97 \\(\\displaystyle\\sum_{k=1}^3a_k\\int\\phi_jd\\phi_k=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f \u6839\u636e\u7b2c2\u6b65\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\displaystyle\\begin{bmatrix}\\displaystyle\\int_0^L\\phi_1d\\phi_1\\quad \\int_0^L\\phi_1d\\phi_2\\quad\\int_0^L\\phi_1d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_2d\\phi_1\\quad \\int_0^L\\phi_2d\\phi_2\\quad\\int_0^L\\phi_2d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_3d\\phi_1\\quad \\int_0^L\\phi_3d\\phi_2\\quad\\int_0^L\\phi_3d\\phi_3\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{1}{EA}\\begin{bmatrix}\\displaystyle\\int_0^LF\\phi_1dx\\\\\\displaystyle\\int_0^LF\\phi_2dx\\\\\\displaystyle\\int_0^LF\\phi_3dx\\end{bmatrix}\\) \u6c42\u89e3\u5f97\u5230 \\(a_1,a_2,a_3\\) \uff0c\u83b7\u5f97 \\(u(x)\\) \u7684\u8868\u8fbe\u5f0f 4. \u4f3d\u8fbd\u91d1\u6cd5\u4e8c\u7ef4\u7684\u4f8b\u5b50 \u5173\u4e8e\u8584\u677f\u6320\u5ea6\u548c\u53d7\u529b\u7684\u4f8b\u5b50\uff0c\u65e0\u6cd5\u663e\u793a\u6c42\u89e3\u3002 \u57fa\u672c\u6b65\u9aa4\u548c\u4e0a\u8ff0\u7c7b\u4f3c\uff0c\u4f46\u662f\u57fa\u51fd\u6570\u7684\u9009\u53d6\u4e0d\u540c\u3002 \u4e3a\u4e86\u6ee1\u8db3\u4e8c\u7ef4\u8fb9\u754c\u6761\u4ef6\uff0c\u9009\u53d6\u4e09\u89d2\u51fd\u6570\u4f5c\u4e3a\u57fa\u51fd\u6570\uff1a \\(\\left\\{\\begin{aligned}\\phi_1(x,y)&=(1+cos\\displaystyle\\frac{\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_2(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_3(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{3\\pi y}{b})\\end{aligned}\\right.\\) \u4ee5\u53ca\u5728\u5199\u51fa\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4\u65f6\uff0c\u9700\u8981\u7b80\u5199\uff1a \u8bb0\uff1a \\(\\displaystyle\\int_{-a}^b\\int_{-a}^bf(x,y)dxdy=H(f)\\) \u5219\u7ebf\u6027\u65b9\u7a0b\u7ec4\u4e3a\uff1a \\(\\displaystyle\\begin{bmatrix}H(\\phi_1\\nabla^4\\phi_1)\\quad H(\\phi_1\\nabla^4\\phi_2)\\quad H(\\phi_1\\nabla^4\\phi_3)\\\\H(\\phi_2\\nabla^4\\phi_1)\\quad H(\\phi_2\\nabla^4\\phi_2)\\quad H(\\phi_2\\nabla^4\\phi_3)\\\\H(\\phi_3\\nabla^4\\phi_1)\\quad H(\\phi_3\\nabla^4\\phi_2)\\quad H(\\phi_3\\nabla^4\\phi_3)\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{q_0}{D}\\begin{bmatrix}H(\\phi_2)\\\\H(\\phi_1)\\\\H(\\phi_3)\\end{bmatrix}\\) \u7136\u800c\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5e26\u6765\u7684\u95ee\u9898\uff1a \u4ee5\u4e0a\u4f8b\u5b50\uff0c\u90fd\u662f\u5728\u6574\u4e2a\u8ba1\u7b97\u57df\u4e0a\u7528\u4e00\u4e2a\u51fd\u6570\u8868\u8fbe\u5f0f\u6765\u8fdb\u884c\u63cf\u8ff0\uff0c\u56fa\u7136\u5f88\u65b9\u4fbf\u3002\u4f46\u5e26\u6765\u7684\u95ee\u9898\u4f1a\u6709\u7cbe\u5ea6\u4e0a\u7684\u4e0d\u8db3\uff0c\u800c\u4e14\u89e3\u5f97\u6700\u7ec8\u6548\u679c\u4e5f\u5f88\u4f9d\u8d56\u4e8e\u57fa\u51fd\u6570\u7684\u9009\u53d6\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u5c06\u6574\u4e2a\u533a\u57df\u5206\u6210\u5c0f\u5757\uff0c\u5728\u5c0f\u5757\u4e0a\u8fdb\u884c\u4e00\u4e9b\u57fa\u51fd\u6570\u8fd1\u4f3c(FEM?) \u53c2\u8003 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e00\uff09 5. \u7ebf\u6bb5\u4e0a\u4f7f\u7528\u4f3d\u8fbd\u91d1\u6cd5 5.1 \u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4 \u5047\u8bbe\u6709\u4e00\u4e2a\u5f85\u6c42\u89e3\u7684\u65b9\u7a0b \\(Au(x)=f\\) \uff0c\u53d6\u4e00\u4e2a\u533a\u95f4 \\([x_k,x_{k+1}]\\) \uff0c\u5219\u6b65\u957f\u4e3a \\(h_k=x_{k+1}-x_k\\) \u5047\u8bbe\u5728 \\(x_k\\) \u70b9\u7684\u89e3 \\(u(x_k)=u_k\\) \uff0c\u5728 \\(x_{k+1}\\) \u70b9\u7684\u89e3 \\(u(x_{k+1})=u_{k+1}\\) \u5219\u4f3d\u8fbd\u91d1\u6cd5\u5728\u5c40\u90e8\u533a\u95f4\u4e0a\u7684\u7684\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u4e3a\uff1a \\(\\tilde u(x)=\\displaystyle\\frac{x_{k+1}-x}{h_k}u_k+\\frac{x-x_k}{h_k}u_{k+1}\\) \u5b83\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff1a \\(\\left\\{\\begin{aligned}&\\tilde u(x_k)=u_k\\\\&\\tilde u(x_{k+1})=u_{k+1}\\end{aligned}\\right.\\) \u57fa\u51fd\u6570\u53ef\u4ee5\u8bb0\u4e3a\uff1a \\(\\left\\{\\begin{aligned}&\\phi_0^k=\\displaystyle\\frac{x_{k+1}-x}{h_k}\\\\&\\phi_1^k=\\frac{x-x_k}{h_k}\\end{aligned}\\right.\\) \uff0c \\(k\\) \u5728\u6b64\u5904\u7684\u610f\u601d\u662f\uff0c\u67d0\u4e00\u4e2a\u533a\u95f4\u4efb\u610f\u53d6\u7684\u7b2c \\(k\\) \u6bb5 \u7ebf\u6027\u63d2\u503c\u51fd\u6570\u5219\u53ef\u4ee5\u8868\u8fbe\u4e3a\uff1a \\(\\tilde u(x)=\\phi_0^ku_k+\\phi_1^ku_{k+1},\\ x_k<x<x_{k+1}\\) \u6ce8\u610f\uff0c\u8fd9\u91cc\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u8868\u8fbe\u5f0f\u548c\u4e4b\u524d\u7684\u4f8b\u5b50\u7c7b\u4f3c\uff1a \\(\\tilde u(x)=a_0x+a_1x^2+a_2x^3\\) \u5b83\u4eec\u90fd\u662f\u7ebf\u6027\u5f62\u5f0f\uff1a \\(\\tilde u(x)=\\displaystyle\\sum a_j\\phi_j\\) \uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e0d\u518d\u5bf9\u5168\u5c40\u8fdb\u884c\u8fd1\u4f3c\uff0c\u800c\u662f\u5bf9\u5c40\u90e8\u7684 \\(k\\) \u6bb5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u4e8e\u662f\u57fa\u51fd\u6570\u5c31\u6709\u4e86\u4e0a\u6807 \\(k\\) \u7136\u540e\u5bf9 \\([x_k,x_{k+1}]\\) \u8fd9\u4e2a\u5c0f\u533a\u95f4\u4f7f\u7528Galerkin\u65b9\u6cd5\u7684\u5206\u6790\uff08\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff1a \\(\\displaystyle\\int_{x_k}^{x_{k+1}}(A\\tilde u(x)-f)\\phi_j^kdx=0,\\ j=0,1\\) \u540c\u6837\uff0c\u8bb0 \\(H_k(f)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)dx\\) \u53ef\u4ee5\u5f97\u5230\u9488\u5bf9\u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u5f62\u5f0f\uff1a \\(\\begin{bmatrix}H_k(\\phi_0^kA\\phi_0^k)\\quad H_k(\\phi_0^kA\\phi_1^k)\\\\H_k(\\phi_1^kA\\phi_0^k)\\quad H_k(\\phi_1^kA\\phi_1^k)\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}H_k(f\\phi_0^k)\\\\H_k(f\\phi_1^k)\\end{bmatrix}\\) \u4f46\u662f\u8fd9\u8fd8\u4e0d\u591f\uff0c\u9700\u8981\u5bf9\u5168\u5c40\u7684\u77e9\u9635\u8fdb\u884c\u7ec4\u88c5 5.2 \u5bf9\u5168\u5c40\u8fdb\u884c\u77e9\u9635\u7684\u7ec4\u88c5 \u9996\u5148\uff0c\u4e0a\u8ff0\u7ebf\u6027\u65b9\u7a0b\u7ec4\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a \\(A_{ij}^ku_k=b_i^k\\) \uff0c\u5176\u4e2d\uff1a \\(\\left\\{\\begin{aligned}&A_{ij}^k=H_k(\\phi_i^kA\\phi_j^k),\\quad i,j\\in {0,1}\\\\&b_i^k=H_k(f\\phi_i^k),\\quad i=0,1\\end{aligned}\\right.\\) \uff0c \\(u_k\\) \u5219\u662f\u65b9\u7a0b\u7b2c \\(k\\) \u6bb5\u7684\u89e3\uff0c\u9700\u8981\u6c42\u89e3 \u5176\u4e2d \\(i,j,k\\) \u7684\u542b\u4e49\u662f\uff1a \\(k\\) \u662f\u7b2c\u51e0\u4e2a\u5355\u5143 \u6839\u636e\u57fa\u51fd\u6570\u7684\u5b9a\u4e49\uff0c \\(A_{ij}^k\\) \u8868\u793a\u8282\u70b9 \\(j\\) \u5bf9\u8282\u70b9 \\(i\\) \u5904\u7684\u8d21\u732e \\(b_i^k\\) \u8868\u793a\u8282\u70b9 \\(i\\) \u5904\u6240\u83b7\u5f97\u7684\u8d21\u732e\u503c \u5047\u8bbe\uff0c\u6211\u4eec\u628a\u5168\u5c40\u5206\u6210\u4e863\u6bb5\uff0c\u5219\u67094\u4e2a\u8282\u70b9\uff0c\u5373 \\(k=0,1,2,3\\) \\(|_{u_0}\\_\\_\\_Unit\\_0\\_\\_\\_|_{u_1}\\_\\_\\_Unit\\_1\\_\\_\\_|_{u_2}\\_\\_\\_Unit\\_2\\_\\_\\_|_{u_3}\\) \u62ff \\(u_1\\) \u8fd9\u4e2a\u70b9\u6765\u4e3e\u4f8b\uff0c\u56e0\u4e3a\u5b83\u6a2a\u8de8\u4e86 \\(Unit0\\) \u548c \\(Unit1\\) \u5728 \\(Unit0\\) \u4e0a \u8282\u70b9 \\(u_0\\) \u5bf9 \\(u_0\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^0u_0\\) \u8282\u70b9 \\(u_0\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{10}^0u_0\\) \u8282\u70b9 \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{11}^0u_1\\) \\(b\\) \u5219\u662f\u8be5\u8282\u70b9\u4e0a\u7684\u603b\u8d21\u732e\u503c \\(\\begin{bmatrix}A_{00}^0\\quad A_{01}^0\\\\A_{10}^0\\quad A_{11}^0\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0\\end{bmatrix}\\) \u5728 \\(Unit1\\) \u4e0a \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^1u_1\\) \u8282\u70b9 \\(u_2\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{01}^1u_2\\) \\(\\begin{bmatrix}A_{00}^1\\quad A_{01}^1\\\\A_{10}^1\\quad A_{11}^1\\end{bmatrix}\\begin{bmatrix}u_1\\\\u_2\\end{bmatrix}=\\begin{bmatrix}b_0^1\\\\b_1^1\\end{bmatrix}\\) \u5728 \\(Unit2\\) \u4e0a \u540c\u4e0a \\(\\begin{bmatrix}A_{00}^2\\quad A_{01}^2\\\\A_{10}^2\\quad A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^2\\\\b_1^2\\end{bmatrix}\\) \u5173\u4e8e\u8282\u70b9 \\(u_k\\) \u7684\u77e9\u9635\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a \\(\\begin{bmatrix}&u_k\u70b9\u5bf9u_k\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_k\u70b9\u7684\u8d21\u732e\\\\&u_k\u70b9\u5bf9u_{k+1}\u70b9\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_{k+1}\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}u_k\u5904\u7684\u603b\u8d21\u732e\u503c\\\\u_{k+1}\u5904\u7684\u603b\u8d21\u732e\u503c\\end{bmatrix}\\) \u5c06\u4e0a\u8ff03\u4e2a\u77e9\u9635\u6839\u636e \\(u_k\\) \u8fdb\u884c\u62fc\u63a5\uff0c\u7ec4\u88c5\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6700\u7ec8\u7684\u5f62\u5f0f \\(Ax=b\\) \uff1a \\(\\begin{bmatrix}&A_{00}^0\\quad &A_{01}^0\\quad &0 \\quad &0\\\\&A_{10}^0\\quad &A_{11}^0+A_00^1 \\quad &A_{01}^1 \\quad &0\\\\&0 \\quad &A_{10}^1 \\quad &A_{11}^1+A_{00}^2 \\quad &0\\\\&0 \\quad &0 \\quad &A_{10}^2 \\quad &A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0 + b_0^1\\\\b_0^2+b_1^1\\\\b_1^2\\end{bmatrix}\\) \u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u6c42\u5f97\u7684 \\(u_0,u_1,u_2,u_3\\) \u5c31\u662f\u4e4b\u524d\u5047\u8bbe\u5728 \\(u(x_0),u(x_1),u(x_2),u(x_3)\\) \u4e0a\u7684\u89e3\u3002 \u4ee5\u4e0a\u4e3a\u5c40\u90e8\u4f7f\u7528Galerkin\u65b9\u6cd5\u83b7\u53d6\u5f31\u89e3\u5f62\u5f0f\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u56e0\u4e3a\u628a\u6574\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e86\u6709\u9650\u4e2a\u533a\u57df\uff0c\u6240\u4ee5\u4e5f\u53eb\u6709\u9650\u5143\u65b9\u6cd5\u3002 5.3 \u79ef\u5206\u6362\u5143 \u4ee4 \\(\\xi=\\displaystyle\\frac{x-x_k}{h_k}\\) \uff0c \\(h_kd\\xi=dx\\) \u5219 \\(\\left\\{\\begin{aligned}&\\phi_0^k=1-\\xi\\\\&\\phi_1^k=\\xi\\end{aligned}\\right.\\) \u90a3\u4e48\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}\\phi_i^kA\\phi_j^kdx=h_k\\int_0^1\\phi_i^kA\\phi_j^kd\\xi\\) \u5e76\u4e14\uff0c \\(H_k(f\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)\\phi_j^kdx=h_k\\int_0^1f(h_k\\xi+x_k)\\phi_j^kd\\xi\\) \u5f53\u5fae\u5206\u7b97\u5b50 \\(A\\) \u5df2\u77e5\u7684\u65f6\u5019\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)\\) \u90fd\u53ef\u4ee5\u663e\u5f0f\u5730\u5199\u51fa\u6765\uff0c\u4f46\u662f\uff0c\u7531\u4e8e \\(f(x)\\) \u5f80\u5f80\u6ca1\u6709\u80fd\u591f\u76f4\u63a5\u5199\u51fa\u6765\u7684\u663e\u5f0f\u79ef\u5206\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u5728 \\(h_k\\) \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u7528Simpson\u516c\u5f0f/\u7b80\u5355\u7684\u68af\u5f62\u516c\u5f0f\u8fdb\u884c\u8fd1\u4f3c\uff1a \\(H_k(f\\phi_0^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[f(x)+2f(x_k+\\frac{h_k}{2})]\\) \\(H_k(f\\phi_1^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[2f(x_k+\\frac{h_k}{2})+f(x_{k+1})]\\) 5.4 \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7684\u4f8b\u5b50 \u6c42\u89e3\u4f8b\u5b50\uff1a \\(\\displaystyle\\frac{du}{dx}=x^3e^x\\) \u53ef\u4ee5\u5f97\u5230\u5fae\u5206\u7b97\u5b50 \\(A=\\displaystyle\\frac{d}{dx}=\\frac{1}{h_k}\\frac{d}{d\\xi}\\) \uff0c\u5c06\u5fae\u5206\u7b97\u5b50\u4ee3\u5165\u516c\u5f0f\u53ef\u5f97\uff1a \\(\\left\\{\\begin{aligned}&H_k(\\phi_0^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1(1-\\xi)d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_0^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1(1-\\xi)d\\xi=\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1\\xi d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1\\xi d\\xi=\\frac{1}{2}\\end{aligned}\\right.\\) \u7531\u6b64\u53ef\u5f97 \\(Ax=b\\) \u4e3a\uff1a \\(\\begin{bmatrix}&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}&0&0&\\cdots&0\\\\&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&0&\\cdots &0\\\\&0&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&\\cdots &\\vdots\\\\&\\vdots&\\vdots&\\vdots&\\ddots&\\cdots&0\\\\&0&0&0&0&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\\\vdots\\\\u_{k-1}\\\\u_k\\end{bmatrix}=\\begin{bmatrix}\\displaystyle\\frac{6}{h_0}[f(x_0)+2f(x_0+\\displaystyle\\frac{h_0}{2})\\\\\\displaystyle\\frac{6}{h_0}[2f(x_0+\\displaystyle\\frac{h_0}{2})+f(x_1)]+\\displaystyle\\frac{6}{h_1}[f(x_1)+2f(x_1+\\displaystyle\\frac{h_1}{2})\\\\\\vdots\\\\\\displaystyle\\frac{6}{h_{k-1}}[2f(x_{k-1}+\\displaystyle\\frac{h_{k-1}}{2})+f(x_{k-1})]+\\displaystyle\\frac{6}{h_{k}}[f(x_{k})+2f(x_{k}+\\displaystyle\\frac{h_{k}}{2})\\\\?\\end{bmatrix}\\) Tips \u7ecf\u8fc7\u4ed6\u4eba\u7684\u52aa\u529b\u53d1\u73b0\uff0c\u5bf9\u4e8e \\(u^{'}=f\\) \u7684\u65b9\u7a0b\uff0c\u7528\u6709\u9650\u5143\u8fdb\u884c\u5212\u5206\uff0c\u672c\u8d28\u4e0a\u548c\u6709\u9650\u5dee\u5206\u6cd5\uff08FDM\uff09\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\u7c7b\u4f3c\u7684\u3002\u867d\u7136Galerkin\u65b9\u6cd5\u5728\u6bcf\u4e2a\u5355\u5143\u7684\u64cd\u4f5c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u6700\u7ec8\u548cFDM\u4e00\u6837\uff0c\u90fd\u662f\u5728\u8282\u70b9\u5904\u7528\u5dee\u5546\u4ee3\u66ff\u5fae\u5143\uff0c\u5728\u8fb9\u754c\u5904\u5f00\u59cb\u4e00\u6b65\u6b65\u9012\u8fdb\u8fd0\u7b97\u3002 \u53c2\u8003 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e8c\uff09 4. \u66f4\u597d\u7684\u7ebf\u6027\u63d2\u503c \u5212\u5206\u5355\u5143\u7684\u4f3d\u8fbd\u91d1\u6cd5\u4e2d\uff0c\u5212\u5206\u51fa\u6765\u5404\u6bb5\u7684\u6700\u7ec8\u51fd\u6570\u503c\u90fd\u662f\u4e00\u6761\u76f4\u7ebf\uff0c\u4e00\u6761\u7531\u5355\u5143\u4e24\u7aef\u51fd\u6570\u63a7\u5236\u7684\u76f4\u7ebf\u3002 \u4f46\u662f\u5355\u5143\u5185\u51fd\u6570\u5448\u7ebf\u6027\u53d8\u5316\uff0c\u4e14\u5355\u5143\u95f4\u4e24\u6761\u76f4\u7ebf\u659c\u7387\u4e0d\u4e00\u6837\u4f1a\u4ea7\u751f\u201c\u6298\u89d2\u201d\uff0c\u4e0d\u591f\u5149\u6ed1\u3002 \u53ef\u5426\u4f7f\u63d2\u503c\u51fd\u6570\u53d8\u5f97\u5149\u6ed1\uff08\u82e5\u5e72\u4ecb\u5bfc\u6570\u503c\u76f8\u540c\uff09\uff1f \u7b54\u6848\uff1a\u6837\u6761\u51fd\u6570\uff0c\u6837\u6761\u63d2\u503c\u65b9\u6cd5\u3002 \u4e09\u6b21\u6837\u6761\uff0c\u5373\u4e09\u5f2f\u77e9\u65b9\u7a0b\uff0c\u662f\u4f7f\u7528\u5f97\u6700\u5e7f\u6cdb\u7684\u3002\u56e0\u4e3a\u5176\u80fd\u4fdd\u8bc1\u4e8c\u9636\u5bfc\u6570\u503c\u76f8\u540c\uff0c\u4ece\u800c\u5e73\u6ed1\u3002 \u95ee\u9898 \u7a7a\u95f4\u4e0a\u7684 \u4ee3\u7801 \u53c2\u8003\u8d44\u6599 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e00\uff09 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e8c\uff09","title":"\u4f3d\u8fbd\u91d1\u6cd5"},{"location":"math/galerkin/#_1","text":"","title":"\u4f3d\u8fbd\u91d1\u6cd5"},{"location":"math/galerkin/#_2","text":"\u8ba4\u8bc6\u4f3d\u8fbd\u91d1\u6cd5\uff0c\u4e86\u89e3\u4f3d\u8fbd\u91d1\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4","title":"\u76ee\u6807"},{"location":"math/galerkin/#1","text":"\u6570\u503c\u6c42\u89e3PDE\u6a21\u578b\uff0c\u8d8a\u5feb\u89e3\u51b3\u8d8a\u597d","title":"1. \u4e3a\u4ec0\u4e48\u8981\u7528\u4f3d\u8fbd\u91d1\u6cd5"},{"location":"math/galerkin/#2","text":"\u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6 \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f","title":"2. \u4f3d\u8fbd\u91d1\u65b9\u6cd5\u76f4\u89c2\u6b65\u9aa4"},{"location":"math/galerkin/#3","text":"\u5173\u4e8e\u5782\u76f4\u60ac\u81c2\u6881\u7aef\u70b9\u53d7\u529b\u7684\u95ee\u9898\uff0c\u5b58\u5728\u89e3\u6790\u89e3\uff0c\u53ef\u4ee5\u663e\u5f0f\u6c42\u89e3\u3002 \u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u662f\u4e00\u7cfb\u5217\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7d2f\u52a0\uff08\u7ebf\u6027\u63d2\u503c\uff09\uff0c\u57fa\u51fd\u6570\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a \u8bbe\u57fa\u51fd\u6570\u4e3a \\(\\phi_i,\\ i=1,2,3\\) \u5176\u4e2d\uff1a \\(\\phi_0=x,\\ \\phi_1=x,\\ \\phi_2=x^2\\) \u90a3\u4e48\u4f4d\u79fb\u51fd\u6570\u53ef\u4ee5\u8868\u8fbe\u4e3a\u7ebf\u6027\u7d2f\u52a0 \\(u(x)=\\displaystyle\\sum_{j=1}^3 a_j\\phi_j\\) \u4e8e\u662f\uff0c \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \u7ed9\u5b9a\u7684\u5fae\u5206\u65b9\u7a0b\u548c\u6bcf\u4e00\u4e2a\u5728\u8ba1\u7b97\u533a\u57df\u4e0a\u52a0\u6743\u79ef\u5206\u4e3a\u96f6\uff08\u6cdb\u51fd\u4e2d\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff0c\u5f97\u5230\u4e00\u7cfb\u5217\u52a0\u6743\u503c\u7684\u65b9\u7a0b \u5bf9\u4e8e\u7269\u7406\u65b9\u7a0b \\(E\\displaystyle\\frac{du(x)}{dx}-\\frac{f(x)}{A}=0\\) \uff0c\u7b2c1\u6b65\u4e2d\u7684 \\(u(x)\\) \u4e0d\u4e00\u5b9a\u5c31\u662f\u771f\u5b9e\u51fd\u6570 \u6240\u4ee5\uff0c\u9700\u8981\u8981\u6c42\u4e0a\u8ff0\u51fd\u6570\u4e0e\u5404\u57fa\u51fd\u6570\u7684\u5185\u79ef\u4e3a 0\uff0c\u5185\u79ef\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u540c\u4e00\u4e2a\u533a\u57df \\(\\Omega\\) \u7684\u4e24\u4e2a\u51fd\u6570 \\(f\\) \u548c \\(g\\) \u7684\u79ef\u5206\uff1a \\(\\displaystyle\\int_{\\Omega}fgd\\Omega=0\\) \u5177\u4f53\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L(E\\displaystyle\\frac{du(x)}{dx}-\\frac{F}{A})\\phi_jdx=0\\) \u79fb\u5411\u5f97\u5230\uff1a \\(\\displaystyle\\int_0^L\\phi_j du(x)=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u56e0\u4e3a \\(u(x)=a_0x+a_1x^2+a_2x^3\\) \uff0c\u5e26\u5165\u53ef\u5f97 \\(\\displaystyle\\sum_{k=1}^3a_k\\int\\phi_jd\\phi_k=\\frac{1}{EA}\\int_0^LF\\phi_jdx\\) \u83b7\u5f97\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \\(Ax=b\\) \uff0c\u6c42 \\(x\\) \uff0c\u5373\u6c42\u52a0\u6743\u503c\u3002\u4ed6\u4eec\u548c\u57fa\u51fd\u6570\u7684\u70b9\u79ef\u5c31\u662f\u5728\u5f53\u524d\u51fd\u6570\u8868\u8fbe\u4e0b\u7684\u6700\u8d34\u8fd1\u771f\u5b9e\u89e3\u7684\u4f4d\u79fb\u8868\u8fbe\u5f0f \u6839\u636e\u7b2c2\u6b65\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\displaystyle\\begin{bmatrix}\\displaystyle\\int_0^L\\phi_1d\\phi_1\\quad \\int_0^L\\phi_1d\\phi_2\\quad\\int_0^L\\phi_1d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_2d\\phi_1\\quad \\int_0^L\\phi_2d\\phi_2\\quad\\int_0^L\\phi_2d\\phi_3\\\\\\displaystyle\\int_0^L\\phi_3d\\phi_1\\quad \\int_0^L\\phi_3d\\phi_2\\quad\\int_0^L\\phi_3d\\phi_3\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{1}{EA}\\begin{bmatrix}\\displaystyle\\int_0^LF\\phi_1dx\\\\\\displaystyle\\int_0^LF\\phi_2dx\\\\\\displaystyle\\int_0^LF\\phi_3dx\\end{bmatrix}\\) \u6c42\u89e3\u5f97\u5230 \\(a_1,a_2,a_3\\) \uff0c\u83b7\u5f97 \\(u(x)\\) \u7684\u8868\u8fbe\u5f0f","title":"3. \u4f3d\u8fbd\u91d1\u6cd5\u4e00\u7ef4\u4f8b\u5b50"},{"location":"math/galerkin/#4","text":"\u5173\u4e8e\u8584\u677f\u6320\u5ea6\u548c\u53d7\u529b\u7684\u4f8b\u5b50\uff0c\u65e0\u6cd5\u663e\u793a\u6c42\u89e3\u3002 \u57fa\u672c\u6b65\u9aa4\u548c\u4e0a\u8ff0\u7c7b\u4f3c\uff0c\u4f46\u662f\u57fa\u51fd\u6570\u7684\u9009\u53d6\u4e0d\u540c\u3002 \u4e3a\u4e86\u6ee1\u8db3\u4e8c\u7ef4\u8fb9\u754c\u6761\u4ef6\uff0c\u9009\u53d6\u4e09\u89d2\u51fd\u6570\u4f5c\u4e3a\u57fa\u51fd\u6570\uff1a \\(\\left\\{\\begin{aligned}\\phi_1(x,y)&=(1+cos\\displaystyle\\frac{\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_2(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{\\pi y}{b})\\\\\\phi_3(x,y)&=(1+cos\\displaystyle\\frac{3\\pi x}{a})(1+cos\\displaystyle\\frac{3\\pi y}{b})\\end{aligned}\\right.\\) \u4ee5\u53ca\u5728\u5199\u51fa\u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4\u65f6\uff0c\u9700\u8981\u7b80\u5199\uff1a \u8bb0\uff1a \\(\\displaystyle\\int_{-a}^b\\int_{-a}^bf(x,y)dxdy=H(f)\\) \u5219\u7ebf\u6027\u65b9\u7a0b\u7ec4\u4e3a\uff1a \\(\\displaystyle\\begin{bmatrix}H(\\phi_1\\nabla^4\\phi_1)\\quad H(\\phi_1\\nabla^4\\phi_2)\\quad H(\\phi_1\\nabla^4\\phi_3)\\\\H(\\phi_2\\nabla^4\\phi_1)\\quad H(\\phi_2\\nabla^4\\phi_2)\\quad H(\\phi_2\\nabla^4\\phi_3)\\\\H(\\phi_3\\nabla^4\\phi_1)\\quad H(\\phi_3\\nabla^4\\phi_2)\\quad H(\\phi_3\\nabla^4\\phi_3)\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\a_3\\end{bmatrix}=\\displaystyle\\frac{q_0}{D}\\begin{bmatrix}H(\\phi_2)\\\\H(\\phi_1)\\\\H(\\phi_3)\\end{bmatrix}\\) \u7136\u800c\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5e26\u6765\u7684\u95ee\u9898\uff1a \u4ee5\u4e0a\u4f8b\u5b50\uff0c\u90fd\u662f\u5728\u6574\u4e2a\u8ba1\u7b97\u57df\u4e0a\u7528\u4e00\u4e2a\u51fd\u6570\u8868\u8fbe\u5f0f\u6765\u8fdb\u884c\u63cf\u8ff0\uff0c\u56fa\u7136\u5f88\u65b9\u4fbf\u3002\u4f46\u5e26\u6765\u7684\u95ee\u9898\u4f1a\u6709\u7cbe\u5ea6\u4e0a\u7684\u4e0d\u8db3\uff0c\u800c\u4e14\u89e3\u5f97\u6700\u7ec8\u6548\u679c\u4e5f\u5f88\u4f9d\u8d56\u4e8e\u57fa\u51fd\u6570\u7684\u9009\u53d6\u3002 \u89e3\u51b3\u65b9\u6848\uff1a \u5c06\u6574\u4e2a\u533a\u57df\u5206\u6210\u5c0f\u5757\uff0c\u5728\u5c0f\u5757\u4e0a\u8fdb\u884c\u4e00\u4e9b\u57fa\u51fd\u6570\u8fd1\u4f3c(FEM?) \u53c2\u8003 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e00\uff09","title":"4. \u4f3d\u8fbd\u91d1\u6cd5\u4e8c\u7ef4\u7684\u4f8b\u5b50"},{"location":"math/galerkin/#5","text":"","title":"5. \u7ebf\u6bb5\u4e0a\u4f7f\u7528\u4f3d\u8fbd\u91d1\u6cd5"},{"location":"math/galerkin/#51","text":"\u5047\u8bbe\u6709\u4e00\u4e2a\u5f85\u6c42\u89e3\u7684\u65b9\u7a0b \\(Au(x)=f\\) \uff0c\u53d6\u4e00\u4e2a\u533a\u95f4 \\([x_k,x_{k+1}]\\) \uff0c\u5219\u6b65\u957f\u4e3a \\(h_k=x_{k+1}-x_k\\) \u5047\u8bbe\u5728 \\(x_k\\) \u70b9\u7684\u89e3 \\(u(x_k)=u_k\\) \uff0c\u5728 \\(x_{k+1}\\) \u70b9\u7684\u89e3 \\(u(x_{k+1})=u_{k+1}\\) \u5219\u4f3d\u8fbd\u91d1\u6cd5\u5728\u5c40\u90e8\u533a\u95f4\u4e0a\u7684\u7684\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u4e3a\uff1a \\(\\tilde u(x)=\\displaystyle\\frac{x_{k+1}-x}{h_k}u_k+\\frac{x-x_k}{h_k}u_{k+1}\\) \u5b83\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6\uff1a \\(\\left\\{\\begin{aligned}&\\tilde u(x_k)=u_k\\\\&\\tilde u(x_{k+1})=u_{k+1}\\end{aligned}\\right.\\) \u57fa\u51fd\u6570\u53ef\u4ee5\u8bb0\u4e3a\uff1a \\(\\left\\{\\begin{aligned}&\\phi_0^k=\\displaystyle\\frac{x_{k+1}-x}{h_k}\\\\&\\phi_1^k=\\frac{x-x_k}{h_k}\\end{aligned}\\right.\\) \uff0c \\(k\\) \u5728\u6b64\u5904\u7684\u610f\u601d\u662f\uff0c\u67d0\u4e00\u4e2a\u533a\u95f4\u4efb\u610f\u53d6\u7684\u7b2c \\(k\\) \u6bb5 \u7ebf\u6027\u63d2\u503c\u51fd\u6570\u5219\u53ef\u4ee5\u8868\u8fbe\u4e3a\uff1a \\(\\tilde u(x)=\\phi_0^ku_k+\\phi_1^ku_{k+1},\\ x_k<x<x_{k+1}\\) \u6ce8\u610f\uff0c\u8fd9\u91cc\u7ebf\u6027\u63d2\u503c\u51fd\u6570\u8868\u8fbe\u5f0f\u548c\u4e4b\u524d\u7684\u4f8b\u5b50\u7c7b\u4f3c\uff1a \\(\\tilde u(x)=a_0x+a_1x^2+a_2x^3\\) \u5b83\u4eec\u90fd\u662f\u7ebf\u6027\u5f62\u5f0f\uff1a \\(\\tilde u(x)=\\displaystyle\\sum a_j\\phi_j\\) \uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4e0d\u518d\u5bf9\u5168\u5c40\u8fdb\u884c\u8fd1\u4f3c\uff0c\u800c\u662f\u5bf9\u5c40\u90e8\u7684 \\(k\\) \u6bb5\u8fdb\u884c\u8fd1\u4f3c\uff0c\u4e8e\u662f\u57fa\u51fd\u6570\u5c31\u6709\u4e86\u4e0a\u6807 \\(k\\) \u7136\u540e\u5bf9 \\([x_k,x_{k+1}]\\) \u8fd9\u4e2a\u5c0f\u533a\u95f4\u4f7f\u7528Galerkin\u65b9\u6cd5\u7684\u5206\u6790\uff08\u6700\u5c0f\u52bf\u80fd\u539f\u7406\uff1f\uff09\uff1a \\(\\displaystyle\\int_{x_k}^{x_{k+1}}(A\\tilde u(x)-f)\\phi_j^kdx=0,\\ j=0,1\\) \u540c\u6837\uff0c\u8bb0 \\(H_k(f)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)dx\\) \u53ef\u4ee5\u5f97\u5230\u9488\u5bf9\u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u5f62\u5f0f\uff1a \\(\\begin{bmatrix}H_k(\\phi_0^kA\\phi_0^k)\\quad H_k(\\phi_0^kA\\phi_1^k)\\\\H_k(\\phi_1^kA\\phi_0^k)\\quad H_k(\\phi_1^kA\\phi_1^k)\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}H_k(f\\phi_0^k)\\\\H_k(f\\phi_1^k)\\end{bmatrix}\\) \u4f46\u662f\u8fd9\u8fd8\u4e0d\u591f\uff0c\u9700\u8981\u5bf9\u5168\u5c40\u7684\u77e9\u9635\u8fdb\u884c\u7ec4\u88c5","title":"5.1 \u4e00\u5c0f\u4e2a\u533a\u95f4\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4"},{"location":"math/galerkin/#52","text":"\u9996\u5148\uff0c\u4e0a\u8ff0\u7ebf\u6027\u65b9\u7a0b\u7ec4\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a \\(A_{ij}^ku_k=b_i^k\\) \uff0c\u5176\u4e2d\uff1a \\(\\left\\{\\begin{aligned}&A_{ij}^k=H_k(\\phi_i^kA\\phi_j^k),\\quad i,j\\in {0,1}\\\\&b_i^k=H_k(f\\phi_i^k),\\quad i=0,1\\end{aligned}\\right.\\) \uff0c \\(u_k\\) \u5219\u662f\u65b9\u7a0b\u7b2c \\(k\\) \u6bb5\u7684\u89e3\uff0c\u9700\u8981\u6c42\u89e3 \u5176\u4e2d \\(i,j,k\\) \u7684\u542b\u4e49\u662f\uff1a \\(k\\) \u662f\u7b2c\u51e0\u4e2a\u5355\u5143 \u6839\u636e\u57fa\u51fd\u6570\u7684\u5b9a\u4e49\uff0c \\(A_{ij}^k\\) \u8868\u793a\u8282\u70b9 \\(j\\) \u5bf9\u8282\u70b9 \\(i\\) \u5904\u7684\u8d21\u732e \\(b_i^k\\) \u8868\u793a\u8282\u70b9 \\(i\\) \u5904\u6240\u83b7\u5f97\u7684\u8d21\u732e\u503c \u5047\u8bbe\uff0c\u6211\u4eec\u628a\u5168\u5c40\u5206\u6210\u4e863\u6bb5\uff0c\u5219\u67094\u4e2a\u8282\u70b9\uff0c\u5373 \\(k=0,1,2,3\\) \\(|_{u_0}\\_\\_\\_Unit\\_0\\_\\_\\_|_{u_1}\\_\\_\\_Unit\\_1\\_\\_\\_|_{u_2}\\_\\_\\_Unit\\_2\\_\\_\\_|_{u_3}\\) \u62ff \\(u_1\\) \u8fd9\u4e2a\u70b9\u6765\u4e3e\u4f8b\uff0c\u56e0\u4e3a\u5b83\u6a2a\u8de8\u4e86 \\(Unit0\\) \u548c \\(Unit1\\) \u5728 \\(Unit0\\) \u4e0a \u8282\u70b9 \\(u_0\\) \u5bf9 \\(u_0\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^0u_0\\) \u8282\u70b9 \\(u_0\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{10}^0u_0\\) \u8282\u70b9 \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{11}^0u_1\\) \\(b\\) \u5219\u662f\u8be5\u8282\u70b9\u4e0a\u7684\u603b\u8d21\u732e\u503c \\(\\begin{bmatrix}A_{00}^0\\quad A_{01}^0\\\\A_{10}^0\\quad A_{11}^0\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0\\end{bmatrix}\\) \u5728 \\(Unit1\\) \u4e0a \\(u_1\\) \u5bf9 \\(u_1\\) \u81ea\u5df1\u7684\u8d21\u732e\u4e3a \\(A_{00}^1u_1\\) \u8282\u70b9 \\(u_2\\) \u5bf9\u8282\u70b9 \\(u_1\\) \u6709\u8d21\u732e \\(A_{01}^1u_2\\) \\(\\begin{bmatrix}A_{00}^1\\quad A_{01}^1\\\\A_{10}^1\\quad A_{11}^1\\end{bmatrix}\\begin{bmatrix}u_1\\\\u_2\\end{bmatrix}=\\begin{bmatrix}b_0^1\\\\b_1^1\\end{bmatrix}\\) \u5728 \\(Unit2\\) \u4e0a \u540c\u4e0a \\(\\begin{bmatrix}A_{00}^2\\quad A_{01}^2\\\\A_{10}^2\\quad A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^2\\\\b_1^2\\end{bmatrix}\\) \u5173\u4e8e\u8282\u70b9 \\(u_k\\) \u7684\u77e9\u9635\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a \\(\\begin{bmatrix}&u_k\u70b9\u5bf9u_k\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_k\u70b9\u7684\u8d21\u732e\\\\&u_k\u70b9\u5bf9u_{k+1}\u70b9\u7684\u8d21\u732e\\quad u_{k+1}\u70b9\u5bf9u_{k+1}\u70b9\u81ea\u5df1\u7684\u8d21\u732e\\end{bmatrix}\\begin{bmatrix}u_k\\\\u_{k+1}\\end{bmatrix}=\\begin{bmatrix}u_k\u5904\u7684\u603b\u8d21\u732e\u503c\\\\u_{k+1}\u5904\u7684\u603b\u8d21\u732e\u503c\\end{bmatrix}\\) \u5c06\u4e0a\u8ff03\u4e2a\u77e9\u9635\u6839\u636e \\(u_k\\) \u8fdb\u884c\u62fc\u63a5\uff0c\u7ec4\u88c5\u8d77\u6765\u53ef\u4ee5\u5f97\u5230\u7ebf\u6027\u65b9\u7a0b\u7ec4\u6700\u7ec8\u7684\u5f62\u5f0f \\(Ax=b\\) \uff1a \\(\\begin{bmatrix}&A_{00}^0\\quad &A_{01}^0\\quad &0 \\quad &0\\\\&A_{10}^0\\quad &A_{11}^0+A_00^1 \\quad &A_{01}^1 \\quad &0\\\\&0 \\quad &A_{10}^1 \\quad &A_{11}^1+A_{00}^2 \\quad &0\\\\&0 \\quad &0 \\quad &A_{10}^2 \\quad &A_{11}^2\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\u_3\\end{bmatrix}=\\begin{bmatrix}b_0^0\\\\b_1^0 + b_0^1\\\\b_0^2+b_1^1\\\\b_1^2\\end{bmatrix}\\) \u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u6c42\u5f97\u7684 \\(u_0,u_1,u_2,u_3\\) \u5c31\u662f\u4e4b\u524d\u5047\u8bbe\u5728 \\(u(x_0),u(x_1),u(x_2),u(x_3)\\) \u4e0a\u7684\u89e3\u3002 \u4ee5\u4e0a\u4e3a\u5c40\u90e8\u4f7f\u7528Galerkin\u65b9\u6cd5\u83b7\u53d6\u5f31\u89e3\u5f62\u5f0f\u7684\u5168\u90e8\u6d41\u7a0b\uff0c\u56e0\u4e3a\u628a\u6574\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e86\u6709\u9650\u4e2a\u533a\u57df\uff0c\u6240\u4ee5\u4e5f\u53eb\u6709\u9650\u5143\u65b9\u6cd5\u3002","title":"5.2 \u5bf9\u5168\u5c40\u8fdb\u884c\u77e9\u9635\u7684\u7ec4\u88c5"},{"location":"math/galerkin/#53","text":"\u4ee4 \\(\\xi=\\displaystyle\\frac{x-x_k}{h_k}\\) \uff0c \\(h_kd\\xi=dx\\) \u5219 \\(\\left\\{\\begin{aligned}&\\phi_0^k=1-\\xi\\\\&\\phi_1^k=\\xi\\end{aligned}\\right.\\) \u90a3\u4e48\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}\\phi_i^kA\\phi_j^kdx=h_k\\int_0^1\\phi_i^kA\\phi_j^kd\\xi\\) \u5e76\u4e14\uff0c \\(H_k(f\\phi_j^k)=\\displaystyle\\int_{x_k}^{x_{k+1}}f(x)\\phi_j^kdx=h_k\\int_0^1f(h_k\\xi+x_k)\\phi_j^kd\\xi\\) \u5f53\u5fae\u5206\u7b97\u5b50 \\(A\\) \u5df2\u77e5\u7684\u65f6\u5019\uff0c \\(H_k(\\phi_i^kA\\phi_j^k)\\) \u90fd\u53ef\u4ee5\u663e\u5f0f\u5730\u5199\u51fa\u6765\uff0c\u4f46\u662f\uff0c\u7531\u4e8e \\(f(x)\\) \u5f80\u5f80\u6ca1\u6709\u80fd\u591f\u76f4\u63a5\u5199\u51fa\u6765\u7684\u663e\u5f0f\u79ef\u5206\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u5728 \\(h_k\\) \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u7528Simpson\u516c\u5f0f/\u7b80\u5355\u7684\u68af\u5f62\u516c\u5f0f\u8fdb\u884c\u8fd1\u4f3c\uff1a \\(H_k(f\\phi_0^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[f(x)+2f(x_k+\\frac{h_k}{2})]\\) \\(H_k(f\\phi_1^k)=\\displaystyle\\frac{h_k}{6}\\displaystyle[2f(x_k+\\frac{h_k}{2})+f(x_{k+1})]\\)","title":"5.3 \u79ef\u5206\u6362\u5143"},{"location":"math/galerkin/#54","text":"\u6c42\u89e3\u4f8b\u5b50\uff1a \\(\\displaystyle\\frac{du}{dx}=x^3e^x\\) \u53ef\u4ee5\u5f97\u5230\u5fae\u5206\u7b97\u5b50 \\(A=\\displaystyle\\frac{d}{dx}=\\frac{1}{h_k}\\frac{d}{d\\xi}\\) \uff0c\u5c06\u5fae\u5206\u7b97\u5b50\u4ee3\u5165\u516c\u5f0f\u53ef\u5f97\uff1a \\(\\left\\{\\begin{aligned}&H_k(\\phi_0^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1(1-\\xi)d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_0^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1(1-\\xi)(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1(1-\\xi)d\\xi=\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_0^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d(1-\\xi)}{d\\xi})d\\xi=-\\int_0^1\\xi d\\xi=-\\frac{1}{2}\\\\&H_k(\\phi_1^kA\\phi_1^k)=h_k\\displaystyle\\int_0^1\\xi(\\frac{1}{h_k}\\frac{d\\xi}{d\\xi})d\\xi=\\int_0^1\\xi d\\xi=\\frac{1}{2}\\end{aligned}\\right.\\) \u7531\u6b64\u53ef\u5f97 \\(Ax=b\\) \u4e3a\uff1a \\(\\begin{bmatrix}&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}&0&0&\\cdots&0\\\\&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&0&\\cdots &0\\\\&0&\\displaystyle-\\frac{1}{2}&0&\\displaystyle\\frac{1}{2}&\\cdots &\\vdots\\\\&\\vdots&\\vdots&\\vdots&\\ddots&\\cdots&0\\\\&0&0&0&0&\\displaystyle-\\frac{1}{2}&\\displaystyle\\frac{1}{2}\\end{bmatrix}\\begin{bmatrix}u_0\\\\u_1\\\\u_2\\\\\\vdots\\\\u_{k-1}\\\\u_k\\end{bmatrix}=\\begin{bmatrix}\\displaystyle\\frac{6}{h_0}[f(x_0)+2f(x_0+\\displaystyle\\frac{h_0}{2})\\\\\\displaystyle\\frac{6}{h_0}[2f(x_0+\\displaystyle\\frac{h_0}{2})+f(x_1)]+\\displaystyle\\frac{6}{h_1}[f(x_1)+2f(x_1+\\displaystyle\\frac{h_1}{2})\\\\\\vdots\\\\\\displaystyle\\frac{6}{h_{k-1}}[2f(x_{k-1}+\\displaystyle\\frac{h_{k-1}}{2})+f(x_{k-1})]+\\displaystyle\\frac{6}{h_{k}}[f(x_{k})+2f(x_{k}+\\displaystyle\\frac{h_{k}}{2})\\\\?\\end{bmatrix}\\) Tips \u7ecf\u8fc7\u4ed6\u4eba\u7684\u52aa\u529b\u53d1\u73b0\uff0c\u5bf9\u4e8e \\(u^{'}=f\\) \u7684\u65b9\u7a0b\uff0c\u7528\u6709\u9650\u5143\u8fdb\u884c\u5212\u5206\uff0c\u672c\u8d28\u4e0a\u548c\u6709\u9650\u5dee\u5206\u6cd5\uff08FDM\uff09\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\u7c7b\u4f3c\u7684\u3002\u867d\u7136Galerkin\u65b9\u6cd5\u5728\u6bcf\u4e2a\u5355\u5143\u7684\u64cd\u4f5c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u6700\u7ec8\u548cFDM\u4e00\u6837\uff0c\u90fd\u662f\u5728\u8282\u70b9\u5904\u7528\u5dee\u5546\u4ee3\u66ff\u5fae\u5143\uff0c\u5728\u8fb9\u754c\u5904\u5f00\u59cb\u4e00\u6b65\u6b65\u9012\u8fdb\u8fd0\u7b97\u3002 \u53c2\u8003 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e8c\uff09","title":"5.4 \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u7684\u4f8b\u5b50"},{"location":"math/galerkin/#4_1","text":"\u5212\u5206\u5355\u5143\u7684\u4f3d\u8fbd\u91d1\u6cd5\u4e2d\uff0c\u5212\u5206\u51fa\u6765\u5404\u6bb5\u7684\u6700\u7ec8\u51fd\u6570\u503c\u90fd\u662f\u4e00\u6761\u76f4\u7ebf\uff0c\u4e00\u6761\u7531\u5355\u5143\u4e24\u7aef\u51fd\u6570\u63a7\u5236\u7684\u76f4\u7ebf\u3002 \u4f46\u662f\u5355\u5143\u5185\u51fd\u6570\u5448\u7ebf\u6027\u53d8\u5316\uff0c\u4e14\u5355\u5143\u95f4\u4e24\u6761\u76f4\u7ebf\u659c\u7387\u4e0d\u4e00\u6837\u4f1a\u4ea7\u751f\u201c\u6298\u89d2\u201d\uff0c\u4e0d\u591f\u5149\u6ed1\u3002 \u53ef\u5426\u4f7f\u63d2\u503c\u51fd\u6570\u53d8\u5f97\u5149\u6ed1\uff08\u82e5\u5e72\u4ecb\u5bfc\u6570\u503c\u76f8\u540c\uff09\uff1f \u7b54\u6848\uff1a\u6837\u6761\u51fd\u6570\uff0c\u6837\u6761\u63d2\u503c\u65b9\u6cd5\u3002 \u4e09\u6b21\u6837\u6761\uff0c\u5373\u4e09\u5f2f\u77e9\u65b9\u7a0b\uff0c\u662f\u4f7f\u7528\u5f97\u6700\u5e7f\u6cdb\u7684\u3002\u56e0\u4e3a\u5176\u80fd\u4fdd\u8bc1\u4e8c\u9636\u5bfc\u6570\u503c\u76f8\u540c\uff0c\u4ece\u800c\u5e73\u6ed1\u3002","title":"4. \u66f4\u597d\u7684\u7ebf\u6027\u63d2\u503c"},{"location":"math/galerkin/#_3","text":"\u7a7a\u95f4\u4e0a\u7684 \u4ee3\u7801","title":"\u95ee\u9898"},{"location":"math/galerkin/#_4","text":"\u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e00\uff09 \u4f3d\u8fbd\u91d1\u6cd5\u5b66\u4e60\uff08\u4e8c\uff09","title":"\u53c2\u8003\u8d44\u6599"},{"location":"math/tensor/","text":"","title":"\u5f20\u91cf"},{"location":"math/linear-system/","text":"\u7ebf\u6027\u7cfb\u7edf\u6c42\u89e3 \u76ee\u6807 \u4e86\u89e3\u6c42\u89e3 \\(Ax=b\\) \u7684\u65b9\u6cd5\u4e00\u89c8 1. \u76f4\u63a5\u6c42\u89e3 1.1 \u6c42\u9006 \\(x=A^{-1}b\\) \u6ce8\u610f\u4e8b\u9879\uff1a \u7ef4\u5ea6\u6bd4\u5982< 100\u8fd8\u884c \u590d\u6742\u5ea6 \\(O(n^3)\\) \uff0c\u77e9\u9635\u592a\u5927\u4e0d\u884c 1.2 \u56e0\u5b50\u5206\u89e3 \u5bf9\u4e8e \\(A\\) \u77e9\u9635\uff0c\u6709\uff1a \\(A=\\begin{pmatrix}&LU, A\\ is \\ square\\ matrix\\\\&LDL^T,if\\ A=A^T\\\\&LL^T,if\\ A=A^T\\ and\\ A>0\\end{pmatrix}\\) A\u4e3a\u65b9\u9635 \u5219\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e0a\u4e09\u89d2\u548c\u4e0b\u4e09\u89d2 A\u4e3a\u5bf9\u79f0\u9635 \u53ef\u4ee5\u5bf9\u89d2\u9635\u5206\u89e3 A\u4e3a\u5bf9\u79f0\u9635\u4e14\u6b63\u5b9a \u53ef\u4ee5\u5206\u89e3\u4e3a\u4e09\u89d2\u5f62\u77e9\u9635\u548c\u5b83\u8f6c\u79e9\u7684\u77e9\u9635 \u6c42\u89e3 \\(LL^T x=b\\) \u7684\u8fc7\u7a0b\u5206\u4e3a\u4e24\u90e8\uff0c\u7b2c\u4e00\u6b65\u662f\u4ee4 \\(y=L^T x\\) \uff0c\u6c42 \\(Ly=b\\) \u4e2d\u7684 \\(y\\) \uff0c\u7b2c\u4e8c\u6b65\u662f\u6c42 \\(L^T x=y\\) \u4e2d\u7684 \\(x\\) \u6ce8\u610f \uff1a\u6c42\u89e3\u5bf9\u89d2\u9635\u7684\u7ebf\u6027\u7cfb\u7edf\u65f6\uff0c\u6c42\u89e3\u8fc7\u7a0b\u662f\u524d\u540e\u4f9d\u8d56\u7684\uff0c\u65e0\u6cd5\u4f7f\u7528GPU\uff08\u6216\u8005\u5728\u4f7f\u7528GPU\u7684\u7a0b\u5e8f\u4e2d\u8fd0\u884c\uff09 \u4f7f\u7528 \uff1a\u5728\u5efa\u7acb\u67d0\u4e2a\u7a0b\u5e8f\u7684\u539f\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528 \u6ce8\u610f\u4e8b\u9879 \u65f6\u95f4\u590d\u6742\u5ea6 \u5982\u679cA\u662f\u7a20\u5bc6\u77e9\u9635\uff0c\u5206\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f \\(O(n^3)\\) \u6240\u4ee5\uff0c\u5f53A\u4e3a\u7a00\u758f\u77e9\u9635\u7684\u65f6\u5019\uff0c\u8be5\u65b9\u6cd5\u6bd4\u6c42\u9006\u8981\u597d\u4e00\u4e9b \u7ef4\u5ea6\u6491\u6b7b\u4e0d\u80fd\u8d85\u8fc7100\u4e07 2. \u8fed\u4ee3\u6c42\u89e3 2.1 \u57fa\u4e8e\u4e0d\u52a8\u70b9 \u57fa\u4e8e\u4e0d\u52a8\u70b9\u7684\u7684\u8fed\u4ee3\u7ebf\u6027\u6c42\u89e3\u5668 Stationary iterative linear solvers\uff0c\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\u5e73\u6ed1\u7684\u65b9\u5f0f \u96c5\u53ef\u6bd4\u8fed\u4ee3 Jacobi \u9ad8\u65af\u585e\u5fb7\u5c14\u8fed\u4ee3 Gauss-Seidel iterations SOR Multigrid 2.2 Krylov subspace\u65b9\u6cd5 \u5171\u8f6d\u68af\u5ea6 Conjugate gradient (CG) \u5f53\u77e9\u9635\u6b63\u5b9a\u4e14\u5bf9\u79f0\u65f6\uff1a \\(A=A^T\\) \u5e76\u4e14 \\(A>0\\) \u4fdd\u8bc1 \\(n\\) \u6b21\u8fed\u4ee3\u4e00\u5b9a\u80fd\u6536\u655b \u6c42\u89e3\u6548\u7387\u4f9d\u8d56\u4e8e\u4e00\u4e2akappa\u503c\uff1a \\(\\kappa=\\displaystyle\\frac{\\lambda_{max}}{\\lambda_{min}}\\) \\(\\lambda\\) \u662f \\(A\\) \u77e9\u9635\u7684\u7279\u5f81\u503c\uff0c\u5373\u6700\u5927\u7279\u5f81\u503c\u548c\u6700\u5c0f\u7279\u5f81\u503c\u7684\u6bd4\u503c \u5982\u679c \\(\\kappa\\) \u5f88\u5c0f\uff0c\u4f8b\u5982\u7b49\u4e8e1\u7684\u65f6\u5019\uff0c\u5171\u8f6d\u68af\u5ea6\u975e\u5e38\u975e\u5e38\u975e\u5e38\u597d\u7528 \u53ea\u9700\u8981\u4e8c\u5341\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u641e\u5b9a biCG CR MinRes GMRes 3. \u603b\u7ed3 \u5f53\u6c42\u89e3\u7684\u89c4\u6a21\u76f8\u5f53\u5927\uff0c\u4f8b\u5982 \\(1e^6\\) \u6216\u8005\u66f4\u591a\uff0c\u6bd4\u5982\u6c42\u89e31\u4ebf\u4e2a\u7c92\u5b50\u65f6\uff0c\u53ea\u80fd\u4f7f\u7528\u8fed\u4ee3\u6c42\u89e3\u5668 \u53c2\u8003 \u52a0","title":"\u7ebf\u6027\u7cfb\u7edf\u6c42\u89e3"},{"location":"math/linear-system/#_1","text":"","title":"\u7ebf\u6027\u7cfb\u7edf\u6c42\u89e3"},{"location":"math/linear-system/#_2","text":"\u4e86\u89e3\u6c42\u89e3 \\(Ax=b\\) \u7684\u65b9\u6cd5\u4e00\u89c8","title":"\u76ee\u6807"},{"location":"math/linear-system/#1","text":"","title":"1. \u76f4\u63a5\u6c42\u89e3"},{"location":"math/linear-system/#11","text":"\\(x=A^{-1}b\\) \u6ce8\u610f\u4e8b\u9879\uff1a \u7ef4\u5ea6\u6bd4\u5982< 100\u8fd8\u884c \u590d\u6742\u5ea6 \\(O(n^3)\\) \uff0c\u77e9\u9635\u592a\u5927\u4e0d\u884c","title":"1.1 \u6c42\u9006"},{"location":"math/linear-system/#12","text":"\u5bf9\u4e8e \\(A\\) \u77e9\u9635\uff0c\u6709\uff1a \\(A=\\begin{pmatrix}&LU, A\\ is \\ square\\ matrix\\\\&LDL^T,if\\ A=A^T\\\\&LL^T,if\\ A=A^T\\ and\\ A>0\\end{pmatrix}\\)","title":"1.2 \u56e0\u5b50\u5206\u89e3"},{"location":"math/linear-system/#a","text":"\u5219\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e0a\u4e09\u89d2\u548c\u4e0b\u4e09\u89d2","title":"A\u4e3a\u65b9\u9635"},{"location":"math/linear-system/#a_1","text":"\u53ef\u4ee5\u5bf9\u89d2\u9635\u5206\u89e3","title":"A\u4e3a\u5bf9\u79f0\u9635"},{"location":"math/linear-system/#a_2","text":"\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e09\u89d2\u5f62\u77e9\u9635\u548c\u5b83\u8f6c\u79e9\u7684\u77e9\u9635 \u6c42\u89e3 \\(LL^T x=b\\) \u7684\u8fc7\u7a0b\u5206\u4e3a\u4e24\u90e8\uff0c\u7b2c\u4e00\u6b65\u662f\u4ee4 \\(y=L^T x\\) \uff0c\u6c42 \\(Ly=b\\) \u4e2d\u7684 \\(y\\) \uff0c\u7b2c\u4e8c\u6b65\u662f\u6c42 \\(L^T x=y\\) \u4e2d\u7684 \\(x\\) \u6ce8\u610f \uff1a\u6c42\u89e3\u5bf9\u89d2\u9635\u7684\u7ebf\u6027\u7cfb\u7edf\u65f6\uff0c\u6c42\u89e3\u8fc7\u7a0b\u662f\u524d\u540e\u4f9d\u8d56\u7684\uff0c\u65e0\u6cd5\u4f7f\u7528GPU\uff08\u6216\u8005\u5728\u4f7f\u7528GPU\u7684\u7a0b\u5e8f\u4e2d\u8fd0\u884c\uff09 \u4f7f\u7528 \uff1a\u5728\u5efa\u7acb\u67d0\u4e2a\u7a0b\u5e8f\u7684\u539f\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528 \u6ce8\u610f\u4e8b\u9879 \u65f6\u95f4\u590d\u6742\u5ea6 \u5982\u679cA\u662f\u7a20\u5bc6\u77e9\u9635\uff0c\u5206\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f \\(O(n^3)\\) \u6240\u4ee5\uff0c\u5f53A\u4e3a\u7a00\u758f\u77e9\u9635\u7684\u65f6\u5019\uff0c\u8be5\u65b9\u6cd5\u6bd4\u6c42\u9006\u8981\u597d\u4e00\u4e9b \u7ef4\u5ea6\u6491\u6b7b\u4e0d\u80fd\u8d85\u8fc7100\u4e07","title":"A\u4e3a\u5bf9\u79f0\u9635\u4e14\u6b63\u5b9a"},{"location":"math/linear-system/#2","text":"","title":"2. \u8fed\u4ee3\u6c42\u89e3"},{"location":"math/linear-system/#21","text":"\u57fa\u4e8e\u4e0d\u52a8\u70b9\u7684\u7684\u8fed\u4ee3\u7ebf\u6027\u6c42\u89e3\u5668 Stationary iterative linear solvers\uff0c\u6c42\u89e3\u7684\u8fc7\u7a0b\u662f\u5e73\u6ed1\u7684\u65b9\u5f0f \u96c5\u53ef\u6bd4\u8fed\u4ee3 Jacobi \u9ad8\u65af\u585e\u5fb7\u5c14\u8fed\u4ee3 Gauss-Seidel iterations SOR Multigrid","title":"2.1 \u57fa\u4e8e\u4e0d\u52a8\u70b9"},{"location":"math/linear-system/#22-krylov-subspace","text":"\u5171\u8f6d\u68af\u5ea6 Conjugate gradient (CG) \u5f53\u77e9\u9635\u6b63\u5b9a\u4e14\u5bf9\u79f0\u65f6\uff1a \\(A=A^T\\) \u5e76\u4e14 \\(A>0\\) \u4fdd\u8bc1 \\(n\\) \u6b21\u8fed\u4ee3\u4e00\u5b9a\u80fd\u6536\u655b \u6c42\u89e3\u6548\u7387\u4f9d\u8d56\u4e8e\u4e00\u4e2akappa\u503c\uff1a \\(\\kappa=\\displaystyle\\frac{\\lambda_{max}}{\\lambda_{min}}\\) \\(\\lambda\\) \u662f \\(A\\) \u77e9\u9635\u7684\u7279\u5f81\u503c\uff0c\u5373\u6700\u5927\u7279\u5f81\u503c\u548c\u6700\u5c0f\u7279\u5f81\u503c\u7684\u6bd4\u503c \u5982\u679c \\(\\kappa\\) \u5f88\u5c0f\uff0c\u4f8b\u5982\u7b49\u4e8e1\u7684\u65f6\u5019\uff0c\u5171\u8f6d\u68af\u5ea6\u975e\u5e38\u975e\u5e38\u975e\u5e38\u597d\u7528 \u53ea\u9700\u8981\u4e8c\u5341\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u641e\u5b9a biCG CR MinRes GMRes","title":"2.2 Krylov subspace\u65b9\u6cd5"},{"location":"math/linear-system/#3","text":"\u5f53\u6c42\u89e3\u7684\u89c4\u6a21\u76f8\u5f53\u5927\uff0c\u4f8b\u5982 \\(1e^6\\) \u6216\u8005\u66f4\u591a\uff0c\u6bd4\u5982\u6c42\u89e31\u4ebf\u4e2a\u7c92\u5b50\u65f6\uff0c\u53ea\u80fd\u4f7f\u7528\u8fed\u4ee3\u6c42\u89e3\u5668","title":"3. \u603b\u7ed3"},{"location":"math/linear-system/#_3","text":"\u52a0","title":"\u53c2\u8003"},{"location":"math/ode/ode-python/","text":"Python\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u5668 \u76ee\u6807 \u4f7f\u7528python\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684ODE\u6c42\u89e3\u5668 \u5e38\u5fae\u5206\u65b9\u7a0b 1. \u6807\u51c6\u5f62\u5f0f \u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u7684\u6807\u51c6\u5f62\u5f0f\uff0c\u5982 \\((1)\\) \uff1a $$ y^{'}=f(x,y) \\qquad (1) $$ \u5982\u679c\u8003\u8651\u65f6\u95f4\u4e3a\u81ea\u53d8\u91cf\uff0c\u5219\u53ef\u4ee5\u5199\u6210\uff1a $$ u^{'}(t) = f(u(t),t) \\qquad (2) $$ \u5728\u6784\u5efa\u6c42\u89e3\u5668\u65f6\uff0c \u6c42\u89e3\u7684\u5bf9\u8c61\u662f \\(u(t)\\) \uff0c\u5373\u4e00\u4e2a\u5173\u4e8e \\(t\\) \u7684\u51fd\u6570 \u3002 \u4f46\u662f\uff0c\u51fd\u6570\u65e0\u6cd5\u7528\u4ee3\u7801\u6765\u8868\u793a\u3002\u4e8e\u662f\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6c42\u89e3\u5f97\u5230\u7684\u5177\u4f53\u5f62\u5f0f\u4e3a\u4e00\u4e2a\u6570\u7ec4\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe \\(t\\) \u7684\u5f62\u5f0f\u4e3a \\((0,1,2,...,n-1)\\) \u4e00\u5171n\u4e2a\u7684\u79bb\u6563\u7684\u65f6\u95f4\u70b9\uff0c\u90a3\u4e48\uff0c\u6c42\u89e3\u51fa\u6765\u5bf9\u5e94\u7684 \\(u(t)\\) \u7684\u5f62\u5f0f\u4e5f\u662f\u4e00\u4e2an\u7ef4\u7684\u6570\u7ec4\uff0c\u5176\u5f62\u5f0f\u4e3a \\((5.3, 5.4, 5.5,...8.3)\\) \u3002\u4ece\u53ef\u89c6\u5316\u7684\u89d2\u5ea6\u6765\u770b\uff0c \u8fd9\u4e24\u4e2a\u6570\u7ec4\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u5750\u6807\u7684x\u8f74\u548cy\u8f74 \uff0c\u4e5f\u5c31\u53ef\u4ee5\u7528\u8fd9\u6761\u79bb\u6563\u7684\u66f2\u7ebf\u6765\u8868\u8fbe\u6c42\u89e3\u7684\u5bf9\u8c61 \\(u(t\\) )\u3002 \u5bf9\u4e8e\u4e8c\u9636\uff0c\u53ef\u4ee5\u5199\u6210\uff1a $$ y {''}=f(x,y,y ), \\quad y(x_0)=y_0, \\quad y^{'}(x_0)=u_0 $$ \u7528\u4e2d\u95f4\u53d8\u91cf\u6765\u8868\u793a\uff1a $$ \\begin{cases} u=y^{'}, \\quad u(x_0)=u_0\\ u^{'}=f(x,y,u), \\quad y(x_0)=y_0 \\end{cases} $$ 2. \u6570\u503c\u65b9\u6cd5 \u663e\u5f0f\uff0c\u6b27\u62c9\u524d\u5411 Forward euler method \u9690\u5f0f\u6b27\u62c9 \u9f99\u683c\u5e93\u5854 Runge-Kutta \u9f99\u683c\u5e93\u5854\u56db\u9636 RK4 \u591a\u6b65\u6cd5 Multistep Adams Bashforth Moulton 3. \u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u4f8b\u5b50 3.1 \u6b27\u62c9\u524d\u5411\u65b9\u6cd5Python \u9488\u5bf9\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u7684\u6807\u51c6\u8868\u8fbe\u5f62\u5f0f\uff0c\u5c06\u5fae\u5206\u65b9\u7a0b\u6539\u5199\uff1a $$ y^{'}=f(x,y)\\quad \\rightarrow \\quad \\frac{dy}{dx} = f(x, y) \\qquad (3) $$ \u6839\u636e \\((3)\\) \uff0c\u6b27\u62c9\u524d\u5411\u65b9\u6cd5\u7684 \u66f4\u65b0 \u53ef\u4ee5\u8868\u793a\u4e3a\uff1a $$ \\frac{y_{n+1} - y_n}{h}\\approx f(x_n,y_n) \\quad \\rightarrow \\quad y_{n+1} \\approx y_n + f(x_n, y_n)h \\qquad (4) $$ \u8fd8\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u6761\u4ef6\uff1a $$ y_0 = Y_0 \\qquad (5) $$ \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u5c31\u662f\uff0c\u5df2\u77e5\u4e00\u4e2a\u65b9\u7a0b \\(f\\) \u5fae\u5206\u540e\u7684\u6a21\u6837\uff0c\u6c42\u89e3\u8fd9\u4e2a\u65b9\u7a0b \\(f\\) \u672c\u8eab\u3002 \u6839\u636e\u516c\u5f0f \\((4)\\) \u548c(5)\uff0c\u6c42\u89e3\u5668\u7684\u8f93\u5165\u9700\u8981\uff1a \u5199\u51fa\u6c42\u5bfc\u540e\u7684\u65b9\u7a0b \\(f\\) \uff0c\u5373 \\(y^{'}\\) \uff0c\u5176\u5b83\u5199\u6cd5\u53ef\u4ee5\u662f\u5b9a\u4e49 \\(u^{'}(t)\\) \u65b9\u7a0b\u7684\u521d\u59cb\u503c \\(y_0\\) \u6b65\u957f \\(h\\) \uff0c\u5176\u5b83\u5199\u6cd5\u53ef\u4ee5\u662f\uff0c \\(\\Delta t\\) / \u6216\u8005\u6b21\u6570 \\(n\\) \u81ea\u53d8\u91cf\u533a\u95f4\uff0c\u5176\u5b83\u5199\u6cd5\u53ef\u4ee5\u662f \\(T\\) / \u6216\u8005\u6b21\u6570 \\(n\\) Python\u4ee3\u7801\uff08\u4ec5\u5c55\u793a\u529f\u80fd\uff09 def forward_euler ( f , U0 , T , n ): \"\"\" Solve u' = f(u, t), where u(0) = U0 with n steps until T \"\"\" t = np . zeros ( n + 1 ) # \u81ea\u53d8\u91cfarray u = np . zeros ( n + 1 ) # \u65b9\u7a0b\u7684\u503carray u [ 0 ] = U0 # \u65b9\u7a0b\u521d\u59cb\u503c t [ 0 ] = 0 # \u81ea\u53d8\u91cf\u521d\u59cb\u503c dt = T / n # \u6b65\u957f\u53ef\u4ee5\u7b97\u51fa\u6765\uff0c\u4ece\u533a\u95f4T\uff0c\u9664\u4ee5\u66f4\u65b0\u6b21\u6570n\u3002dt, T, n \u4e09\u8005\u53d6\u5176\u4e8c\u4f5c\u4e3a\u8f93\u5165\u5373\u53ef\u3002 # n \u4e3a\u66f4\u65b0\u6b21\u6570 # \u6bcf\u6b21\u66f4\u65b0\u4e24\u4e2a\u503c\uff1a\u81ea\u53d8\u91cf\u548c\u65b9\u7a0b for k in range ( n ): t [ k + 1 ] = t [ k ] + dt # \u6839\u636et0\u66f4\u65b0t1,\u4ee5\u6b64\u7c7b\u63a8 u [ k + 1 ] = u [ k ] + dt * f ( u [ k ], t [ k ]) # \u6839\u636eu0\uff0c\u66f4\u65b0u1\uff0c\u4ee5\u6b64\u7c7b\u63a8 # \u8fd4\u56deu\u548ct\u7684array\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53ef\u89c6\u5316\u7b49\u7b49 return u , t // \u5b9a\u4e49f def f ( t ): return u + t 3.2 \u9f99\u683c\u5e93\u58544\u9636 RK4 \u6839\u636e \\((3)\\) \uff0cRK4\u65b9\u6cd5\u7684 \u66f4\u65b0 \u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\(y_{n+1}=y_n + \\displaystyle\\frac{h}{6}(k_1 + 2k_2 + 2k_3 + k4) \\qquad (6)\\) \u5176\u4e2d\uff0c \\(\\left\\{\\begin{aligned} k_1 &= f(y_n, t_n) \\\\ k_2 &=f(y_n + h\\frac{k_1}{2}, t_n+\\frac{h}{2}) \\\\ k_3 &=f(y_n + h\\frac{k_2}{2}, t_n+\\frac{h}{2}) \\\\ k_4&=f(y_n+hk_3, t_n + h) \\end{aligned} \\right.\\) 4. \u4e8c\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u4f8b\u5b50 \u6c42\u89e3ODE\u7cfb\u7edf\uff1a Solving ODEs in Python 3: System of Equations Rust","title":"Python\u6c42\u89e3\u5668"},{"location":"math/ode/ode-python/#python","text":"","title":"Python\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u5668"},{"location":"math/ode/ode-python/#_1","text":"\u4f7f\u7528python\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684ODE\u6c42\u89e3\u5668","title":"\u76ee\u6807"},{"location":"math/ode/ode-python/#_2","text":"","title":"\u5e38\u5fae\u5206\u65b9\u7a0b"},{"location":"math/ode/ode-python/#1","text":"\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u7684\u6807\u51c6\u5f62\u5f0f\uff0c\u5982 \\((1)\\) \uff1a $$ y^{'}=f(x,y) \\qquad (1) $$ \u5982\u679c\u8003\u8651\u65f6\u95f4\u4e3a\u81ea\u53d8\u91cf\uff0c\u5219\u53ef\u4ee5\u5199\u6210\uff1a $$ u^{'}(t) = f(u(t),t) \\qquad (2) $$ \u5728\u6784\u5efa\u6c42\u89e3\u5668\u65f6\uff0c \u6c42\u89e3\u7684\u5bf9\u8c61\u662f \\(u(t)\\) \uff0c\u5373\u4e00\u4e2a\u5173\u4e8e \\(t\\) \u7684\u51fd\u6570 \u3002 \u4f46\u662f\uff0c\u51fd\u6570\u65e0\u6cd5\u7528\u4ee3\u7801\u6765\u8868\u793a\u3002\u4e8e\u662f\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6c42\u89e3\u5f97\u5230\u7684\u5177\u4f53\u5f62\u5f0f\u4e3a\u4e00\u4e2a\u6570\u7ec4\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe \\(t\\) \u7684\u5f62\u5f0f\u4e3a \\((0,1,2,...,n-1)\\) \u4e00\u5171n\u4e2a\u7684\u79bb\u6563\u7684\u65f6\u95f4\u70b9\uff0c\u90a3\u4e48\uff0c\u6c42\u89e3\u51fa\u6765\u5bf9\u5e94\u7684 \\(u(t)\\) \u7684\u5f62\u5f0f\u4e5f\u662f\u4e00\u4e2an\u7ef4\u7684\u6570\u7ec4\uff0c\u5176\u5f62\u5f0f\u4e3a \\((5.3, 5.4, 5.5,...8.3)\\) \u3002\u4ece\u53ef\u89c6\u5316\u7684\u89d2\u5ea6\u6765\u770b\uff0c \u8fd9\u4e24\u4e2a\u6570\u7ec4\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u5750\u6807\u7684x\u8f74\u548cy\u8f74 \uff0c\u4e5f\u5c31\u53ef\u4ee5\u7528\u8fd9\u6761\u79bb\u6563\u7684\u66f2\u7ebf\u6765\u8868\u8fbe\u6c42\u89e3\u7684\u5bf9\u8c61 \\(u(t\\) )\u3002 \u5bf9\u4e8e\u4e8c\u9636\uff0c\u53ef\u4ee5\u5199\u6210\uff1a $$ y {''}=f(x,y,y ), \\quad y(x_0)=y_0, \\quad y^{'}(x_0)=u_0 $$ \u7528\u4e2d\u95f4\u53d8\u91cf\u6765\u8868\u793a\uff1a $$ \\begin{cases} u=y^{'}, \\quad u(x_0)=u_0\\ u^{'}=f(x,y,u), \\quad y(x_0)=y_0 \\end{cases} $$","title":"1. \u6807\u51c6\u5f62\u5f0f"},{"location":"math/ode/ode-python/#2","text":"\u663e\u5f0f\uff0c\u6b27\u62c9\u524d\u5411 Forward euler method \u9690\u5f0f\u6b27\u62c9 \u9f99\u683c\u5e93\u5854 Runge-Kutta \u9f99\u683c\u5e93\u5854\u56db\u9636 RK4 \u591a\u6b65\u6cd5 Multistep Adams Bashforth Moulton","title":"2. \u6570\u503c\u65b9\u6cd5"},{"location":"math/ode/ode-python/#3","text":"","title":"3. \u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u4f8b\u5b50"},{"location":"math/ode/ode-python/#31-python","text":"\u9488\u5bf9\u4e00\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u7684\u6807\u51c6\u8868\u8fbe\u5f62\u5f0f\uff0c\u5c06\u5fae\u5206\u65b9\u7a0b\u6539\u5199\uff1a $$ y^{'}=f(x,y)\\quad \\rightarrow \\quad \\frac{dy}{dx} = f(x, y) \\qquad (3) $$ \u6839\u636e \\((3)\\) \uff0c\u6b27\u62c9\u524d\u5411\u65b9\u6cd5\u7684 \u66f4\u65b0 \u53ef\u4ee5\u8868\u793a\u4e3a\uff1a $$ \\frac{y_{n+1} - y_n}{h}\\approx f(x_n,y_n) \\quad \\rightarrow \\quad y_{n+1} \\approx y_n + f(x_n, y_n)h \\qquad (4) $$ \u8fd8\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u6761\u4ef6\uff1a $$ y_0 = Y_0 \\qquad (5) $$ \u6c42\u89e3\u5fae\u5206\u65b9\u7a0b\u5c31\u662f\uff0c\u5df2\u77e5\u4e00\u4e2a\u65b9\u7a0b \\(f\\) \u5fae\u5206\u540e\u7684\u6a21\u6837\uff0c\u6c42\u89e3\u8fd9\u4e2a\u65b9\u7a0b \\(f\\) \u672c\u8eab\u3002 \u6839\u636e\u516c\u5f0f \\((4)\\) \u548c(5)\uff0c\u6c42\u89e3\u5668\u7684\u8f93\u5165\u9700\u8981\uff1a \u5199\u51fa\u6c42\u5bfc\u540e\u7684\u65b9\u7a0b \\(f\\) \uff0c\u5373 \\(y^{'}\\) \uff0c\u5176\u5b83\u5199\u6cd5\u53ef\u4ee5\u662f\u5b9a\u4e49 \\(u^{'}(t)\\) \u65b9\u7a0b\u7684\u521d\u59cb\u503c \\(y_0\\) \u6b65\u957f \\(h\\) \uff0c\u5176\u5b83\u5199\u6cd5\u53ef\u4ee5\u662f\uff0c \\(\\Delta t\\) / \u6216\u8005\u6b21\u6570 \\(n\\) \u81ea\u53d8\u91cf\u533a\u95f4\uff0c\u5176\u5b83\u5199\u6cd5\u53ef\u4ee5\u662f \\(T\\) / \u6216\u8005\u6b21\u6570 \\(n\\) Python\u4ee3\u7801\uff08\u4ec5\u5c55\u793a\u529f\u80fd\uff09 def forward_euler ( f , U0 , T , n ): \"\"\" Solve u' = f(u, t), where u(0) = U0 with n steps until T \"\"\" t = np . zeros ( n + 1 ) # \u81ea\u53d8\u91cfarray u = np . zeros ( n + 1 ) # \u65b9\u7a0b\u7684\u503carray u [ 0 ] = U0 # \u65b9\u7a0b\u521d\u59cb\u503c t [ 0 ] = 0 # \u81ea\u53d8\u91cf\u521d\u59cb\u503c dt = T / n # \u6b65\u957f\u53ef\u4ee5\u7b97\u51fa\u6765\uff0c\u4ece\u533a\u95f4T\uff0c\u9664\u4ee5\u66f4\u65b0\u6b21\u6570n\u3002dt, T, n \u4e09\u8005\u53d6\u5176\u4e8c\u4f5c\u4e3a\u8f93\u5165\u5373\u53ef\u3002 # n \u4e3a\u66f4\u65b0\u6b21\u6570 # \u6bcf\u6b21\u66f4\u65b0\u4e24\u4e2a\u503c\uff1a\u81ea\u53d8\u91cf\u548c\u65b9\u7a0b for k in range ( n ): t [ k + 1 ] = t [ k ] + dt # \u6839\u636et0\u66f4\u65b0t1,\u4ee5\u6b64\u7c7b\u63a8 u [ k + 1 ] = u [ k ] + dt * f ( u [ k ], t [ k ]) # \u6839\u636eu0\uff0c\u66f4\u65b0u1\uff0c\u4ee5\u6b64\u7c7b\u63a8 # \u8fd4\u56deu\u548ct\u7684array\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53ef\u89c6\u5316\u7b49\u7b49 return u , t // \u5b9a\u4e49f def f ( t ): return u + t","title":"3.1 \u6b27\u62c9\u524d\u5411\u65b9\u6cd5Python"},{"location":"math/ode/ode-python/#32-4-rk4","text":"\u6839\u636e \\((3)\\) \uff0cRK4\u65b9\u6cd5\u7684 \u66f4\u65b0 \u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\(y_{n+1}=y_n + \\displaystyle\\frac{h}{6}(k_1 + 2k_2 + 2k_3 + k4) \\qquad (6)\\) \u5176\u4e2d\uff0c \\(\\left\\{\\begin{aligned} k_1 &= f(y_n, t_n) \\\\ k_2 &=f(y_n + h\\frac{k_1}{2}, t_n+\\frac{h}{2}) \\\\ k_3 &=f(y_n + h\\frac{k_2}{2}, t_n+\\frac{h}{2}) \\\\ k_4&=f(y_n+hk_3, t_n + h) \\end{aligned} \\right.\\)","title":"3.2 \u9f99\u683c\u5e93\u58544\u9636 RK4"},{"location":"math/ode/ode-python/#4","text":"\u6c42\u89e3ODE\u7cfb\u7edf\uff1a Solving ODEs in Python 3: System of Equations Rust","title":"4. \u4e8c\u9636\u5e38\u5fae\u5206\u65b9\u7a0b\u4f8b\u5b50"},{"location":"math/ode/ode/","text":"\u5e38\u5fae\u5206\u65b9\u7a0b \u76ee\u6807 \u4e86\u89e3\u5e38\u7528\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u8fc7\u7a0b 1. \u663e\u5f0f\u6b27\u62c9\u65b9\u6cd5 1.1 \u524d\u5411\u6b27\u62c9\u6cd5 \\(u_{n+1}=u_n+h*f(x_n,u_n) \\qquad (1)\\) \u5c5e\u4e8e\u5355\u6b65\u7ebf\u6027\u6cd5\u3002\u7ebf\u6027\u65b9\u7a0b\uff0c\u76f4\u63a5\u8fed\u4ee3 1.2 \u6539\u8fdb\u6b27\u62c9\u6cd5 \u6b27\u62c9\u6cd5\u7528\u68af\u5f62\u516c\u5f0f\u8868\u8fbe \\((1)\\) \\(u_{n+1}=u_n+\\displaystyle\\frac{h}{2}(f(x_n,u_n)+f(x_{n+1},u_{n+1}))\\qquad (2)\\) \u7cbe\u5ea6\u9ad8\uff0c\u4f46\u662f\u8981\u89e3\u975e\u7ebf\u6027\u65b9\u7a0b \u5c5e\u4e8e\u5355\u6b65\u6cd5 \u8fed\u4ee3\u6cd5\u89e3 \\((2)\\) \uff1a \\(u^{k+1}_{n+1}=u_n+\\displaystyle\\frac{h}{2}(f(x_n,u_n)+f(x_{n+1},u^{k}_{n+1}))\\qquad k=0,1,2,...\\) 1.3 \u9f99\u683c\u5e93\u5854RK4 \u663e\u5f0f\u66f4\u65b0\u7528\u5230\u7684\u516c\u5f0f\u4e3a\uff1a \\(y_{n+1}=y_n + \\displaystyle\\frac{h}{6}(k_1 + 2k_2 + 2k_3 + k4)\\) \u5176\u4e2d\uff1a \\(\\begin{cases} k_1 = f(y_n, t_n) \\\\ k_2=f(y_n + h\\displaystyle\\frac{k_1}{2}, t_n+\\frac{h}{2}) \\\\ k_3=f(y_n + h\\displaystyle\\frac{k_2}{2}, t_n+\\frac{h}{2}) \\\\ k_4=f(y_n+hk_3, t_n + h) \\end{cases}\\) 2. \u9690\u5f0f\u6b27\u62c9\u65b9\u6cd5 x. \u7ebf\u6027\u5dee\u5206\u65b9\u7a0b","title":"\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3"},{"location":"math/ode/ode/#_1","text":"","title":"\u5e38\u5fae\u5206\u65b9\u7a0b"},{"location":"math/ode/ode/#_2","text":"\u4e86\u89e3\u5e38\u7528\u7684\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u8fc7\u7a0b","title":"\u76ee\u6807"},{"location":"math/ode/ode/#1","text":"","title":"1. \u663e\u5f0f\u6b27\u62c9\u65b9\u6cd5"},{"location":"math/ode/ode/#11","text":"\\(u_{n+1}=u_n+h*f(x_n,u_n) \\qquad (1)\\) \u5c5e\u4e8e\u5355\u6b65\u7ebf\u6027\u6cd5\u3002\u7ebf\u6027\u65b9\u7a0b\uff0c\u76f4\u63a5\u8fed\u4ee3","title":"1.1 \u524d\u5411\u6b27\u62c9\u6cd5"},{"location":"math/ode/ode/#12","text":"\u6b27\u62c9\u6cd5\u7528\u68af\u5f62\u516c\u5f0f\u8868\u8fbe \\((1)\\) \\(u_{n+1}=u_n+\\displaystyle\\frac{h}{2}(f(x_n,u_n)+f(x_{n+1},u_{n+1}))\\qquad (2)\\) \u7cbe\u5ea6\u9ad8\uff0c\u4f46\u662f\u8981\u89e3\u975e\u7ebf\u6027\u65b9\u7a0b \u5c5e\u4e8e\u5355\u6b65\u6cd5 \u8fed\u4ee3\u6cd5\u89e3 \\((2)\\) \uff1a \\(u^{k+1}_{n+1}=u_n+\\displaystyle\\frac{h}{2}(f(x_n,u_n)+f(x_{n+1},u^{k}_{n+1}))\\qquad k=0,1,2,...\\)","title":"1.2 \u6539\u8fdb\u6b27\u62c9\u6cd5"},{"location":"math/ode/ode/#13-rk4","text":"\u663e\u5f0f\u66f4\u65b0\u7528\u5230\u7684\u516c\u5f0f\u4e3a\uff1a \\(y_{n+1}=y_n + \\displaystyle\\frac{h}{6}(k_1 + 2k_2 + 2k_3 + k4)\\) \u5176\u4e2d\uff1a \\(\\begin{cases} k_1 = f(y_n, t_n) \\\\ k_2=f(y_n + h\\displaystyle\\frac{k_1}{2}, t_n+\\frac{h}{2}) \\\\ k_3=f(y_n + h\\displaystyle\\frac{k_2}{2}, t_n+\\frac{h}{2}) \\\\ k_4=f(y_n+hk_3, t_n + h) \\end{cases}\\)","title":"1.3 \u9f99\u683c\u5e93\u5854RK4"},{"location":"math/ode/ode/#2","text":"","title":"2. \u9690\u5f0f\u6b27\u62c9\u65b9\u6cd5"},{"location":"math/ode/ode/#x","text":"","title":"x. \u7ebf\u6027\u5dee\u5206\u65b9\u7a0b"},{"location":"math/pde/pde-history/","text":"\u504f\u5fae\u5206\u65b9\u7a0b\u5386\u53f2 \u6765\u6e90\u8bba\u6587\uff1a Haim Brezis and Felix Browder, Partial Differential Equations in the 20th Century, 1997 \u8bba\u6587\u5185\u5bb9\u8f83\u591a\u4e14\u6df1\uff0c\u5e73\u65f6\u770b\u7740\u73a9\u7ffb\u8bd1\u7ffb\u8bd1\uff0c\u5e94\u8be5\u662f\u7ffb\u8bd1\u4e0d\u5b8c \u5f15\u8a00 \u504f\u5fae\u5206\u65b9\u7a0b\uff08PDE\uff09\u7684\u7814\u7a76\u59cb\u4e8e18\u4e16\u7eaa\uff0c\u4ee5\u6b27\u62c9(Euler)\u3001\u8fbe\u6717\u8d1d\u5c14(d'Alembert)\u3001\u62c9\u683c\u6717\u65e5(Lagrange)\u548c\u62c9\u666e\u62c9\u65af(Laplace)\u7b49\u4eba\u7684\u5de5\u4f5c\u4f5c\u4e3a\u63cf\u8ff0\u8fde\u7eed\u4f53\u529b\u5b66\u7684\u4e3b\u8981\u5de5\u5177\u3002\u666e\u904d\u6765\u8bf4\uff0c\u662f\u4f5c\u4e3a\u7269\u7406\u79d1\u5b66\u4e2d\u6a21\u578b\u5206\u6790\u7814\u7a76\u7684\u4e3b\u8981\u6a21\u5f0f\u3002\u5206\u6790\u7269\u7406\u6a21\u578b\u76f4\u81f3\u4eca\u65e5\uff0c\u5efa\u7acbPDE\u4e00\u76f4\u662f\u4e00\u4e2a\u57fa\u7840\u5173\u5207\u3002\u4ece19\u4e16\u7eaa\u4e2d\u5f00\u59cb\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u9ece\u66fc\u7684\u5de5\u4f5c\uff0cPDE\u6210\u4e3a\u4e86\u6570\u5b66\u5176\u5b83\u5206\u652f\u7684\u91cd\u8981\u5de5\u5177\u3002 \u5e9e\u52a0\u83b1\uff08H. Poincare\uff09\u57281890\u5e74\u7684\u8bba\u6587\u4e2d\u63d0\u51faPDE\u7684\u4e24\u4e2a\u89c6\u89d2\uff0c\u4ed6\u5f3a\u8c03\uff0c\u5728\u4f17\u591a\u4e0d\u540c\u7684\u9886\u57df\uff0c\u6709\u975e\u5e38\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7269\u7406\u91cd\u8981\u95ee\u9898\uff0c\u4f8b\u5982\u7535\u5b66\u3001\u6df7\u5408\u52a8\u6001\u5b66\u3001\u70ed\u5b66\u3001\u78c1\u573a\u3001\u5149\u5b66\u3001\u5f39\u6027\u7b49\uff0c\u90fd\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002 18\u4e16\u7eaa-19\u4e16\u7eaa\uff1aPDE\u7684\u6a21\u578b \u572818\u4e16\u7eaa\uff0c\u5355\u53d8\u91cf\u4e00\u9636PDE\u4ee5\u53ca\u8f6c\u6362\u5230ODE\u7cfb\u7edf\u7684\u7406\u8bba\u9010\u6b65\u6210\u719f\u3002\u7ecf\u5178\u7684PDE\u4f5c\u4e3a18-19\u4e16\u7eaa\u540e\u7eed\u53d1\u5c55\u7684\u57fa\u7840\u3002\u4e00\u7ef4\u6ce2\u52a8\u65b9\u7a0b \\(\\displaystyle\\frac{\\partial^2u}{\\partial t^2}=\\frac{\\partial^2u}{\\partial x^2}\\) \u7531\u8fbe\u6717\u8d1d\u5c14\u57281752\u5e74\u63d0\u51fa\uff0c\u4f5c\u4e3a\u5206\u6790\u9707\u52a8\u5f26\u7684\u6a21\u578b\u3002\u6b27\u62c9\u57281759\u5e74\u62d3\u5c55\u4e86\u8fd9\u4e2a\u6210\u679c\uff0c\u4f2f\u52aa\u5229\u57281762\u5e74\u5728\u7814\u7a76\u58f0\u6ce2\u65f6\uff0c\u5c06\u5b83\u6269\u5c55\u5230\u4e8c\u7ef4\u548c\u4e09\u7ef4\u7684\u6ce2\u52a8\u65b9\u7a0b \\(\\displaystyle\\frac{\\partial^2u}{\\partial t^2}=\\Delta u\\) \u3002\u62c9\u666e\u62c9\u65af\u7b49\u5f0f \\(\\Delta u = 0\\) \u7531\u62c9\u666e\u62c9\u65af\u57281780\u5e74\u7814\u7a76\u91cd\u529b\u52bf\u80fd\u573a\u65f6\u63d0\u51fa\u3002\u70ed\u65b9\u7a0b \\(\\displaystyle\\frac{\\partial u}{\\partial t}=\\Delta u\\) \u7531\u5085\u7acb\u53f6\uff08Fourier\uff09\u57281810-1822\u5de6\u53f3\u63d0\u51fa\u3002\u81f3\u6b64\uff0c\u4e8c\u9636PDE\u7684\u4e09\u4e2a\u4e3b\u8981\u5f62\u5f0f - \u53cc\u66f2\u7ebf(hyperbolic)\u3001\u692d\u5706(elliptic)\u548c\u629b\u7269\u7ebf(parabolic) \uff0c\u572819\u4e16\u7eaa\u521d\u5c31\u5df2\u7ecf\u5168\u90e8\u51fa\u73b0\uff0c\u5728\u8be5\u4e16\u7eaa\u968f\u540e\u7684\u65f6\u95f4\u91cc\uff0c\u76f8\u5173\u7684\u8fb9\u754c\u503c\u95ee\u9898\uff08BVP\uff09\u5e76\u6ca1\u6709\u4e00\u4e2a\u6e05\u695a\u7684\u8868\u8fbe\u3002 \u9664\u4e86\u8fd9\u4e09\u4e2a\u5916\uff0c\u57281750-1900\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u8fd8\u6709\u5927\u91cf\u4e3b\u8981\u7269\u7406\u73b0\u8c61\u76f8\u5173\u7684\u65b9\u7a0b\u30021755\u5e74\uff0c \u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u7684\u6b27\u62c9\u65b9\u7a0b(Euler equation of incompressible fluid flows) \u30011760\u5e74\uff0c\u62c9\u683c\u6717\u65e5\u7684 \u6781\u5c0f\u66f2\u9762\u65b9\u7a0b (minimal surface equation) \u30011775\u5e74\uff0c \u8499\u65e5\u4e00\u5b89\u57f9\u65b9\u7a0b (Monge-Ampere equation) \u30011813\u5e74\u7531\u6cca\u677e\u5f00\u59cb \u62c9\u666e\u62c9\u65af\u7684\u6cca\u677e\u65b9\u7a0b (Laplace and Poisson equations) \uff0c\u5e94\u7528\u5728\u7535\u78c1\u95ee\u9898\u30011822-1827\u5e74\u7531\u7ef4\u7eb3\u63d0\u51fa\u7684 \u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b (Navier-Stokes equations) \uff0c\u540e\u7531\u6cca\u677e\u548c\u65af\u6258\u514b\u7ee7\u7eed\u7814\u7a76\u30011821-1822\u5e74\u7ef4\u7eb3\u548c\u67ef\u897f\u7684 \u7ebf\u6027\u5f39\u6027(Linear elasticity) \u30011864\u5e74\u7535\u78c1\u7406\u8bba\u4e2d\u7684 \u9ea6\u514b\u65af\u97e6\u65b9\u7a0b (Maxwell's equation) \u30011860\u5e74\u4e0e\u58f0\u5b66\u6709\u5173\u7684 \u4ea5\u59c6\u970d\u5179\u65b9\u7a0b(Helmholtz equation) \u548c \u62c9\u666e\u62c9\u65af\u7b97\u5b50(Laplace operator) \u7684\u7279\u5f81\u503c\u95ee\u9898\u30011840\u5e74\u4ee3\u7684\u7ed9\u80a5\u7682\u6ce1\u6a21\u578b\u7684 \u666e\u62c9\u6258\u95ee\u9898(Plateau problem) \u30011896\u5e74\u5355\u4e2a\u6c34\u6ce2\u7684 \u79d1\u7279\u97e6\u8d6b-\u5fb7\u5f17\u91cc\u65af\u65b9\u7a0b(Korteweg-De Vries equation) \u3002 19\u4e16\u7eaa\uff0cPDE\u548c\u4e3b\u6d41\u7684\u6570\u5b66\u53d1\u5c55\u7ed3\u5408\u8d77\u6765\u3002\u4e3b\u8981\u662fPDE\u5728\u590d\u53d8\u5206\u6790\u51fd\u6570\u7406\u8bba\u4e2d\u7684\u4f5c\u7528\u3002\u67ef\u897f\u57281827\u5e74\u89c2\u5bdf\u5230\uff0c\u4e24\u4e2a\u5b9e\u6570\u53d8\u91cfx\u3001y\u7684\u4e24\u4e2a\u5e73\u6ed1\u5b9e\u6570\u51fd\u6570u\u3001v\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u590d\u53d8\u5206\u6790\u51fd\u6570z=x+iy\u7684\u5b9e\u90e8\u548c\u865a\u90e8\uff0c\u5982\u679c\u6ee1\u8db3Cauchy-Riemann\u4e00\u9636\u65b9\u7a0b\u7ec4\u30021851\u5e74\u540e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u79f0\u4e3a\u4e86\u5206\u6790\u51fd\u6570\u7684\u6838\u5fc3\u7279\u5f81\u3002 19\u4e16\u7eaa\uff1a\u6c42\u89e3\u65b9\u6cd5 19\u4e16\u7eaa\u671f\u95f4\u51fa\u73b0\u4e86\u975e\u5e38\u591a\u7684\u6ee1\u8db3\u7279\u5b9a\u7684\u8f85\u52a9\u8fb9\u754c\u6761\u4ef6\u4e0b\u7684PDE\u89e3\u6cd5\u3002 \u53d8\u91cf\u5206\u79bb\u6cd5\u548c\u7ebf\u6027\u65b9\u7a0b\u7684\u53e0\u52a0\u6cd5\uff0c\u4e8c\u7ef4\u5b9e\u8c10\u51fd\u6570\u548c\u5355\u590d\u53d8\u5206\u6790\u51fd\u6570\u7814\u7a76\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u683c\u6797\u51fd\u6570\u3002\u3002\u3002\u5e42\u7ea7\u6570\u65b9\u6cd5\u88ab\u6b27\u62c9\u3001\u8fbe\u6717\u8d1d\u5c14\u3001\u62c9\u666e\u62c9\u65af\u548c\u5176\u5b83\u4eba\u7528\u6765\u5305\u542bPDE\u7684\u7279\u5b9a\u89e3\u3002\u4f46\u662f\uff0c\u5e42\u7ea7\u6570\u7cfb\u7edf\u7684\u4f7f\u7528\uff0c\u7279\u522b\u975e\u7ebf\u6027PDE\u7684\u521d\u59cb\u503c\u95ee\u9898\uff0c\u662f\u67ef\u897f\u4ece1840\u5e74\u624d\u5f00\u59cb\u7684\u3002\u5b83\u9996\u5148\u5f00\u59cb\u4e8e\u5b58\u5728\u7406\u8bba\uff0c\u5373\u4f7f\u663e\u5f0f\u89e3\u4e0d\u5b58\u5728 19\u4e16\u7eaa\u672b\u53ef\u6c42\u89e3\u6027\u7406\u8bba\u7684\u53d1\u5c55 1890-1900\uff1a\u73b0\u4ee3PDE\u7684\u5f00\u7aef\u4e0e\u5e9e\u52a0\u83b1\u7684\u5de5\u4f5c \u5e0c\u5c14\u4f2f\u7279\u9879\u76ee \u4f2f\u6069\u65af\u5766\u4ee5\u53ca\u5148\u9a8c\u4f30\u8ba1\u7684\u5f00\u7aef \u4e8c\u9636\u7ebf\u6027\u692d\u5706\u65b9\u7a0b\u7684\u53ef\u6c42\u89e3\u6027 \u52d2\u96f7\u4e00\u7ecd\u5fb7\u5c14\u4e0d\u52a8\u70b9\u7406\u8bba Hadamard\u3001PDE\u5206\u7c7b\u4ee5\u53ca\u8fb9\u754c\u503c\u95ee\u9898 \u5f31\u89e3 \u7d22\u4f2f\u5217\u592b\u7a7a\u95f4 \u65bd\u74e6\u5179\u5206\u5e03\u7406\u8bba \u5e0c\u5c14\u4f2f\u7279\u7a7a\u95f4\u65b9\u6cd5 \u5947\u5f02\u6027\u79ef\u5206 \u901a\u7528\u7ebf\u6027\u692d\u5706\u8fb9\u754c\u503c\u95ee\u9898 \u7ebf\u6027\u65b9\u7a0b\u7684\u8fdb\u5316\uff1a\u5e0c\u5c14\u4e00\u5409\u7530\u8015\u4f5c\u5b9a\u7406 \u8c31\u7406\u8bba \u6700\u5927\u539f\u7406\u548c\u5e94\u7528\uff1a\u5fb7\u00b7\u5409\u5965\u57fa\u4e00\u7eb3\u4ec0\u4f30\u8ba1 \u975e\u7ebf\u6027\u65b9\u7a0b\u7684\u8fdb\u5316\uff1a\u6d41\u4f53\u6d41\u52a8\u548c\u6c14\u4f53\u52a8\u529b\u5b66 \u975e\u7ebf\u6027PDE\u548c\u975e\u7ebf\u6027\u6cdb\u51fd\u5206\u6790 \u81ea\u7531\u8fb9\u503c\u95ee\u9898\uff1a\u53d8\u91cf\u4e0d\u7b49\u5f0f \u51c6\u7ebf\u6027\u548c\u5b8c\u5168\u975e\u7ebf\u6027\u692d\u5706\u65b9\u7a0b PDE\u548c\u5fae\u5206\u51e0\u4f55 PDE\u6c42\u89e3\u8ba1\u7b97\uff1a\u6570\u503c\u5206\u6790\u548c\u8ba1\u7b97\u79d1\u5b66","title":"\u5386\u53f2"},{"location":"math/pde/pde-history/#_1","text":"\u6765\u6e90\u8bba\u6587\uff1a Haim Brezis and Felix Browder, Partial Differential Equations in the 20th Century, 1997 \u8bba\u6587\u5185\u5bb9\u8f83\u591a\u4e14\u6df1\uff0c\u5e73\u65f6\u770b\u7740\u73a9\u7ffb\u8bd1\u7ffb\u8bd1\uff0c\u5e94\u8be5\u662f\u7ffb\u8bd1\u4e0d\u5b8c","title":"\u504f\u5fae\u5206\u65b9\u7a0b\u5386\u53f2"},{"location":"math/pde/pde-history/#_2","text":"\u504f\u5fae\u5206\u65b9\u7a0b\uff08PDE\uff09\u7684\u7814\u7a76\u59cb\u4e8e18\u4e16\u7eaa\uff0c\u4ee5\u6b27\u62c9(Euler)\u3001\u8fbe\u6717\u8d1d\u5c14(d'Alembert)\u3001\u62c9\u683c\u6717\u65e5(Lagrange)\u548c\u62c9\u666e\u62c9\u65af(Laplace)\u7b49\u4eba\u7684\u5de5\u4f5c\u4f5c\u4e3a\u63cf\u8ff0\u8fde\u7eed\u4f53\u529b\u5b66\u7684\u4e3b\u8981\u5de5\u5177\u3002\u666e\u904d\u6765\u8bf4\uff0c\u662f\u4f5c\u4e3a\u7269\u7406\u79d1\u5b66\u4e2d\u6a21\u578b\u5206\u6790\u7814\u7a76\u7684\u4e3b\u8981\u6a21\u5f0f\u3002\u5206\u6790\u7269\u7406\u6a21\u578b\u76f4\u81f3\u4eca\u65e5\uff0c\u5efa\u7acbPDE\u4e00\u76f4\u662f\u4e00\u4e2a\u57fa\u7840\u5173\u5207\u3002\u4ece19\u4e16\u7eaa\u4e2d\u5f00\u59cb\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u9ece\u66fc\u7684\u5de5\u4f5c\uff0cPDE\u6210\u4e3a\u4e86\u6570\u5b66\u5176\u5b83\u5206\u652f\u7684\u91cd\u8981\u5de5\u5177\u3002 \u5e9e\u52a0\u83b1\uff08H. Poincare\uff09\u57281890\u5e74\u7684\u8bba\u6587\u4e2d\u63d0\u51faPDE\u7684\u4e24\u4e2a\u89c6\u89d2\uff0c\u4ed6\u5f3a\u8c03\uff0c\u5728\u4f17\u591a\u4e0d\u540c\u7684\u9886\u57df\uff0c\u6709\u975e\u5e38\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7269\u7406\u91cd\u8981\u95ee\u9898\uff0c\u4f8b\u5982\u7535\u5b66\u3001\u6df7\u5408\u52a8\u6001\u5b66\u3001\u70ed\u5b66\u3001\u78c1\u573a\u3001\u5149\u5b66\u3001\u5f39\u6027\u7b49\uff0c\u90fd\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002","title":"\u5f15\u8a00"},{"location":"math/pde/pde-history/#18-19pde","text":"\u572818\u4e16\u7eaa\uff0c\u5355\u53d8\u91cf\u4e00\u9636PDE\u4ee5\u53ca\u8f6c\u6362\u5230ODE\u7cfb\u7edf\u7684\u7406\u8bba\u9010\u6b65\u6210\u719f\u3002\u7ecf\u5178\u7684PDE\u4f5c\u4e3a18-19\u4e16\u7eaa\u540e\u7eed\u53d1\u5c55\u7684\u57fa\u7840\u3002\u4e00\u7ef4\u6ce2\u52a8\u65b9\u7a0b \\(\\displaystyle\\frac{\\partial^2u}{\\partial t^2}=\\frac{\\partial^2u}{\\partial x^2}\\) \u7531\u8fbe\u6717\u8d1d\u5c14\u57281752\u5e74\u63d0\u51fa\uff0c\u4f5c\u4e3a\u5206\u6790\u9707\u52a8\u5f26\u7684\u6a21\u578b\u3002\u6b27\u62c9\u57281759\u5e74\u62d3\u5c55\u4e86\u8fd9\u4e2a\u6210\u679c\uff0c\u4f2f\u52aa\u5229\u57281762\u5e74\u5728\u7814\u7a76\u58f0\u6ce2\u65f6\uff0c\u5c06\u5b83\u6269\u5c55\u5230\u4e8c\u7ef4\u548c\u4e09\u7ef4\u7684\u6ce2\u52a8\u65b9\u7a0b \\(\\displaystyle\\frac{\\partial^2u}{\\partial t^2}=\\Delta u\\) \u3002\u62c9\u666e\u62c9\u65af\u7b49\u5f0f \\(\\Delta u = 0\\) \u7531\u62c9\u666e\u62c9\u65af\u57281780\u5e74\u7814\u7a76\u91cd\u529b\u52bf\u80fd\u573a\u65f6\u63d0\u51fa\u3002\u70ed\u65b9\u7a0b \\(\\displaystyle\\frac{\\partial u}{\\partial t}=\\Delta u\\) \u7531\u5085\u7acb\u53f6\uff08Fourier\uff09\u57281810-1822\u5de6\u53f3\u63d0\u51fa\u3002\u81f3\u6b64\uff0c\u4e8c\u9636PDE\u7684\u4e09\u4e2a\u4e3b\u8981\u5f62\u5f0f - \u53cc\u66f2\u7ebf(hyperbolic)\u3001\u692d\u5706(elliptic)\u548c\u629b\u7269\u7ebf(parabolic) \uff0c\u572819\u4e16\u7eaa\u521d\u5c31\u5df2\u7ecf\u5168\u90e8\u51fa\u73b0\uff0c\u5728\u8be5\u4e16\u7eaa\u968f\u540e\u7684\u65f6\u95f4\u91cc\uff0c\u76f8\u5173\u7684\u8fb9\u754c\u503c\u95ee\u9898\uff08BVP\uff09\u5e76\u6ca1\u6709\u4e00\u4e2a\u6e05\u695a\u7684\u8868\u8fbe\u3002 \u9664\u4e86\u8fd9\u4e09\u4e2a\u5916\uff0c\u57281750-1900\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u8fd8\u6709\u5927\u91cf\u4e3b\u8981\u7269\u7406\u73b0\u8c61\u76f8\u5173\u7684\u65b9\u7a0b\u30021755\u5e74\uff0c \u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u7684\u6b27\u62c9\u65b9\u7a0b(Euler equation of incompressible fluid flows) \u30011760\u5e74\uff0c\u62c9\u683c\u6717\u65e5\u7684 \u6781\u5c0f\u66f2\u9762\u65b9\u7a0b (minimal surface equation) \u30011775\u5e74\uff0c \u8499\u65e5\u4e00\u5b89\u57f9\u65b9\u7a0b (Monge-Ampere equation) \u30011813\u5e74\u7531\u6cca\u677e\u5f00\u59cb \u62c9\u666e\u62c9\u65af\u7684\u6cca\u677e\u65b9\u7a0b (Laplace and Poisson equations) \uff0c\u5e94\u7528\u5728\u7535\u78c1\u95ee\u9898\u30011822-1827\u5e74\u7531\u7ef4\u7eb3\u63d0\u51fa\u7684 \u7eb3\u7ef4-\u65af\u6258\u514b\u65af\u65b9\u7a0b (Navier-Stokes equations) \uff0c\u540e\u7531\u6cca\u677e\u548c\u65af\u6258\u514b\u7ee7\u7eed\u7814\u7a76\u30011821-1822\u5e74\u7ef4\u7eb3\u548c\u67ef\u897f\u7684 \u7ebf\u6027\u5f39\u6027(Linear elasticity) \u30011864\u5e74\u7535\u78c1\u7406\u8bba\u4e2d\u7684 \u9ea6\u514b\u65af\u97e6\u65b9\u7a0b (Maxwell's equation) \u30011860\u5e74\u4e0e\u58f0\u5b66\u6709\u5173\u7684 \u4ea5\u59c6\u970d\u5179\u65b9\u7a0b(Helmholtz equation) \u548c \u62c9\u666e\u62c9\u65af\u7b97\u5b50(Laplace operator) \u7684\u7279\u5f81\u503c\u95ee\u9898\u30011840\u5e74\u4ee3\u7684\u7ed9\u80a5\u7682\u6ce1\u6a21\u578b\u7684 \u666e\u62c9\u6258\u95ee\u9898(Plateau problem) \u30011896\u5e74\u5355\u4e2a\u6c34\u6ce2\u7684 \u79d1\u7279\u97e6\u8d6b-\u5fb7\u5f17\u91cc\u65af\u65b9\u7a0b(Korteweg-De Vries equation) \u3002 19\u4e16\u7eaa\uff0cPDE\u548c\u4e3b\u6d41\u7684\u6570\u5b66\u53d1\u5c55\u7ed3\u5408\u8d77\u6765\u3002\u4e3b\u8981\u662fPDE\u5728\u590d\u53d8\u5206\u6790\u51fd\u6570\u7406\u8bba\u4e2d\u7684\u4f5c\u7528\u3002\u67ef\u897f\u57281827\u5e74\u89c2\u5bdf\u5230\uff0c\u4e24\u4e2a\u5b9e\u6570\u53d8\u91cfx\u3001y\u7684\u4e24\u4e2a\u5e73\u6ed1\u5b9e\u6570\u51fd\u6570u\u3001v\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u590d\u53d8\u5206\u6790\u51fd\u6570z=x+iy\u7684\u5b9e\u90e8\u548c\u865a\u90e8\uff0c\u5982\u679c\u6ee1\u8db3Cauchy-Riemann\u4e00\u9636\u65b9\u7a0b\u7ec4\u30021851\u5e74\u540e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u79f0\u4e3a\u4e86\u5206\u6790\u51fd\u6570\u7684\u6838\u5fc3\u7279\u5f81\u3002","title":"18\u4e16\u7eaa-19\u4e16\u7eaa\uff1aPDE\u7684\u6a21\u578b"},{"location":"math/pde/pde-history/#19","text":"19\u4e16\u7eaa\u671f\u95f4\u51fa\u73b0\u4e86\u975e\u5e38\u591a\u7684\u6ee1\u8db3\u7279\u5b9a\u7684\u8f85\u52a9\u8fb9\u754c\u6761\u4ef6\u4e0b\u7684PDE\u89e3\u6cd5\u3002 \u53d8\u91cf\u5206\u79bb\u6cd5\u548c\u7ebf\u6027\u65b9\u7a0b\u7684\u53e0\u52a0\u6cd5\uff0c\u4e8c\u7ef4\u5b9e\u8c10\u51fd\u6570\u548c\u5355\u590d\u53d8\u5206\u6790\u51fd\u6570\u7814\u7a76\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u683c\u6797\u51fd\u6570\u3002\u3002\u3002\u5e42\u7ea7\u6570\u65b9\u6cd5\u88ab\u6b27\u62c9\u3001\u8fbe\u6717\u8d1d\u5c14\u3001\u62c9\u666e\u62c9\u65af\u548c\u5176\u5b83\u4eba\u7528\u6765\u5305\u542bPDE\u7684\u7279\u5b9a\u89e3\u3002\u4f46\u662f\uff0c\u5e42\u7ea7\u6570\u7cfb\u7edf\u7684\u4f7f\u7528\uff0c\u7279\u522b\u975e\u7ebf\u6027PDE\u7684\u521d\u59cb\u503c\u95ee\u9898\uff0c\u662f\u67ef\u897f\u4ece1840\u5e74\u624d\u5f00\u59cb\u7684\u3002\u5b83\u9996\u5148\u5f00\u59cb\u4e8e\u5b58\u5728\u7406\u8bba\uff0c\u5373\u4f7f\u663e\u5f0f\u89e3\u4e0d\u5b58\u5728","title":"19\u4e16\u7eaa\uff1a\u6c42\u89e3\u65b9\u6cd5"},{"location":"math/pde/pde-history/#19_1","text":"","title":"19\u4e16\u7eaa\u672b\u53ef\u6c42\u89e3\u6027\u7406\u8bba\u7684\u53d1\u5c55"},{"location":"math/pde/pde-history/#1890-1900pde","text":"","title":"1890-1900\uff1a\u73b0\u4ee3PDE\u7684\u5f00\u7aef\u4e0e\u5e9e\u52a0\u83b1\u7684\u5de5\u4f5c"},{"location":"math/pde/pde-history/#_3","text":"","title":"\u5e0c\u5c14\u4f2f\u7279\u9879\u76ee"},{"location":"math/pde/pde-history/#_4","text":"","title":"\u4f2f\u6069\u65af\u5766\u4ee5\u53ca\u5148\u9a8c\u4f30\u8ba1\u7684\u5f00\u7aef"},{"location":"math/pde/pde-history/#_5","text":"","title":"\u4e8c\u9636\u7ebf\u6027\u692d\u5706\u65b9\u7a0b\u7684\u53ef\u6c42\u89e3\u6027"},{"location":"math/pde/pde-history/#_6","text":"","title":"\u52d2\u96f7\u4e00\u7ecd\u5fb7\u5c14\u4e0d\u52a8\u70b9\u7406\u8bba"},{"location":"math/pde/pde-history/#hadamardpde","text":"","title":"Hadamard\u3001PDE\u5206\u7c7b\u4ee5\u53ca\u8fb9\u754c\u503c\u95ee\u9898"},{"location":"math/pde/pde-history/#_7","text":"","title":"\u5f31\u89e3"},{"location":"math/pde/pde-history/#_8","text":"","title":"\u7d22\u4f2f\u5217\u592b\u7a7a\u95f4"},{"location":"math/pde/pde-history/#_9","text":"","title":"\u65bd\u74e6\u5179\u5206\u5e03\u7406\u8bba"},{"location":"math/pde/pde-history/#_10","text":"","title":"\u5e0c\u5c14\u4f2f\u7279\u7a7a\u95f4\u65b9\u6cd5"},{"location":"math/pde/pde-history/#_11","text":"","title":"\u5947\u5f02\u6027\u79ef\u5206"},{"location":"math/pde/pde-history/#_12","text":"","title":"\u901a\u7528\u7ebf\u6027\u692d\u5706\u8fb9\u754c\u503c\u95ee\u9898"},{"location":"math/pde/pde-history/#_13","text":"","title":"\u7ebf\u6027\u65b9\u7a0b\u7684\u8fdb\u5316\uff1a\u5e0c\u5c14\u4e00\u5409\u7530\u8015\u4f5c\u5b9a\u7406"},{"location":"math/pde/pde-history/#_14","text":"","title":"\u8c31\u7406\u8bba"},{"location":"math/pde/pde-history/#_15","text":"","title":"\u6700\u5927\u539f\u7406\u548c\u5e94\u7528\uff1a\u5fb7\u00b7\u5409\u5965\u57fa\u4e00\u7eb3\u4ec0\u4f30\u8ba1"},{"location":"math/pde/pde-history/#_16","text":"","title":"\u975e\u7ebf\u6027\u65b9\u7a0b\u7684\u8fdb\u5316\uff1a\u6d41\u4f53\u6d41\u52a8\u548c\u6c14\u4f53\u52a8\u529b\u5b66"},{"location":"math/pde/pde-history/#pde","text":"","title":"\u975e\u7ebf\u6027PDE\u548c\u975e\u7ebf\u6027\u6cdb\u51fd\u5206\u6790"},{"location":"math/pde/pde-history/#_17","text":"","title":"\u81ea\u7531\u8fb9\u503c\u95ee\u9898\uff1a\u53d8\u91cf\u4e0d\u7b49\u5f0f"},{"location":"math/pde/pde-history/#_18","text":"","title":"\u51c6\u7ebf\u6027\u548c\u5b8c\u5168\u975e\u7ebf\u6027\u692d\u5706\u65b9\u7a0b"},{"location":"math/pde/pde-history/#pde_1","text":"","title":"PDE\u548c\u5fae\u5206\u51e0\u4f55"},{"location":"math/pde/pde-history/#pde_2","text":"","title":"PDE\u6c42\u89e3\u8ba1\u7b97\uff1a\u6570\u503c\u5206\u6790\u548c\u8ba1\u7b97\u79d1\u5b66"},{"location":"math/pde/pde/","text":"","title":"\u504f\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3"},{"location":"section/","text":"Hi","title":"Index"},{"location":"section/page-1/","text":"page 1","title":"Page 1"},{"location":"simulation/","text":"\u6a21\u62df\u4eff\u771f Andrei Borshchev and Alexei Filippov: From System Dynamics and Discrete Event to Practical Agent Based Modeling: Reasons, Techniques, Tools. The 22nd International Conference of the System Dynamics Society, July 25 - 29, 2004, Oxford, England \u7531\u4e8e\u6a21\u62df\u4eff\u771f\u7684\u6982\u5ff5\u8fc7\u4e8e\u5e9e\u5927\uff0c\u7ecf\u5e38\u6709\u6982\u5ff5\u6df7\u6dc6\u548c\u4e0d\u7406\u89e3\u7684\u56f0\u6270\u3002 \u6700\u8fd1\u8bfb\u5230\u4e00\u7bc7\u8bba\u6587\uff0c\u5bf9\u6a21\u62df\u4eff\u771f\u8fd9\u4e2a\u5de8\u5927\u7684\u4e3b\u9898\u505a\u4e86\u5206\u7c7b\uff0c\u611f\u89c9\u633a\u6709\u5e2e\u52a9\u7684\u3002\u8bba\u6587\u662f\u5728anylogic\u7684\u7f51\u7ad9\u4e0a\u627e\u5230\u7684\uff1a From System Dynamics and Discrete Event to Practical Agent Based Modeling: Reasons, Techniques, Tools \u4eff\u771f\u5efa\u6a21\u4e3b\u8981\u8303\u5f0f \u6839\u636e\u56feA\uff0c\u4eff\u771f\u5efa\u6a21\u7684\u8303\u5f0f\u548c\u7279\u70b9\u6709\uff1a \u7cfb\u7edf\u52a8\u6001\u5b66 (SD) \u65e8\u5728\u6a21\u62df\u62bd\u8c61\u5ea6\u9ad8\u7684\u3001\u8fde\u7eed\u7684\u7cfb\u7edf \u76f4\u89c2\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u663e\u5f0f\u5730\u8868\u8fbe\u4e3aStock-and-Flow\u7684\u56fe\u8868 \u91cd\u8981\u7684\u4e00\u73af\u662fStock-and-Flow\u4e2d\u7684\u53cd\u9988\u73af\u8def\uff0c\u4f7f\u5f97\u7cfb\u7edf\u5177\u6709\u52a8\u6001\u6027 \u79bb\u6563\u4e8b\u4ef6 (DE) \u6a21\u62df\u5bf9\u8c61\u5c31\u662f\u79bb\u6563\u4e8b\u4ef6\uff0c\u62bd\u8c61\u5ea6\u5c45\u4e2d \u5177\u6709\u79bb\u6563\u4e8b\u4ef6\u7684\u5b9e\u4f53\u3001\u5b9e\u4f53\u6240\u5728\u7684\u73af\u5883\u3001\u6d41\u7a0b\u56fe/\u7f51\u7edc\u3001\u8d44\u6e90\u7b49 \u4e00\u822c\u90fd\u6709\u65f6\u949f p.s. \u67d0\u4e9b\u573a\u666f\u4e0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u72b6\u6001\u673aFSM\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd \u57fa\u4e8e\u667a\u80fd\u4f53 (AB) \u6839\u636e\u4efb\u52a1\u76ee\u6807\u53ef\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u62bd\u8c61\u5ea6 \u6bcf\u4e2a\u667a\u80fd\u4f53agent\u662f\u72ec\u7acb\u7684\uff0c\u4e5f\u662f\u4e92\u76f8\u5173\u8054\u7684 \u884c\u4e3a\u89c4\u5219/\u5b66\u4e60\u76ee\u6807 \u52a8\u6001\u7cfb\u7edf (DS) \u62bd\u8c61\u5c42\u7ea7\u4f4e\uff0c\u9488\u5bf9\u7684\u95ee\u9898\u57fa\u672c\u90fd\u662f\u8fde\u7eed\u7684 \u7cfb\u7edf\u7684\u7269\u7406\u72b6\u6001 \u7528\u5fae\u5206\u65b9\u7a0b\u63cf\u8ff0\u7684\u7cfb\u7edf Fig. A \u4eff\u771f\u5efa\u6a21\u4e2d\u7684\u4e3b\u8981\u8303\u5f0f \u6a21\u62df\u4eff\u771f\u5e94\u7528\u4f8b\u5b50 \u5e94\u7528\u7684\u4f8b\u5b50\u5982\u56feB\uff0c\u6240\u6709\u7684\u5e94\u7528\u90fd\u53ef\u4ee5\u7406\u89e3\u4e3a\u4eff\u771f\uff0c\u4f46\u662f\u5176\u4eff\u771f\u5efa\u6a21\u4e4b\u95f4\u7684\u533a\u522b\u5f88\u5927\u3002 \u4f8b\u5982\u56fe\u5f62\u5b66\u4e2d\u7684CFD\u3001\u5de5\u7a0b\u4e2d\u7684FEM\uff0c\u5b83\u4eec\u6a21\u62df\u7684\u5bf9\u8c61\u662f\u8fde\u7eed\u4ecb\u8d28\u7684\u5fae\u89c2\u5c42\u9762\uff0c\u6709\u4f4d\u7f6e\u3001\u65f6\u95f4\u3001\u573a\u7684\u5f15\u5165\uff0c\u662f\u5173\u4e8e\u7269\u7406\u91cf\u672c\u8eab\u7684\u6a21\u62df\u4eff\u771f\u3002\u800c\u5de5\u5382\u548c\u751f\u4ea7\u7ebf\u7684OEE\u3001\u6d41\u7a0b\u548c\u6210\u672c\u7684\u5efa\u6a21\uff0c\u6d89\u53ca\u79bb\u6563\u4e8b\u4ef6/\u6d41\u7a0b\u7684\u5c5e\u6027\uff0c\u4ee5\u53ca\u901a\u8fc7\u6d41\u7a0b\u5173\u7cfb\u548c\u73af\u5883\u4ea4\u4e92\uff0c\u6700\u7ec8\u4eff\u771f\u51fa\u79bb\u6563\u7cfb\u7edf\u7684\u6548\u679c\u5448\u73b0\uff0c\u5c5e\u4e8e\u4e2d\u7b49\u76f4\u89c2\u5c42\u9762\u7684\u6a21\u62df\u4eff\u771f\u3002\u4f9b\u5e94\u94fe\u7684\u6a21\u62df\u4e5f\u4e00\u6837\u3002\u5e02\u573a\u7ade\u4e89\u548c\u4eba\u53e3\u52a8\u6001\u5b66\u63a5\u89e6\u8f83\u5c11\u3002 Fig. B \u6a21\u62df\u4eff\u771f\u7684\u4e00\u4e9b\u5e94\u7528\u4e3e\u4f8b","title":"\u6a21\u62df\u4eff\u771f"},{"location":"simulation/#_1","text":"Andrei Borshchev and Alexei Filippov: From System Dynamics and Discrete Event to Practical Agent Based Modeling: Reasons, Techniques, Tools. The 22nd International Conference of the System Dynamics Society, July 25 - 29, 2004, Oxford, England \u7531\u4e8e\u6a21\u62df\u4eff\u771f\u7684\u6982\u5ff5\u8fc7\u4e8e\u5e9e\u5927\uff0c\u7ecf\u5e38\u6709\u6982\u5ff5\u6df7\u6dc6\u548c\u4e0d\u7406\u89e3\u7684\u56f0\u6270\u3002 \u6700\u8fd1\u8bfb\u5230\u4e00\u7bc7\u8bba\u6587\uff0c\u5bf9\u6a21\u62df\u4eff\u771f\u8fd9\u4e2a\u5de8\u5927\u7684\u4e3b\u9898\u505a\u4e86\u5206\u7c7b\uff0c\u611f\u89c9\u633a\u6709\u5e2e\u52a9\u7684\u3002\u8bba\u6587\u662f\u5728anylogic\u7684\u7f51\u7ad9\u4e0a\u627e\u5230\u7684\uff1a From System Dynamics and Discrete Event to Practical Agent Based Modeling: Reasons, Techniques, Tools","title":"\u6a21\u62df\u4eff\u771f"},{"location":"simulation/#_2","text":"\u6839\u636e\u56feA\uff0c\u4eff\u771f\u5efa\u6a21\u7684\u8303\u5f0f\u548c\u7279\u70b9\u6709\uff1a","title":"\u4eff\u771f\u5efa\u6a21\u4e3b\u8981\u8303\u5f0f"},{"location":"simulation/#sd","text":"\u65e8\u5728\u6a21\u62df\u62bd\u8c61\u5ea6\u9ad8\u7684\u3001\u8fde\u7eed\u7684\u7cfb\u7edf \u76f4\u89c2\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u663e\u5f0f\u5730\u8868\u8fbe\u4e3aStock-and-Flow\u7684\u56fe\u8868 \u91cd\u8981\u7684\u4e00\u73af\u662fStock-and-Flow\u4e2d\u7684\u53cd\u9988\u73af\u8def\uff0c\u4f7f\u5f97\u7cfb\u7edf\u5177\u6709\u52a8\u6001\u6027","title":"\u7cfb\u7edf\u52a8\u6001\u5b66 (SD)"},{"location":"simulation/#de","text":"\u6a21\u62df\u5bf9\u8c61\u5c31\u662f\u79bb\u6563\u4e8b\u4ef6\uff0c\u62bd\u8c61\u5ea6\u5c45\u4e2d \u5177\u6709\u79bb\u6563\u4e8b\u4ef6\u7684\u5b9e\u4f53\u3001\u5b9e\u4f53\u6240\u5728\u7684\u73af\u5883\u3001\u6d41\u7a0b\u56fe/\u7f51\u7edc\u3001\u8d44\u6e90\u7b49 \u4e00\u822c\u90fd\u6709\u65f6\u949f p.s. \u67d0\u4e9b\u573a\u666f\u4e0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6709\u9650\u72b6\u6001\u673aFSM\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd","title":"\u79bb\u6563\u4e8b\u4ef6 (DE)"},{"location":"simulation/#ab","text":"\u6839\u636e\u4efb\u52a1\u76ee\u6807\u53ef\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u62bd\u8c61\u5ea6 \u6bcf\u4e2a\u667a\u80fd\u4f53agent\u662f\u72ec\u7acb\u7684\uff0c\u4e5f\u662f\u4e92\u76f8\u5173\u8054\u7684 \u884c\u4e3a\u89c4\u5219/\u5b66\u4e60\u76ee\u6807","title":"\u57fa\u4e8e\u667a\u80fd\u4f53 (AB)"},{"location":"simulation/#ds","text":"\u62bd\u8c61\u5c42\u7ea7\u4f4e\uff0c\u9488\u5bf9\u7684\u95ee\u9898\u57fa\u672c\u90fd\u662f\u8fde\u7eed\u7684 \u7cfb\u7edf\u7684\u7269\u7406\u72b6\u6001 \u7528\u5fae\u5206\u65b9\u7a0b\u63cf\u8ff0\u7684\u7cfb\u7edf Fig. A \u4eff\u771f\u5efa\u6a21\u4e2d\u7684\u4e3b\u8981\u8303\u5f0f","title":"\u52a8\u6001\u7cfb\u7edf (DS)"},{"location":"simulation/#_3","text":"\u5e94\u7528\u7684\u4f8b\u5b50\u5982\u56feB\uff0c\u6240\u6709\u7684\u5e94\u7528\u90fd\u53ef\u4ee5\u7406\u89e3\u4e3a\u4eff\u771f\uff0c\u4f46\u662f\u5176\u4eff\u771f\u5efa\u6a21\u4e4b\u95f4\u7684\u533a\u522b\u5f88\u5927\u3002 \u4f8b\u5982\u56fe\u5f62\u5b66\u4e2d\u7684CFD\u3001\u5de5\u7a0b\u4e2d\u7684FEM\uff0c\u5b83\u4eec\u6a21\u62df\u7684\u5bf9\u8c61\u662f\u8fde\u7eed\u4ecb\u8d28\u7684\u5fae\u89c2\u5c42\u9762\uff0c\u6709\u4f4d\u7f6e\u3001\u65f6\u95f4\u3001\u573a\u7684\u5f15\u5165\uff0c\u662f\u5173\u4e8e\u7269\u7406\u91cf\u672c\u8eab\u7684\u6a21\u62df\u4eff\u771f\u3002\u800c\u5de5\u5382\u548c\u751f\u4ea7\u7ebf\u7684OEE\u3001\u6d41\u7a0b\u548c\u6210\u672c\u7684\u5efa\u6a21\uff0c\u6d89\u53ca\u79bb\u6563\u4e8b\u4ef6/\u6d41\u7a0b\u7684\u5c5e\u6027\uff0c\u4ee5\u53ca\u901a\u8fc7\u6d41\u7a0b\u5173\u7cfb\u548c\u73af\u5883\u4ea4\u4e92\uff0c\u6700\u7ec8\u4eff\u771f\u51fa\u79bb\u6563\u7cfb\u7edf\u7684\u6548\u679c\u5448\u73b0\uff0c\u5c5e\u4e8e\u4e2d\u7b49\u76f4\u89c2\u5c42\u9762\u7684\u6a21\u62df\u4eff\u771f\u3002\u4f9b\u5e94\u94fe\u7684\u6a21\u62df\u4e5f\u4e00\u6837\u3002\u5e02\u573a\u7ade\u4e89\u548c\u4eba\u53e3\u52a8\u6001\u5b66\u63a5\u89e6\u8f83\u5c11\u3002 Fig. B \u6a21\u62df\u4eff\u771f\u7684\u4e00\u4e9b\u5e94\u7528\u4e3e\u4f8b","title":"\u6a21\u62df\u4eff\u771f\u5e94\u7528\u4f8b\u5b50"},{"location":"simulation/des/","text":"","title":"Index"},{"location":"simulation/fem/","text":"","title":"Index"},{"location":"simulation/fsm/","text":"","title":"Index"},{"location":"simulation/fsm/concept/","text":"\u6709\u9650\u72b6\u6001\u673a \u76ee\u6807 \u4e86\u89e3\u6709\u9650\u72b6\u6001\u673a\u7684\u57fa\u672c\u6982\u5ff5 FSM\u7528Python\u7684\u7b80\u5355\u5b9e\u73b0 \u57fa\u672c\u7406\u89e3 \u6709\u9650\u72b6\u6001\u673a\uff0c\u4e5f\u53eb \u72b6\u6001\u673a \u6216\u8005 \u6709\u9650\u81ea\u52a8\u673a \uff0c\u662f\u5305\u542b\u4e86\u4e00\u4e2a\u72b6\u6001\u96c6\u5408\uff08\u5305\u62ec\u521d\u59cb\u72b6\u6001\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u6700\u7ec8\u72b6\u6001\uff09\u3001\u4e00\u4e2a\u8f93\u5165\u4e8b\u4ef6\u96c6\u5408\u3001\u4e00\u4e2a\u8f93\u51fa\u4e8b\u4ef6\u96c6\u5408\u4ee5\u53ca\u72b6\u6001\u8f6c\u6362\u51fd\u6570\u7684\u7684\u62bd\u8c61\u673a\u5668\u3002 \u4e00\u4e2a\u8f6c\u6362\u51fd\u6570 \\(q^+ = F(q, u)\\) \u63a5\u53d7\u5f53\u524d\u72b6\u6001 \\(q\\) \u548c\u8f93\u5165\u4e8b\u4ef6 \\(u\\) \uff0c\u8fd4\u56de\u4e00\u4e2a\u8f93\u51fa\u4e8b\u4ef6\u7684\u65b0\u96c6\u5408\u548c\u4e0b\u4e00\u4e2a\u72b6\u6001 A \"Finite State Machine\" (abbreviated FSM), also called \"State Machine\" or \"Finite State Automaton\" is an abstract machine which consists of a set of states (including the initial state and one or more end states), a set of input events, a set of output events, and a state transition function. A transition function takes the current state and an input event as an input and returns the new set of output events and the next (new) state. Some of the states are used as \"terminal states\". The operation of an FSM begins with a special state, called the start state, proceeds through transitions depending on input to different states and normally ends in terminal or end states. A state which marks a successful flow of operation is known as an accept state. \u7406\u8bba\u548c\u8bb0\u53f7 \u4e00\u4e2a\u5177\u6709\u786e\u5b9a\u6027\u7684\u6709\u9650\u72b6\u6001\u673a\u57fa\u672c\u7684\u4e94\u5143\u7ec4\u4e3a \\((\\sum, S, s_0, \\delta, F)\\) \uff1a \\(\\sum\\) \u52a8\u4f5c\u96c6\u5408 \\(S\\) \u6709\u9650\u7684\u3001\u975e\u7a7a\u7684\u72b6\u6001\u96c6\u5408 \\(s_0\\) \u662f\u521d\u59cb\u72b6\u6001\uff0c \\(S\\) \u7684\u4e00\u4e2a\u72b6\u6001 \\(\\delta\\) \u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \\(\\delta:\\ S \\times \\sum \\rightarrow\\ S\\) \uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e8b\u4ef6\u89e6\u53d1\u6709\u9650\u96c6\u5408\u7684\u8f6c\u53d8 \\(F\\) \u662f\u96c6\u5408\u4e2d\u6700\u7ec8\u72b6\u6001\uff0c\u662f \\(S\\) \u7684\u4e00\u4e2a\u5b50\u96c6 Python\u6848\u4f8b1 \u51fd\u6570\u5f0f \u5b9a\u4e49StateMachine\uff0c\u6dfb\u52a0state\u3001state\u8f6c\u6362\u51fd\u6570\u3001\u8bbe\u7f6e\u521d\u59cb\u5316state\u7b49 \u624b\u52a8\u7f16\u5199state\u5bf9\u5e94\u7684\u8f6c\u6362\u51fd\u6570 \u5b9a\u4e49\u7cfb\u7edf\u8f93\u5165\u3001\u6d4b\u8bd5 class T : \"\"\" Generics type: action function \"\"\" pass class InitializationError ( Exception ): pass class StateMachine : def __init__ ( self ): self . handlers = {} self . startState = None self . endStates = [] def add_state ( self , name , handler : T , end_state = 0 ): name = name . upper () self . handlers [ name ] = handler if end_state : self . endStates . append ( name ) def set_start ( self , name ): self . startState = name . upper () def run ( self , cargo ): try : handler = self . handlers [ self . startState ] except : raise InitializationError ( \"must call the function .set-start() before run()\" ) if not self . endStates : raise InitializationError ( \"at least one state must be an end_state\" ) while True : ( newState , cargo ) = handler ( cargo ) if newState . upper () in self . endStates : print ( \"reached\" , newState ) break else : handler = self . handlers [ newState . upper ()] positive_adjectives = [ \"great\" , \"super\" , \"fun\" , \"entertaining\" , \"easy\" ] negative_adjectives = [ \"boring\" , \"difficult\" , \"ugly\" , \"bad\" ] def start_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word == \"Python\" : newState = \"Python_state\" else : newState = \"error_state\" return ( newState , txt ) def python_state_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word == \"is\" : newState = \"is_state\" else : newState = \"error_state\" return ( newState , txt ) def is_state_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word == \"not\" : newState = \"not_state\" elif word in positive_adjectives : newState = \"pos_state\" elif word in negative_adjectives : newState = \"neg_state\" else : newState = \"error_state\" return ( newState , txt ) def not_state_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word in positive_adjectives : newState = \"neg_state\" elif word in negative_adjectives : newState = \"pos_state\" else : newState = \"error_state\" return ( newState , txt ) def neg_state ( txt : str ): print ( \"Hallo\" ) return ( \"neg_state\" , \"\" ) m = StateMachine () m . add_state ( \"Start\" , start_transitions ) m . add_state ( \"Python_state\" , python_state_transitions ) m . add_state ( \"is_state\" , is_state_transitions ) m . add_state ( \"not_state\" , not_state_transitions ) m . add_state ( \"neg_state\" , None , end_state = 1 ) m . add_state ( \"pos_state\" , None , end_state = 1 ) m . add_state ( \"error_state\" , None , end_state = 1 ) m . set_start ( \"Start\" ) # results m . run ( \"Python is great\" ) # >> reached pos_state m . run ( \"Python is difficult\" ) # >> reached neg_state m . run ( \"Perl is ugly\" ) # >> reached error_state Python\u6848\u4f8b2 \u4f7f\u7528transition\u5e93 \u5b9a\u4e49state\u96c6\u5408{ \\(state_1,\\ state_2,\\ ...\\) } \u5b9a\u4e49\u4e09\u5143\u7ec4\uff0c\u5305\u542b\u5f53\u524dstate\uff0c\u4e0b\u4e00\u4e2astate\u548c\u8f6c\u6362\u51fd\u6570 { \\(state,\\ state^+,\\ transition function\\) } from transitions import Machine class Matter ( object ): pass model = Matter () # The states argument defines the name of states states = [ 'solid' , 'liquid' , 'gas' , 'plasma' ] # The trigger argument defines the name of the new triggering methods actions = [ { 'trigger' : 'melt' , 'source' : 'solid' , 'dest' : 'liquid' }, { 'trigger' : 'evaporate' , 'source' : 'liquid' , 'dest' : 'gas' }, { 'trigger' : 'sublimate' , 'source' : 'solid' , 'dest' : 'gas' }, { 'trigger' : 'ionize' , 'source' : 'gas' , 'dest' : 'plasma' }, ] machine = Machine ( model = model , states = states , transitions = actions , initial = 'solid' ) # Test print ( f 'initial state: { model . state } ' ) model . melt () print ( f 'action melt: -> { model . state } ' ) model . evaporate () print ( f 'action evaporate:-> { model . state } ' ) model . sublimate () print ( f 'action sublimate:-> { model . state } ' ) \u95ee\u9898 FSM\u548c\u534f\u7a0b Coroutine & FSM in Python \u5b66\u4e60\u53c2\u8003 8. Finite State Machine in Python","title":"\u6982\u5ff5"},{"location":"simulation/fsm/concept/#_1","text":"","title":"\u6709\u9650\u72b6\u6001\u673a"},{"location":"simulation/fsm/concept/#_2","text":"\u4e86\u89e3\u6709\u9650\u72b6\u6001\u673a\u7684\u57fa\u672c\u6982\u5ff5 FSM\u7528Python\u7684\u7b80\u5355\u5b9e\u73b0","title":"\u76ee\u6807"},{"location":"simulation/fsm/concept/#_3","text":"\u6709\u9650\u72b6\u6001\u673a\uff0c\u4e5f\u53eb \u72b6\u6001\u673a \u6216\u8005 \u6709\u9650\u81ea\u52a8\u673a \uff0c\u662f\u5305\u542b\u4e86\u4e00\u4e2a\u72b6\u6001\u96c6\u5408\uff08\u5305\u62ec\u521d\u59cb\u72b6\u6001\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u6700\u7ec8\u72b6\u6001\uff09\u3001\u4e00\u4e2a\u8f93\u5165\u4e8b\u4ef6\u96c6\u5408\u3001\u4e00\u4e2a\u8f93\u51fa\u4e8b\u4ef6\u96c6\u5408\u4ee5\u53ca\u72b6\u6001\u8f6c\u6362\u51fd\u6570\u7684\u7684\u62bd\u8c61\u673a\u5668\u3002 \u4e00\u4e2a\u8f6c\u6362\u51fd\u6570 \\(q^+ = F(q, u)\\) \u63a5\u53d7\u5f53\u524d\u72b6\u6001 \\(q\\) \u548c\u8f93\u5165\u4e8b\u4ef6 \\(u\\) \uff0c\u8fd4\u56de\u4e00\u4e2a\u8f93\u51fa\u4e8b\u4ef6\u7684\u65b0\u96c6\u5408\u548c\u4e0b\u4e00\u4e2a\u72b6\u6001 A \"Finite State Machine\" (abbreviated FSM), also called \"State Machine\" or \"Finite State Automaton\" is an abstract machine which consists of a set of states (including the initial state and one or more end states), a set of input events, a set of output events, and a state transition function. A transition function takes the current state and an input event as an input and returns the new set of output events and the next (new) state. Some of the states are used as \"terminal states\". The operation of an FSM begins with a special state, called the start state, proceeds through transitions depending on input to different states and normally ends in terminal or end states. A state which marks a successful flow of operation is known as an accept state.","title":"\u57fa\u672c\u7406\u89e3"},{"location":"simulation/fsm/concept/#_4","text":"\u4e00\u4e2a\u5177\u6709\u786e\u5b9a\u6027\u7684\u6709\u9650\u72b6\u6001\u673a\u57fa\u672c\u7684\u4e94\u5143\u7ec4\u4e3a \\((\\sum, S, s_0, \\delta, F)\\) \uff1a \\(\\sum\\) \u52a8\u4f5c\u96c6\u5408 \\(S\\) \u6709\u9650\u7684\u3001\u975e\u7a7a\u7684\u72b6\u6001\u96c6\u5408 \\(s_0\\) \u662f\u521d\u59cb\u72b6\u6001\uff0c \\(S\\) \u7684\u4e00\u4e2a\u72b6\u6001 \\(\\delta\\) \u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \\(\\delta:\\ S \\times \\sum \\rightarrow\\ S\\) \uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e8b\u4ef6\u89e6\u53d1\u6709\u9650\u96c6\u5408\u7684\u8f6c\u53d8 \\(F\\) \u662f\u96c6\u5408\u4e2d\u6700\u7ec8\u72b6\u6001\uff0c\u662f \\(S\\) \u7684\u4e00\u4e2a\u5b50\u96c6","title":"\u7406\u8bba\u548c\u8bb0\u53f7"},{"location":"simulation/fsm/concept/#python1","text":"\u51fd\u6570\u5f0f \u5b9a\u4e49StateMachine\uff0c\u6dfb\u52a0state\u3001state\u8f6c\u6362\u51fd\u6570\u3001\u8bbe\u7f6e\u521d\u59cb\u5316state\u7b49 \u624b\u52a8\u7f16\u5199state\u5bf9\u5e94\u7684\u8f6c\u6362\u51fd\u6570 \u5b9a\u4e49\u7cfb\u7edf\u8f93\u5165\u3001\u6d4b\u8bd5 class T : \"\"\" Generics type: action function \"\"\" pass class InitializationError ( Exception ): pass class StateMachine : def __init__ ( self ): self . handlers = {} self . startState = None self . endStates = [] def add_state ( self , name , handler : T , end_state = 0 ): name = name . upper () self . handlers [ name ] = handler if end_state : self . endStates . append ( name ) def set_start ( self , name ): self . startState = name . upper () def run ( self , cargo ): try : handler = self . handlers [ self . startState ] except : raise InitializationError ( \"must call the function .set-start() before run()\" ) if not self . endStates : raise InitializationError ( \"at least one state must be an end_state\" ) while True : ( newState , cargo ) = handler ( cargo ) if newState . upper () in self . endStates : print ( \"reached\" , newState ) break else : handler = self . handlers [ newState . upper ()] positive_adjectives = [ \"great\" , \"super\" , \"fun\" , \"entertaining\" , \"easy\" ] negative_adjectives = [ \"boring\" , \"difficult\" , \"ugly\" , \"bad\" ] def start_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word == \"Python\" : newState = \"Python_state\" else : newState = \"error_state\" return ( newState , txt ) def python_state_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word == \"is\" : newState = \"is_state\" else : newState = \"error_state\" return ( newState , txt ) def is_state_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word == \"not\" : newState = \"not_state\" elif word in positive_adjectives : newState = \"pos_state\" elif word in negative_adjectives : newState = \"neg_state\" else : newState = \"error_state\" return ( newState , txt ) def not_state_transitions ( txt : str ): splitted_txt = txt . split ( None , 1 ) word , txt = splitted_txt if len ( splitted_txt ) > 1 else ( txt , \"\" ) if word in positive_adjectives : newState = \"neg_state\" elif word in negative_adjectives : newState = \"pos_state\" else : newState = \"error_state\" return ( newState , txt ) def neg_state ( txt : str ): print ( \"Hallo\" ) return ( \"neg_state\" , \"\" ) m = StateMachine () m . add_state ( \"Start\" , start_transitions ) m . add_state ( \"Python_state\" , python_state_transitions ) m . add_state ( \"is_state\" , is_state_transitions ) m . add_state ( \"not_state\" , not_state_transitions ) m . add_state ( \"neg_state\" , None , end_state = 1 ) m . add_state ( \"pos_state\" , None , end_state = 1 ) m . add_state ( \"error_state\" , None , end_state = 1 ) m . set_start ( \"Start\" ) # results m . run ( \"Python is great\" ) # >> reached pos_state m . run ( \"Python is difficult\" ) # >> reached neg_state m . run ( \"Perl is ugly\" ) # >> reached error_state","title":"Python\u6848\u4f8b1"},{"location":"simulation/fsm/concept/#python2","text":"\u4f7f\u7528transition\u5e93 \u5b9a\u4e49state\u96c6\u5408{ \\(state_1,\\ state_2,\\ ...\\) } \u5b9a\u4e49\u4e09\u5143\u7ec4\uff0c\u5305\u542b\u5f53\u524dstate\uff0c\u4e0b\u4e00\u4e2astate\u548c\u8f6c\u6362\u51fd\u6570 { \\(state,\\ state^+,\\ transition function\\) } from transitions import Machine class Matter ( object ): pass model = Matter () # The states argument defines the name of states states = [ 'solid' , 'liquid' , 'gas' , 'plasma' ] # The trigger argument defines the name of the new triggering methods actions = [ { 'trigger' : 'melt' , 'source' : 'solid' , 'dest' : 'liquid' }, { 'trigger' : 'evaporate' , 'source' : 'liquid' , 'dest' : 'gas' }, { 'trigger' : 'sublimate' , 'source' : 'solid' , 'dest' : 'gas' }, { 'trigger' : 'ionize' , 'source' : 'gas' , 'dest' : 'plasma' }, ] machine = Machine ( model = model , states = states , transitions = actions , initial = 'solid' ) # Test print ( f 'initial state: { model . state } ' ) model . melt () print ( f 'action melt: -> { model . state } ' ) model . evaporate () print ( f 'action evaporate:-> { model . state } ' ) model . sublimate () print ( f 'action sublimate:-> { model . state } ' )","title":"Python\u6848\u4f8b2"},{"location":"simulation/fsm/concept/#_5","text":"FSM\u548c\u534f\u7a0b Coroutine & FSM in Python","title":"\u95ee\u9898"},{"location":"simulation/fsm/concept/#_6","text":"8. Finite State Machine in Python","title":"\u5b66\u4e60\u53c2\u8003"},{"location":"simulation/graphics/","text":"","title":"Index"},{"location":"simulation/graphics/lfem/","text":"\u7ebf\u6027\u6709\u9650\u5143 \u6ce8\u610f\uff1a\u8be5\u65b9\u6cd5\u5e76\u975e\u5de5\u7a0b\u4e2d\u7684FEM\u65b9\u6cd5 \u76ee\u6807 \u7406\u89e3\u56fe\u5f62\u5b66\u4e2d\u7ebf\u6027\u6709\u9650\u5143\u7684\u7406\u8bba\u90e8\u5206 1. \u65f6\u95f4\u79bb\u6563\u5316 \u7701\u7565... 2. \u7a7a\u95f4\u79bb\u6563\u5316 \u7a7a\u95f4\u79bb\u6563\u5316\u65b9\u6cd5\uff1a \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf \u7ebf\u6027\u6709\u9650\u5143 2.1 \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf \u662f\u4e00\u79cd\u65b9\u6cd5...(\u94fe\u63a5) 2.2 \u7ebf\u5f62\u6709\u9650\u5143 2.2.1 \u6982\u5ff5\u7b26\u53f7 \\(\\Phi - Deformation\\;Map - \u5f62\u53d8\u6620\u5c04\\) \\(F - Deformation\\;Gradient - \u5f62\u53d8\u68af\u5ea6\\) \\(\\varepsilon - Deformation\\;tensor - \u5f62\u53d8\u5f20\u91cf\\) \u200b 0\u4ee3\u8868\u6ca1\u6709\u4efb\u4f55\u5f62\u53d8\uff0c\u4e0d\u7b49\u4e8e0\u4ee3\u8868\u7531\u5f62\u53d8 \\(\\Psi(\\varepsilon(F)) - Energy\\;Density - \u80fd\u91cf\u5bc6\u5ea6\\) \u200b \u7528\u5f20\u91cf\u5b9a\u4e49\u7684\u80fd\u91cf\u5bc6\u5ea6\uff0c\u6709\u5f20\u91cf\u5c31\u6709\u80fd\u91cf\u5bc6\u5ea6\uff0c\u6ca1\u6709\u5f20\u91cf\u5c31\u6ca1\u6709\u80fd\u91cf\u5bc6\u5ea6 \u200b \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5f20\u91cf\u7684\u5e73\u65b9\uff0c\u6216\u8005\u662f\u4fdd\u4f53\u79ef\u7684\u9879 \\(E = \\int \\Psi - \u5bf9\u80fd\u91cf\u5bc6\u5ea6\u6c42\u79ef\u5206\\) \\(f = - \\frac{\\partial E}{\\partial x} - \u5bf9\u4f4d\u7f6e\u6c42\u5bfc\\) \\(P - Piola-Kirchhoff\\;stress\\;tensor - \u80fd\u91cf\u5bc6\u5ea6\\Psi\u5bf9\u5f62\u53d8\u68af\u5ea6F\u6c42\u5bfc\\) 2.2.2 \u5f62\u53d8\u6620\u5c04 \\(x = \\phi(X)\\) \u8fd9\u91cc \\(\\phi\\) \u6620\u5c04\u7684\u610f\u601d\u662f\u5c06 \u521d\u59cb\u4f4d\u7f6e \\(X\\) \u6620\u5c04\u6210\u4e3a \u5f53\u524d\u4f4d\u7f6e \\(x\\) \u5e73\u79fb\u6620\u5c04 $$ \\phi(X) = IX + t \\ \\ I = \\left[ \\begin{matrix} 1&0\\ 0&1 \\end{matrix} \\right] $$ \u65cb\u8f6c\u6620\u5c04 $$ \\phi(X) = RX \\ \\ R = \\left[ \\displaystyle\\begin{matrix} cos(\\theta)&-sin(\\theta)\\ sin(\\theta)&cos(\\theta) \\end{matrix} \\right] $$ \u62c9\u4f38\u6620\u5c04 $$ \\phi(X) = SX \\ \\ S = \\left[ \\begin{matrix} 2&0\\ 0&1 \\end{matrix} \\right] $$ \u5fae\u5143\u7684\u601d\u8def \u8bbe\u5fae\u5143\u7684\u4e2d\u5fc3\u4e3a \\(X^*\\) \uff0c\u5fae\u5143\u4e2d\u7684\u53e6\u5916\u4e00\u70b9\u4e3a \\(X\\) \u5bf9\u4e8e\u8fd9\u4e2a\u63a5\u8fd1 \\(X^*\\) \u7684\u70b9 \\(X\\) \uff0c\u5b83\u7684\u5f62\u53d8\u6620\u5c04\u662f\u4ec0\u4e48\u6837\u5b50\uff1f $$ \\phi(X) \\approx \\displaystyle\\frac{\\partial \\phi}{\\partial X}(X-X^ ) + \\phi(X^ ) = \\frac{\\partial \\phi}{\\partial X} + (\\phi(X^ ) - \\frac{\\partial \\phi}{\\partial X}X^ ) $$ \u5bf9 \\(X\\) \u8fdb\u884c\u6cf0\u52d2\u4e00\u4ecb\u5c55\u5f00\uff0c\u7136\u540e\u5316\u7b80\u6210\u548c \\(X\\) \u6709\u5173\u7684\u3001\u4ee5\u53ca\u548c \\(X^*\\) \u6709\u5173\u7684\u90e8\u5206\uff0c\u5219 $$ \\phi(X) \\approx FX + t \\ \\ F - Deformation\\;gradient - \u5f62\u53d8\u68af\u5ea6 $$ \u4e5f\u5c31\u662f\uff0c\u5728\u5f88\u5c0f\u5f88\u5c0f\u7684\u5fae\u5143\u8303\u56f4\u5185\uff0c\u5f62\u53d8\u6620\u5c04\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u4e00\u4e2a \u4eff\u5c04\u53d8\u6362 \u3002 \u5728\u4e0a\u9762\u7684\u6620\u5c04\u53d8\u6362\u4f8b\u5b50\u4e2d \u5e73\u79fb\u6620\u5c04 \u7684 \\(F\\) \u4e3a \\(I\\) \u5355\u4f4d\u77e9\u9635 \u65cb\u8f6c\u6620\u5c04 \u7684 \\(F\\) \u4e3a\u65cb\u8f6c\u77e9\u9635 \\(R\\) $$ F = \\displaystyle\\frac{\\partial \\phi}{\\partial X} = R = \\left[ \\begin{matrix} cos(\\theta)&-sin(\\theta)\\ sin(\\theta)&cos(\\theta) \\end{matrix} \\right] $$ \u62c9\u4f38\u6620\u5c04 \u7684 \\(F\\) \u4e3a\u62c9\u4f38\u77e9\u9635S $$ F = \\displaystyle\\frac{\\partial \\phi}{\\partial X} = S = \\left[ \\begin{matrix} 2&0\\ 0&1 \\end{matrix} \\right] $$ 2.2.3 \u80fd\u91cf\u5bc6\u5ea6 \u516c\u5f0f\u63a8\u5bfc \uff1a \u8fd9\u4e2a\u516c\u5f0f \\(\\Psi(x) = \\Psi(\\phi(X))\\) \u8868\u793a\u7684\u610f\u601d\u662f \\(x=\\phi(X)\\) \u8fd9\u4e2a\u70b9\u7684\u80fd\u91cf\u5bc6\u5ea6\u51fd\u6570 \u524d\u9762\u6839\u636e\u6cf0\u52d2\u4e00\u4ecb\u5c55\u5f00\u5f97\u5230\u7684\u8fd1\u4f3c\uff1a \\(\\phi(X) \\approx FX+t\\) \u4e8e\u662f\uff0c \\(\\Psi(x) \\approx \\Psi(FX+t)\\) \u7136\u540e\uff0c\u6709\u9650\u5143\u7684\u80fd\u91cf\u548c\u5e73\u52a8 \\(t\\) \u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u6240\u4ee5 \\(\\Psi(x) \\approx \\Psi(FX)\\) \u63a5\u7740\uff0c \\(X\\) \u662f\u4e00\u4e2a\u548c\u72b6\u6001\u65e0\u5173\u7684\u91cf\uff0c\u56e0\u4e3a\u5b9a\u4e49\u4e2d \\(x\\) \u4ee3\u8868\u5f53\u524d\u4f4d\u7f6e\uff0c \\(X\\) \u4ee3\u8868\u521d\u59cb\u4f4d\u7f6e\uff0c\u6240\u4ee5 \\(\\Psi(x) \\approx \\Psi(F)\\) \u6240\u4ee5\uff0c\u80fd\u91cf\u5bc6\u5ea6 \\(\\Psi(x)\\) \u53ef\u4ee5\u5b9a\u4e49\u6210\u53ea\u548c\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6709\u5173\u7684\u4e00\u4e2a\u516c\u5f0f \u80fd\u91cf\u5bc6\u5ea6\u5b9a\u4e49 \uff1a \u4f8b\u5982\uff1a \\(\\Psi(F) = \\displaystyle\\frac{1}{2}k||F-I||_F^2\\) \u8868\u793a\u7684\u662f\u4efb\u4f55\u975e\u5355\u4f4d\u77e9\u9635 \\(I\\) \u4f5c\u4e3a\u5f62\u53d8\u68af\u5ea6\uff0c\u90fd\u4f1a\u9020\u6210\u80fd\u91cf\u7684\u53d8\u5316\u3002\u770b\u4f3c\u5f88\u5408\u7406\uff0c\u4f46\u662f\uff0c\u65cb\u8f6c\u5f62\u53d8\u4e5f\u4f1a\u5f15\u8d77\u80fd\u91cf\u53d8\u5316\uff0c\u4e0d\u662f\u6240\u671f\u5f85\u7684\u3002 \u5728\u4f8b\u5982\uff1a \\(\\Psi(F) = \\displaystyle\\frac{1}{2}k||F||_F^2\\) \u8868\u793a\u662f\u65cb\u8f6c\u4e0d\u4f1a\u4ea7\u751f\u80fd\u91cf\uff0c\u4f46\u662f... \u600e\u4e48\u63cf\u8ff0\u4e5f\u4e0d\u591f\uff0c\u6240\u4ee5\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u91cf \\(\\varepsilon\\) \u6765\u63cf\u8ff0\u5f62\u53d8\uff0c\u5e94\u53d8\u5f20\u91cf \\(\\varepsilon\\) \u5e94\u53d8\u5f20\u91cf\u5b9a\u4e49\uff1a \\(\\varepsilon(F)\\) \u5e94\u53d8\u5f20\u91cf\u5b9a\u4e49\u9700\u8981\u662f\uff1a \\(\\varepsilon\\) \u63cf\u8ff0\u7684\u662f\u5f62\u53d8\u7684\u4e25\u91cd\u7a0b\u5ea6 \\(\\varepsilon(I)=0\\) \u8868\u793a\u521d\u59cb\u72b6\u6001\u4e0b\u7684\u5e94\u53d8\u9700\u8981\u4e3a0 \\(\\varepsilon(F)=\\varepsilon(RF)\\) \u8868\u793a\u65cb\u8f6c\u5f62\u53d8\u4e0d\u4ea7\u751f\u5e94\u53d8 \u6839\u636e\u8fd9\u4e2a\u5b9a\u4e49\uff0c\u53ef\u4ee5\u7528\u7ed9\u5e94\u53d8\u5f20\u91cf\u7684 \u672c\u6784\u6a21\u578b(constitutive model) \u6709\uff1a St. Venant-Kirchhoff\u6a21\u578b\uff1a \\(\\varepsilon(F)=\\frac{1}{2}(F^TF-I)\\) Co-rotated\u7ebf\u5f62\u6a21\u578b\uff1a \\(\\varepsilon(F)=S-I, where\\;F=RS\\) \u505a \u6781\u5206\u89e3(Polar Decomposition) \\(R\\) \u662f\u4e00\u4e2a\u65cb\u8f6c\u77e9\u9635 S\u662f\u4e00\u4e2a\u5bf9\u79f0\u77e9\u9635 \u7ed3\u8bba\uff0c\u80fd\u91cf\u5bc6\u5ea6\u53ef\u4ee5\u5b9a\u4e49\u6210\u5e94\u53d8 \\(\\varepsilon\\) \u7684\u5e73\u65b9 \\(\\Psi(\\varepsilon)=\\displaystyle\\frac{1}{2}k||\\varepsilon||_F^2\\) \uff0c\u6ca1\u6709\u5e94\u53d8=\u6ca1\u6709\u80fd\u91cf\uff1b\u6709\u5e94\u53d8=\u6709\u80fd\u91cf \\(\\Psi(\\varepsilon)=\\mu||\\varepsilon||_F^2 + \\displaystyle\\frac{\\lambda}{2}tr(\\varepsilon)^2\\) - \u9664\u4e86\u5e94\u53d8\u7684\u5e73\u65b9\u5916\uff08\u4fdd\u786c\u5ea6\u7684\uff09\uff0c\u8fd8\u52a0\u4e86\u5e94\u53d8trace\u7684\u5e73\u65b9\uff08\u4fdd\u4f53\u79ef\u7684\uff09 2.2.4 \u4ece\u80fd\u91cf\u5bc6\u5ea6\u5230\u80fd\u91cf \u80fd\u91cf\u7b49\u4e8e\u80fd\u91cf\u5bc6\u5ea6 \u5bf9\u6574\u4e2a\u7269\u4f53 \u6c42\u79ef\u5206 \\(E(x) = \\int_{\\Omega}\\Psi(F)dX\\) \uff0c\u4f46\u8fd9\u662f\u5bf9 \u8fde\u7eed\u7a7a\u95f4(Continuous Space) \u7684\uff0c\u9700\u8981\u7a7a\u95f4\u79bb\u6563\u5316\uff0c\u5373\u7ebf\u5f62\u6709\u9650\u5143Linear FEM \u7a7a\u95f4\u79bb\u6563\u5316 Spatial Discretation \u6709\u4e86\u6709\u9650\u5143\u79bb\u6563\u5316\u4ee5\u540e\uff0c\u5bf9\u8fde\u7eed\u7a7a\u95f4\u7684\u79ef\u5206\uff0c\u5219\u53ef\u4ee5\u53d8\u6210\u5bf9\u79bb\u6563\u7a7a\u95f4\u5404\u4e2aElement\u7684\u6c42\u3002\u518d\u5728\u6bcf\u4e2aElement\u7684\u5185\u90e8\u5bf9\u80fd\u91cf\u5bc6\u5ea6\u6c42\u79ef\u5206\uff1a \\(E(x) = \\sum_{e_i}\\int_{\\Omega_{e_i}}\\Psi(F_i(x))dX = \\sum_{e_i}w_i\\Psi(F_i(x))\\) \\(w_i = \\int_{\\Omega_{e_i}}dX\\) \u4e3a\u201c\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\uff0c\u5bf9\u81ea\u5df1\u6c42\u79ef\u5206\uff0c\u5373\u7b49\u4e8e\u8fd9\u4e2a\u7a7a\u95f4\uff08\u8fd9\u4e2aElement\uff09\u7684\u9762\u79ef\u3002\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff0c \\(w_i\\) \u5219\u8868\u793a\u4f53\u79ef\u3002 \u7c7b\u4f3c\u4e0e\u6c42\u8d28\u91cf\uff1a\u5982\u679c\u5bc6\u5ea6\u662f\u5747\u8d28\u7684\uff0c\u90a3\u4e48\u5bc6\u5ea6 x \u4f53\u79ef = \u8d28\u91cf\uff0c \u5982\u679c\u80fd\u91cf\u5bc6\u5ea6\u662f\u5747\u8d28\u7684\uff0c\u90a3\u4e48\u80fd\u91cf\u5bc6\u5ea6 x \u4f53\u79ef = \u80fd\u91cf\u3002 2.2.5 \u4e09\u7ef4\u7ebf\u5f62\u5143\u7684\u4f8b\u5b50 \u6c42\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6709\u4e24\u4e2a\u56db\u9762\u4f53\uff0c\u6bcf\u4e2a\u56db\u9762\u4f53\u6709\u56db\u4e2a\u70b9\uff0c\u4ece\u5de6\u8fb9\u7684\u72b6\u6001\u5f62\u53d8\u5230\u53f3\u8fb9\u7684\u72b6\u6001\uff0c\u6839\u636e\u7ebf\u5f62\u5143\u7684\u516c\u5f0f \\(\\phi(x)=FX+t\\) \uff0c\u5219\u6709\uff1a $$ x_1=FX_1+t\\qquad (1) \\ x_2=FX_2+t\\qquad (2) \\ x_3=FX_3+t\\qquad (3) \\ x_4=FX_4+t\\qquad (4) $$ \u4e3a\u4e86\u6c42\u5f62\u53d8\u68af\u5ea6 \\(F\\) \uff0c\u4f7f\u7528 \\((1), (2), (3)\\) \u5f0f\u51cf\u53bb \\((4)\\) \u5f0f\uff0c\u53ef\u4ee5\u6d88\u9664\u5e73\u52a8 \\(t\\) \uff0c\u7136\u540e\u5f97\u5230\uff1a $$ [x_1-x_4 \\quad x_2-x_4 \\quad x_3-x_4] = F[X_1-X_4 \\quad X_2-X_4 \\quad X_3-X_4] \\ \\ D_s\u548cD_m $$ \u4e8e\u662f\uff0c\u6c42\u5f97\u5f62\u53d8\u68af\u5ea6\u4e3a \\(F=D_sD_m^{-1}\\) \u90a3\u4e48\uff0c\u5f53 \\(D_m\\) \u4e0d\u4e3a0\u65f6\uff0c\u53ef\u4ee5\u6c42\u51fa\u4efb\u4f55\u4e8b\u540e\u7684\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6c42\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u7684\u76ee\u7684\uff0c\u662f\u6c42\u80fd\u91cf\uff0c\u8fdb\u800c\u6c42\u529b\u3002 \u6c42\u80fd\u91cf\u5bc6\u5ea6 \u80fd\u91cf\u5bf9\u4f4d\u7f6e\u7684\u5bfc\u6570\uff0c\u529b\uff1b \u80fd\u91cf\u5bc6\u5ea6\u5bf9\u4f4d\u7f6e\u7684\u5bfc\u6570\uff0c \u529b\u7684\u5bc6\u5ea6 \u6240\u4ee5\uff0c\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u6c42\u5bfc\uff1a $$ \\frac{\\partial \\Psi}{\\partial x}=\\frac{\\partial F}{\\partial x}:\\frac{\\partial \\Psi}{\\partial F} $$ \u5f62\u53d8\u68af\u5ea6\u5bf9\u4f4d\u7f6e\u7684\u5bfc\u6570\uff0c \\(\\frac{\\partial F}{\\partial x}\\) \uff0c\u57282D\u4e2d\uff0c\u662f\u4e00\u4e2a \\((2n\\times1)\\times(2\\times2)\\) \u7684\u5f20\u91cf\uff0c\u5176\u4e2d \\((2n\\times1)\\) \u662f\u4f4d\u7f6e\u7684\u5411\u91cf\uff08\u4e24\u4e2an\uff09 \u5f62\u53d8\u68af\u5ea6 \\(F\\) \u662f\u4e00\u4e2a \\((2\\times2)\\) \u7684\u77e9\u9635 \u7ed3\u679c\u662f\u4e00\u4e2a \\((2n\\times1)\\) \u7684\u5411\u91cf \u94fe\u5f0f\u6c42\u5bfc\u7684\u5de6\u8fb9\u4e00\u9879\u662f\uff1a \u5982\u679c\u4f4d\u7f6e \\(x\\) \u4ea7\u751f\u6270\u52a8\uff0c\u5c31\u4f1a\u5bf9\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u4ea7\u751f\u6270\u52a8\u3002\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\uff1f \u94fe\u5f0f\u6c42\u5bfc\u7684\u53f3\u8fb9\u4e00\u9879\u662f\uff1a\u5982\u679c\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6709\u4e00\u4e2a\u6270\u52a8\uff0c\u80fd\u91cf\u5bc6\u5ea6 \\(\\Psi\\) \u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\uff1f \u8fd9\u91cc\u770b\u7684\u662f\uff0c\u5728\u4f4d\u7f6e \\(x\\) \u4ea7\u751f\u975e\u5e38\u975e\u5e38\u5c0f\u7684\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u80fd\u91cf\u5bc6\u5ea6\u662f\u600e\u4e48\u53d8\u5316\u7684 \u4e0a\u9762\u7684\u516c\u5f0f\u4e2d\uff0c \\(\\displaystyle\\frac{\\partial \\Psi}{\\partial F}\\) \u5355\u72ec\u62ce\u51fa\u6765\uff0c\u53eb\u505a1st Piola-Kirchhoff stress tensor\uff0cPK1\u5e94\u529b\uff1f \u8fd9\u4e2aPK\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5728\u5f20\u91cf\u7a7a\u95f4\u7684\u529b\u662f\u4ec0\u4e48\u6837\u7684 \u95ee\u9898 \u5de5\u7a0b\u4e2d\u7684FEM\u533a\u522b\uff1f \u628a\u4ee3\u7801\u4e5f\u62ce\u8fdb\u6765 \u5b66\u4e60\u8d44\u6599 \u592a\u6781\u56fe\u5f62\u8bfeS1\u7b2c08\u8bb2\uff1a\u5f39\u6027\u7269\u4f53\u4eff\u771f 01 \u592a\u6781\u56fe\u5f62\u8bfeS1\u7b2c09\u8bb2\uff1a\u5f39\u6027\u7269\u4f53\u4eff\u771f 02","title":"\u7ebf\u6027\u6709\u9650\u5143"},{"location":"simulation/graphics/lfem/#_1","text":"\u6ce8\u610f\uff1a\u8be5\u65b9\u6cd5\u5e76\u975e\u5de5\u7a0b\u4e2d\u7684FEM\u65b9\u6cd5","title":"\u7ebf\u6027\u6709\u9650\u5143"},{"location":"simulation/graphics/lfem/#_2","text":"\u7406\u89e3\u56fe\u5f62\u5b66\u4e2d\u7ebf\u6027\u6709\u9650\u5143\u7684\u7406\u8bba\u90e8\u5206","title":"\u76ee\u6807"},{"location":"simulation/graphics/lfem/#1","text":"\u7701\u7565...","title":"1. \u65f6\u95f4\u79bb\u6563\u5316"},{"location":"simulation/graphics/lfem/#2","text":"\u7a7a\u95f4\u79bb\u6563\u5316\u65b9\u6cd5\uff1a \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf \u7ebf\u6027\u6709\u9650\u5143","title":"2. \u7a7a\u95f4\u79bb\u6563\u5316"},{"location":"simulation/graphics/lfem/#21","text":"\u662f\u4e00\u79cd\u65b9\u6cd5...(\u94fe\u63a5)","title":"2.1 \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf"},{"location":"simulation/graphics/lfem/#22","text":"","title":"2.2 \u7ebf\u5f62\u6709\u9650\u5143"},{"location":"simulation/graphics/lfem/#221","text":"\\(\\Phi - Deformation\\;Map - \u5f62\u53d8\u6620\u5c04\\) \\(F - Deformation\\;Gradient - \u5f62\u53d8\u68af\u5ea6\\) \\(\\varepsilon - Deformation\\;tensor - \u5f62\u53d8\u5f20\u91cf\\) \u200b 0\u4ee3\u8868\u6ca1\u6709\u4efb\u4f55\u5f62\u53d8\uff0c\u4e0d\u7b49\u4e8e0\u4ee3\u8868\u7531\u5f62\u53d8 \\(\\Psi(\\varepsilon(F)) - Energy\\;Density - \u80fd\u91cf\u5bc6\u5ea6\\) \u200b \u7528\u5f20\u91cf\u5b9a\u4e49\u7684\u80fd\u91cf\u5bc6\u5ea6\uff0c\u6709\u5f20\u91cf\u5c31\u6709\u80fd\u91cf\u5bc6\u5ea6\uff0c\u6ca1\u6709\u5f20\u91cf\u5c31\u6ca1\u6709\u80fd\u91cf\u5bc6\u5ea6 \u200b \u53ef\u4ee5\u8ba4\u4e3a\u662f\u5f20\u91cf\u7684\u5e73\u65b9\uff0c\u6216\u8005\u662f\u4fdd\u4f53\u79ef\u7684\u9879 \\(E = \\int \\Psi - \u5bf9\u80fd\u91cf\u5bc6\u5ea6\u6c42\u79ef\u5206\\) \\(f = - \\frac{\\partial E}{\\partial x} - \u5bf9\u4f4d\u7f6e\u6c42\u5bfc\\) \\(P - Piola-Kirchhoff\\;stress\\;tensor - \u80fd\u91cf\u5bc6\u5ea6\\Psi\u5bf9\u5f62\u53d8\u68af\u5ea6F\u6c42\u5bfc\\)","title":"2.2.1 \u6982\u5ff5\u7b26\u53f7"},{"location":"simulation/graphics/lfem/#222","text":"\\(x = \\phi(X)\\) \u8fd9\u91cc \\(\\phi\\) \u6620\u5c04\u7684\u610f\u601d\u662f\u5c06 \u521d\u59cb\u4f4d\u7f6e \\(X\\) \u6620\u5c04\u6210\u4e3a \u5f53\u524d\u4f4d\u7f6e \\(x\\) \u5e73\u79fb\u6620\u5c04 $$ \\phi(X) = IX + t \\ \\ I = \\left[ \\begin{matrix} 1&0\\ 0&1 \\end{matrix} \\right] $$ \u65cb\u8f6c\u6620\u5c04 $$ \\phi(X) = RX \\ \\ R = \\left[ \\displaystyle\\begin{matrix} cos(\\theta)&-sin(\\theta)\\ sin(\\theta)&cos(\\theta) \\end{matrix} \\right] $$ \u62c9\u4f38\u6620\u5c04 $$ \\phi(X) = SX \\ \\ S = \\left[ \\begin{matrix} 2&0\\ 0&1 \\end{matrix} \\right] $$ \u5fae\u5143\u7684\u601d\u8def \u8bbe\u5fae\u5143\u7684\u4e2d\u5fc3\u4e3a \\(X^*\\) \uff0c\u5fae\u5143\u4e2d\u7684\u53e6\u5916\u4e00\u70b9\u4e3a \\(X\\) \u5bf9\u4e8e\u8fd9\u4e2a\u63a5\u8fd1 \\(X^*\\) \u7684\u70b9 \\(X\\) \uff0c\u5b83\u7684\u5f62\u53d8\u6620\u5c04\u662f\u4ec0\u4e48\u6837\u5b50\uff1f $$ \\phi(X) \\approx \\displaystyle\\frac{\\partial \\phi}{\\partial X}(X-X^ ) + \\phi(X^ ) = \\frac{\\partial \\phi}{\\partial X} + (\\phi(X^ ) - \\frac{\\partial \\phi}{\\partial X}X^ ) $$ \u5bf9 \\(X\\) \u8fdb\u884c\u6cf0\u52d2\u4e00\u4ecb\u5c55\u5f00\uff0c\u7136\u540e\u5316\u7b80\u6210\u548c \\(X\\) \u6709\u5173\u7684\u3001\u4ee5\u53ca\u548c \\(X^*\\) \u6709\u5173\u7684\u90e8\u5206\uff0c\u5219 $$ \\phi(X) \\approx FX + t \\ \\ F - Deformation\\;gradient - \u5f62\u53d8\u68af\u5ea6 $$ \u4e5f\u5c31\u662f\uff0c\u5728\u5f88\u5c0f\u5f88\u5c0f\u7684\u5fae\u5143\u8303\u56f4\u5185\uff0c\u5f62\u53d8\u6620\u5c04\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\u4e00\u4e2a \u4eff\u5c04\u53d8\u6362 \u3002 \u5728\u4e0a\u9762\u7684\u6620\u5c04\u53d8\u6362\u4f8b\u5b50\u4e2d \u5e73\u79fb\u6620\u5c04 \u7684 \\(F\\) \u4e3a \\(I\\) \u5355\u4f4d\u77e9\u9635 \u65cb\u8f6c\u6620\u5c04 \u7684 \\(F\\) \u4e3a\u65cb\u8f6c\u77e9\u9635 \\(R\\) $$ F = \\displaystyle\\frac{\\partial \\phi}{\\partial X} = R = \\left[ \\begin{matrix} cos(\\theta)&-sin(\\theta)\\ sin(\\theta)&cos(\\theta) \\end{matrix} \\right] $$ \u62c9\u4f38\u6620\u5c04 \u7684 \\(F\\) \u4e3a\u62c9\u4f38\u77e9\u9635S $$ F = \\displaystyle\\frac{\\partial \\phi}{\\partial X} = S = \\left[ \\begin{matrix} 2&0\\ 0&1 \\end{matrix} \\right] $$","title":"2.2.2 \u5f62\u53d8\u6620\u5c04"},{"location":"simulation/graphics/lfem/#223","text":"\u516c\u5f0f\u63a8\u5bfc \uff1a \u8fd9\u4e2a\u516c\u5f0f \\(\\Psi(x) = \\Psi(\\phi(X))\\) \u8868\u793a\u7684\u610f\u601d\u662f \\(x=\\phi(X)\\) \u8fd9\u4e2a\u70b9\u7684\u80fd\u91cf\u5bc6\u5ea6\u51fd\u6570 \u524d\u9762\u6839\u636e\u6cf0\u52d2\u4e00\u4ecb\u5c55\u5f00\u5f97\u5230\u7684\u8fd1\u4f3c\uff1a \\(\\phi(X) \\approx FX+t\\) \u4e8e\u662f\uff0c \\(\\Psi(x) \\approx \\Psi(FX+t)\\) \u7136\u540e\uff0c\u6709\u9650\u5143\u7684\u80fd\u91cf\u548c\u5e73\u52a8 \\(t\\) \u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u6240\u4ee5 \\(\\Psi(x) \\approx \\Psi(FX)\\) \u63a5\u7740\uff0c \\(X\\) \u662f\u4e00\u4e2a\u548c\u72b6\u6001\u65e0\u5173\u7684\u91cf\uff0c\u56e0\u4e3a\u5b9a\u4e49\u4e2d \\(x\\) \u4ee3\u8868\u5f53\u524d\u4f4d\u7f6e\uff0c \\(X\\) \u4ee3\u8868\u521d\u59cb\u4f4d\u7f6e\uff0c\u6240\u4ee5 \\(\\Psi(x) \\approx \\Psi(F)\\) \u6240\u4ee5\uff0c\u80fd\u91cf\u5bc6\u5ea6 \\(\\Psi(x)\\) \u53ef\u4ee5\u5b9a\u4e49\u6210\u53ea\u548c\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6709\u5173\u7684\u4e00\u4e2a\u516c\u5f0f \u80fd\u91cf\u5bc6\u5ea6\u5b9a\u4e49 \uff1a \u4f8b\u5982\uff1a \\(\\Psi(F) = \\displaystyle\\frac{1}{2}k||F-I||_F^2\\) \u8868\u793a\u7684\u662f\u4efb\u4f55\u975e\u5355\u4f4d\u77e9\u9635 \\(I\\) \u4f5c\u4e3a\u5f62\u53d8\u68af\u5ea6\uff0c\u90fd\u4f1a\u9020\u6210\u80fd\u91cf\u7684\u53d8\u5316\u3002\u770b\u4f3c\u5f88\u5408\u7406\uff0c\u4f46\u662f\uff0c\u65cb\u8f6c\u5f62\u53d8\u4e5f\u4f1a\u5f15\u8d77\u80fd\u91cf\u53d8\u5316\uff0c\u4e0d\u662f\u6240\u671f\u5f85\u7684\u3002 \u5728\u4f8b\u5982\uff1a \\(\\Psi(F) = \\displaystyle\\frac{1}{2}k||F||_F^2\\) \u8868\u793a\u662f\u65cb\u8f6c\u4e0d\u4f1a\u4ea7\u751f\u80fd\u91cf\uff0c\u4f46\u662f... \u600e\u4e48\u63cf\u8ff0\u4e5f\u4e0d\u591f\uff0c\u6240\u4ee5\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u91cf \\(\\varepsilon\\) \u6765\u63cf\u8ff0\u5f62\u53d8\uff0c\u5e94\u53d8\u5f20\u91cf \\(\\varepsilon\\) \u5e94\u53d8\u5f20\u91cf\u5b9a\u4e49\uff1a \\(\\varepsilon(F)\\) \u5e94\u53d8\u5f20\u91cf\u5b9a\u4e49\u9700\u8981\u662f\uff1a \\(\\varepsilon\\) \u63cf\u8ff0\u7684\u662f\u5f62\u53d8\u7684\u4e25\u91cd\u7a0b\u5ea6 \\(\\varepsilon(I)=0\\) \u8868\u793a\u521d\u59cb\u72b6\u6001\u4e0b\u7684\u5e94\u53d8\u9700\u8981\u4e3a0 \\(\\varepsilon(F)=\\varepsilon(RF)\\) \u8868\u793a\u65cb\u8f6c\u5f62\u53d8\u4e0d\u4ea7\u751f\u5e94\u53d8 \u6839\u636e\u8fd9\u4e2a\u5b9a\u4e49\uff0c\u53ef\u4ee5\u7528\u7ed9\u5e94\u53d8\u5f20\u91cf\u7684 \u672c\u6784\u6a21\u578b(constitutive model) \u6709\uff1a St. Venant-Kirchhoff\u6a21\u578b\uff1a \\(\\varepsilon(F)=\\frac{1}{2}(F^TF-I)\\) Co-rotated\u7ebf\u5f62\u6a21\u578b\uff1a \\(\\varepsilon(F)=S-I, where\\;F=RS\\) \u505a \u6781\u5206\u89e3(Polar Decomposition) \\(R\\) \u662f\u4e00\u4e2a\u65cb\u8f6c\u77e9\u9635 S\u662f\u4e00\u4e2a\u5bf9\u79f0\u77e9\u9635 \u7ed3\u8bba\uff0c\u80fd\u91cf\u5bc6\u5ea6\u53ef\u4ee5\u5b9a\u4e49\u6210\u5e94\u53d8 \\(\\varepsilon\\) \u7684\u5e73\u65b9 \\(\\Psi(\\varepsilon)=\\displaystyle\\frac{1}{2}k||\\varepsilon||_F^2\\) \uff0c\u6ca1\u6709\u5e94\u53d8=\u6ca1\u6709\u80fd\u91cf\uff1b\u6709\u5e94\u53d8=\u6709\u80fd\u91cf \\(\\Psi(\\varepsilon)=\\mu||\\varepsilon||_F^2 + \\displaystyle\\frac{\\lambda}{2}tr(\\varepsilon)^2\\) - \u9664\u4e86\u5e94\u53d8\u7684\u5e73\u65b9\u5916\uff08\u4fdd\u786c\u5ea6\u7684\uff09\uff0c\u8fd8\u52a0\u4e86\u5e94\u53d8trace\u7684\u5e73\u65b9\uff08\u4fdd\u4f53\u79ef\u7684\uff09","title":"2.2.3 \u80fd\u91cf\u5bc6\u5ea6"},{"location":"simulation/graphics/lfem/#224","text":"\u80fd\u91cf\u7b49\u4e8e\u80fd\u91cf\u5bc6\u5ea6 \u5bf9\u6574\u4e2a\u7269\u4f53 \u6c42\u79ef\u5206 \\(E(x) = \\int_{\\Omega}\\Psi(F)dX\\) \uff0c\u4f46\u8fd9\u662f\u5bf9 \u8fde\u7eed\u7a7a\u95f4(Continuous Space) \u7684\uff0c\u9700\u8981\u7a7a\u95f4\u79bb\u6563\u5316\uff0c\u5373\u7ebf\u5f62\u6709\u9650\u5143Linear FEM \u7a7a\u95f4\u79bb\u6563\u5316 Spatial Discretation \u6709\u4e86\u6709\u9650\u5143\u79bb\u6563\u5316\u4ee5\u540e\uff0c\u5bf9\u8fde\u7eed\u7a7a\u95f4\u7684\u79ef\u5206\uff0c\u5219\u53ef\u4ee5\u53d8\u6210\u5bf9\u79bb\u6563\u7a7a\u95f4\u5404\u4e2aElement\u7684\u6c42\u3002\u518d\u5728\u6bcf\u4e2aElement\u7684\u5185\u90e8\u5bf9\u80fd\u91cf\u5bc6\u5ea6\u6c42\u79ef\u5206\uff1a \\(E(x) = \\sum_{e_i}\\int_{\\Omega_{e_i}}\\Psi(F_i(x))dX = \\sum_{e_i}w_i\\Psi(F_i(x))\\) \\(w_i = \\int_{\\Omega_{e_i}}dX\\) \u4e3a\u201c\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\uff0c\u5bf9\u81ea\u5df1\u6c42\u79ef\u5206\uff0c\u5373\u7b49\u4e8e\u8fd9\u4e2a\u7a7a\u95f4\uff08\u8fd9\u4e2aElement\uff09\u7684\u9762\u79ef\u3002\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff0c \\(w_i\\) \u5219\u8868\u793a\u4f53\u79ef\u3002 \u7c7b\u4f3c\u4e0e\u6c42\u8d28\u91cf\uff1a\u5982\u679c\u5bc6\u5ea6\u662f\u5747\u8d28\u7684\uff0c\u90a3\u4e48\u5bc6\u5ea6 x \u4f53\u79ef = \u8d28\u91cf\uff0c \u5982\u679c\u80fd\u91cf\u5bc6\u5ea6\u662f\u5747\u8d28\u7684\uff0c\u90a3\u4e48\u80fd\u91cf\u5bc6\u5ea6 x \u4f53\u79ef = \u80fd\u91cf\u3002","title":"2.2.4 \u4ece\u80fd\u91cf\u5bc6\u5ea6\u5230\u80fd\u91cf"},{"location":"simulation/graphics/lfem/#225","text":"\u6c42\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6709\u4e24\u4e2a\u56db\u9762\u4f53\uff0c\u6bcf\u4e2a\u56db\u9762\u4f53\u6709\u56db\u4e2a\u70b9\uff0c\u4ece\u5de6\u8fb9\u7684\u72b6\u6001\u5f62\u53d8\u5230\u53f3\u8fb9\u7684\u72b6\u6001\uff0c\u6839\u636e\u7ebf\u5f62\u5143\u7684\u516c\u5f0f \\(\\phi(x)=FX+t\\) \uff0c\u5219\u6709\uff1a $$ x_1=FX_1+t\\qquad (1) \\ x_2=FX_2+t\\qquad (2) \\ x_3=FX_3+t\\qquad (3) \\ x_4=FX_4+t\\qquad (4) $$ \u4e3a\u4e86\u6c42\u5f62\u53d8\u68af\u5ea6 \\(F\\) \uff0c\u4f7f\u7528 \\((1), (2), (3)\\) \u5f0f\u51cf\u53bb \\((4)\\) \u5f0f\uff0c\u53ef\u4ee5\u6d88\u9664\u5e73\u52a8 \\(t\\) \uff0c\u7136\u540e\u5f97\u5230\uff1a $$ [x_1-x_4 \\quad x_2-x_4 \\quad x_3-x_4] = F[X_1-X_4 \\quad X_2-X_4 \\quad X_3-X_4] \\ \\ D_s\u548cD_m $$ \u4e8e\u662f\uff0c\u6c42\u5f97\u5f62\u53d8\u68af\u5ea6\u4e3a \\(F=D_sD_m^{-1}\\) \u90a3\u4e48\uff0c\u5f53 \\(D_m\\) \u4e0d\u4e3a0\u65f6\uff0c\u53ef\u4ee5\u6c42\u51fa\u4efb\u4f55\u4e8b\u540e\u7684\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6c42\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u7684\u76ee\u7684\uff0c\u662f\u6c42\u80fd\u91cf\uff0c\u8fdb\u800c\u6c42\u529b\u3002 \u6c42\u80fd\u91cf\u5bc6\u5ea6 \u80fd\u91cf\u5bf9\u4f4d\u7f6e\u7684\u5bfc\u6570\uff0c\u529b\uff1b \u80fd\u91cf\u5bc6\u5ea6\u5bf9\u4f4d\u7f6e\u7684\u5bfc\u6570\uff0c \u529b\u7684\u5bc6\u5ea6 \u6240\u4ee5\uff0c\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u6c42\u5bfc\uff1a $$ \\frac{\\partial \\Psi}{\\partial x}=\\frac{\\partial F}{\\partial x}:\\frac{\\partial \\Psi}{\\partial F} $$ \u5f62\u53d8\u68af\u5ea6\u5bf9\u4f4d\u7f6e\u7684\u5bfc\u6570\uff0c \\(\\frac{\\partial F}{\\partial x}\\) \uff0c\u57282D\u4e2d\uff0c\u662f\u4e00\u4e2a \\((2n\\times1)\\times(2\\times2)\\) \u7684\u5f20\u91cf\uff0c\u5176\u4e2d \\((2n\\times1)\\) \u662f\u4f4d\u7f6e\u7684\u5411\u91cf\uff08\u4e24\u4e2an\uff09 \u5f62\u53d8\u68af\u5ea6 \\(F\\) \u662f\u4e00\u4e2a \\((2\\times2)\\) \u7684\u77e9\u9635 \u7ed3\u679c\u662f\u4e00\u4e2a \\((2n\\times1)\\) \u7684\u5411\u91cf \u94fe\u5f0f\u6c42\u5bfc\u7684\u5de6\u8fb9\u4e00\u9879\u662f\uff1a \u5982\u679c\u4f4d\u7f6e \\(x\\) \u4ea7\u751f\u6270\u52a8\uff0c\u5c31\u4f1a\u5bf9\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u4ea7\u751f\u6270\u52a8\u3002\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\uff1f \u94fe\u5f0f\u6c42\u5bfc\u7684\u53f3\u8fb9\u4e00\u9879\u662f\uff1a\u5982\u679c\u5f62\u53d8\u68af\u5ea6 \\(F\\) \u6709\u4e00\u4e2a\u6270\u52a8\uff0c\u80fd\u91cf\u5bc6\u5ea6 \\(\\Psi\\) \u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\uff1f \u8fd9\u91cc\u770b\u7684\u662f\uff0c\u5728\u4f4d\u7f6e \\(x\\) \u4ea7\u751f\u975e\u5e38\u975e\u5e38\u5c0f\u7684\u53d8\u52a8\u7684\u65f6\u5019\uff0c\u80fd\u91cf\u5bc6\u5ea6\u662f\u600e\u4e48\u53d8\u5316\u7684 \u4e0a\u9762\u7684\u516c\u5f0f\u4e2d\uff0c \\(\\displaystyle\\frac{\\partial \\Psi}{\\partial F}\\) \u5355\u72ec\u62ce\u51fa\u6765\uff0c\u53eb\u505a1st Piola-Kirchhoff stress tensor\uff0cPK1\u5e94\u529b\uff1f \u8fd9\u4e2aPK\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5728\u5f20\u91cf\u7a7a\u95f4\u7684\u529b\u662f\u4ec0\u4e48\u6837\u7684","title":"2.2.5 \u4e09\u7ef4\u7ebf\u5f62\u5143\u7684\u4f8b\u5b50"},{"location":"simulation/graphics/lfem/#_3","text":"\u5de5\u7a0b\u4e2d\u7684FEM\u533a\u522b\uff1f \u628a\u4ee3\u7801\u4e5f\u62ce\u8fdb\u6765","title":"\u95ee\u9898"},{"location":"simulation/graphics/lfem/#_4","text":"\u592a\u6781\u56fe\u5f62\u8bfeS1\u7b2c08\u8bb2\uff1a\u5f39\u6027\u7269\u4f53\u4eff\u771f 01 \u592a\u6781\u56fe\u5f62\u8bfeS1\u7b2c09\u8bb2\uff1a\u5f39\u6027\u7269\u4f53\u4eff\u771f 02","title":"\u5b66\u4e60\u8d44\u6599"},{"location":"simulation/graphics/mpm/","text":"\u7269\u8d28\u70b9\u6cd5MPM \u76ee\u6807 \u4e86\u89e3MPM\u76f8\u5173\u77e5\u8bc6\u70b9 \u89e3\u8bfbTaiji\u4e2d mpm88.py \u4ee3\u7801 1. \u6df7\u5408\u62c9\u683c\u6717\u65e5-\u6b27\u62c9\u65b9\u6cd5 1.1 \u65b9\u6cd5\u6982\u89c8 Particle advection schemes: Particle-in-Cell (PIC), Affine Particle-in-Cell (APIC), Polynomial PIC (PolyPIC) Fluid Implicit Particles (FLIP) Material Point Method (MPM), Moving Least Squares MPM (MLS-MPM) Constutive models in MPM Lagrangian forces in MPM Implicit MPM 1.2 \u65b9\u6cd5\u4e00\u822c\u6d41\u7a0b \u5728\u6df7\u5408\u62c9\u683c\u6717\u65e5-\u6b27\u62c9\u65b9\u6cd5\u4e2d\uff0c\u7c92\u5b50\u662f\u4e00\u7b49\u516c\u6c11\uff0c\u7f51\u683c\u662f\u7528\u6765\u505a\u8ba1\u7b97\u548c\u5b58\u50a8\u72b6\u6001\u7684\u3002 Particle-to-Grid transfer (P2G) Grid operations Pressure projection Boundary conditions Grid-to-Particle transfer (G2P) Particle operations Move particles Update material 1.3 \u6b27\u62c9\u7f51\u683cvs\u62c9\u683c\u6717\u65e5\u7c92\u5b50 \u6b27\u62c9\u7f51\u683c Eulerian Grids \u62c9\u683c\u6717\u65e5\u7c92\u5b50 Lagrangian Particles <+> Good at projection Good at advection <+> Easy to discrete Low dissipation <+> \u67e5\u627e\u90bb\u5c45\u5f88\u9ad8\u6548 Efficient neighbour look-up <+> Easy to precondition <-> Dissipative: loss of energy and geometry \u505a\u79bb\u6563\u5316\u5f88\u9ebb\u70e6 Tricky to discrete <-> \u67e5\u627e\u90bb\u8fd1\u7c92\u5b50\u7b97\u6cd5\u590d\u6742 Complex algorithm for neighbour look-up 2. PIC \u505aP2G\u65f6\uff0c\u7c92\u5b50\u5e76\u4e0d\u4f1a\u540c\u7b49\u5730\u5bf9\u5f85\u9644\u8fd1\u7684\u7f51\u683c\uff0c\u800c\u662f\u53d6\u51b3\u4e8e\u6743\u91cd\u3002\u4e00\u822c\u6743\u91cd\u7684\u505a\u6cd5\u5c31\u662f\u7528\u6838\u51fd\u6570\u3002 \u6838\u51fd\u6570\u7684\u4f8b\u5b50\uff1a B-Spline kernels Linear \u7ebf\u6027\u63d2\u503c Quadratic \u4e8c\u6b21\u63d2\u503c Cubic \u4e09\u6b21\u63d2\u503c P2G\u4ee3\u7801\u89e3\u91ca G2P\u4ee3\u7801\u89e3\u91ca P2G\u548cG2P\u53ea\u662f\u5728\u7c92\u5b50\u548c\u7f51\u683c\u95f4\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u7684\u64cd\u4f5c\uff0c\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u8fdb\u884c\u5b9e\u8d28\u4e0a\u5bf9\u7269\u7406\u91cf\u7684\u64cd\u4f5c\u3002\u5982\u679c\u5bf9\u7269\u7406\u91cf\u8fdb\u884c\u64cd\u4f5c\u7684\u8bdd\uff0c\u5176\u4e2d\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0cPIC\u548c\u57fa\u4e8e\u7f51\u683c\u7684\u67cf\u677e\u6c42\u89e3\u5668\uff0c\u53ef\u4ee5\u7ec4\u5408\u6210\u4e00\u4e2a\u6d41\u4f53\u6a21\u62df\u5668\u3002\u8fd9\u6837\u7684\u4e00\u4e2a\u6d41\u4f53\u6a21\u62df\u5668\u7684\u6b65\u9aa4\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a P2G: scatter velocity from particle to grid Normalize velocity Pressure projection (e.g. Multigrid solver) G2P: gather divergence-free velocity from grid to particle Move particles according to divergence-free velocity field RK2/3/4 if necessary PIC\u7684\u80fd\u91cf\u8017\u6563\u6bd4\u8f83\u4e25\u91cd\u3002\u539f\u56e0\u662f\uff0c\u5f53\u505aG2P\u7684\u65f6\u5019\uff0c\u5047\u5982\u662f\u4e2a3x3\u7684\u7f51\u683c\u7cfb\u7edf\u4e00\u51719\u4e2agrid\uff0c\u6bcf\u4e2agrid\u6709\u4e24\u4e2a\u81ea\u7531\u5ea6\uff0c\u5373x\u548cy\u65b9\u5411\uff0c\u90a3\u4e48G2P\u6570\u636e\u4f20\u8f93\u4e4b\u524d\u7b49\u4e8e\u4e00\u5171\u670918\u4e2a\u81ea\u7531\u5ea6\uff08\u5206\u91cf\uff09\u3002\u4f20\u8f93\u5230\u5355\u4e2a\u7c92\u5b50\u4e0a\uff0c\u6bcf\u4e2a\u7c92\u5b50\u53ea\u67092\u4e2a\u81ea\u7531\u5ea6\uff08\u5206\u91cf\uff09\uff0c\u5373x\u548cy\u65b9\u5411\u3002\u8fd9\u6837\u5c31\u9020\u6210\u4e86\u4fe1\u606f\u4e22\u5931\uff0c\u5373\u9020\u6210\u4e86\u80fd\u91cf\u8017\u6563\u3002\u6240\u4ee5\uff0c\u4eba\u4eec\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528PIC\u3002 \u5bf9\u4e8e\u80fd\u91cf\u8017\u6563\uff0c\u76ee\u524d\u7814\u7a76\u9886\u57df\u6709\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\uff1a \u4f20\u8f93\u66f4\u591a\u7684\u6570\u636e\uff1aAPIC, PolyPIC \u4f20\u8f93delta\uff1aFLIP \u4e0d\u628a\u6240\u6709\u7684\u4fe1\u606f\u90fd\u901a\u8fc7grid\u8fdb\u884c\u4f20\u8f93\uff0c\u53ea\u4f20\u8f93\u4e00\u4e2adelta \u5728\u7c92\u5b50\u4e0a\u4fdd\u7559\u4e00\u4e9b\u4fe1\u606f 3. APIC\u90e8\u5206\u4ee3\u7801\u89e3\u8bfb \u5bf9\u4e8e\u4e0b\u56fe\uff0cPIC\u65b9\u6cd5\u503c\u5305\u542b \\(v_0\\) \u548c \\(v_1\\) \u4e24\u4e2a\u5e38\u91cf\uff0c\u4f46\u662f\u901f\u5ea6\u8fd8\u6709\u5176\u4ed6\u6a21\u5f0f\u3002\u4f8b\u5982\uff1a \\(C_{00}\\) \uff1a\u63cf\u8ff0\u7684\u662f\u6269\u5f20\u3002\u6cbf\u7740 \\(x\\) \u8f74\u4e0a\u7684\u901f\u5ea6\u5e76\u4e0d\u662f\u4e00\u6837\u7684\uff0c\u968f\u7740 \\(x\\) \u7684\u589e\u52a0\uff0c \\(x\\) \u7684\u901f\u5ea6\u8d8a\u5927\uff0c\u4f1a\u62c9\u4f38\u8fd9\u4e2a\u6750\u6599 \\(C_{10}\\) \uff1a\u63cf\u8ff0\u7684\u662f\u526a\u5207\u3002\u6cbf\u7740 \\(y\\) \u8f74\u4e0a\u7684\u901f\u5ea6\u5e76\u4e0d\u662f\u4e00\u6837\u7684\uff0c\u968f\u7740 \\(x\\) \u7684\u589e\u52a0\uff0c \\(y\\) \u7684\u901f\u5ea6\u8d8a\u5927\uff0c\u4f1a\u526a\u5207\u8fd9\u4e2a\u6750\u6599 \\(C_{01}\\) \u548c \\(C_{11}\\) \u540c\u7406 APIC\u4e2d\u7684P2G\u548cG2P\u90fd\u662f\u89d2\u52a8\u91cf\u5b88\u6052\u7684 APIC\u7684\u6570\u5b66\u63a8\u5bfc\u5f88\u590d\u6742\uff0c\u4f46\u662f\u4ee3\u7801\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002 3.1 P2G\u7684\u64cd\u4f5c \u6709\u4e00\u4e2aaffine\u7684\u901f\u5ea6\u573a\uff0c\u5728\u4ece\u7c92\u5b50\u5230\u7f51\u683c\u7684\u901f\u5ea6\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u4e86\u7c92\u5b50\u7684\u901f\u5ea6 v[p] \u7684\u8f6c\u79fb\uff0c\u8fd8\u6709\u4e00\u4e2a affine @ dpos \u91cf\u7684\u8f6c\u79fb\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u77e9\u9635\u4e58\u6cd5\u3002\u6570\u5b66\u516c\u5f0f\u7684\u63a8\u5bfc\u7701\u7565\u3002 for p in x : base = ( x [ p ] * inv_dx - 0.5 ) . cast ( int ) fx = x [ p ] * inv_dx - base . cast ( float ) w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] affine = C [ p ] # \u8fd9\u91cc\u6709\u4e0d\u540c for i in ti . static ( range ( 3 )): for j in ti . static ( range ( 3 )): offset = ti . Vector ([ i , j ]) dpos = ( offset . cast ( float ) - fx ) * dx weight = w [ i ][ 0 ] * w [ j ][ 1 ] grid_v [ base + offset ] += weight * ( v [ p ] + affine @ dpos ) # \u8fd9\u91cc\u6709\u4e0d\u540c grid_m [ base + offset ] += weight 3.2 G2P\u7684\u64cd\u4f5c \u8ba1\u7b97\u4e00\u4e2a new_C \uff0c\u662f\u6bcf\u4e2a\u7f51\u683c\u5bf9C\u7684\u53e0\u52a0\uff0c\u7136\u540e\u66f4\u65b0 C[p] \u3002\u8fd9\u91cc\u8ba1\u7b97 new_C \u4f7f\u7528\u7684\u662f\u5916\u79ef\u3002\u6570\u5b66\u516c\u5f0f\u7684\u63a8\u5bfc\u7701\u7565\u3002 for p in x : # grid to particle (G2P) base = ( x [ p ] * inv_dx - 0.5 ) . cast ( int ) fx = x [ p ] * inv_dx - base . cast ( float ) w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1.0 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] new_v = ti . Vector . zero ( float , 2 ) # \u8fd9\u91cc\u6709\u4e0d\u540c new_C = ti . Matrix . zero ( float , 2 , 2 ) # \u8fd9\u91cc\u6709\u4e0d\u540c for i , j in ti . static ( ti . ndrange ( 3 , 3 )): # loop over 3x3 grid node neighborhood dpos = ti . Vector ([ i , j ]) . cast ( float ) - fx g_v = grid_v [ base + ti . Vector ([ i , j ])] weight = w [ i ][ 0 ] * w [ j ][ 1 ] new_v += weight * g_v # \u8fd9\u91cc\u6709\u4e0d\u540c new_C += 4 * inv_dx * weight * g_v . outer_product ( dpos ) # \u8fd9\u91cc\u6709\u4e0d\u540c v [ p ], C [ p ] = new_v , new_C # \u8fd9\u91cc\u6709\u4e0d\u540c x [ p ] += dt * v [ p ] # advection \u8fd9\u91cc\u6709\u4e0d\u540c 4. PolyPIC PolyPIC\u5219\u6bd4APIC\u591a\u51fa\u66f4\u591a\u7684\u901f\u5ea6\u6a21\u5f0f\uff0c\u670918\u79cd\u901f\u5ea6\u6a21\u5f0f\u3002\u5373\u6bcf\u4e2a\u7c92\u5b50\u67099\u4e2a\u7ed3\u70b9\u4e58\u4ee52\uff0c\u4e00\u517118\u4e2a\u81ea\u7531\u5ea6\u3002\u6bcf\u4e2a3x3\u7f51\u683c\u768418\u4e2a\u81ea\u7531\u5ea6\uff0c\u5bf9\u5e94\u6bcf\u4e2a\u7c92\u5b5018\u4e2a\u81ea\u7531\u5ea6\uff0c\u4f20\u8f93\u51e0\u4e4e\u6ca1\u6709\u635f\u5931 5. FLIP FLIP\u65b9\u6cd5\u7684\u601d\u8def\u662f\uff0c\u4e0d\u6536\u96c6\u7c92\u5b50\u4e0a\u7684\u7269\u7406\u91cf\uff0c\u800c\u662f\u53ea\u6536\u96c6\u7f51\u683c\u64cd\u4f5c\u524d/\u540e\u7684\u7269\u7406\u91cf\u7684\u589e\u91cf$delta\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u589e\u91cf\u5177\u4f53\u662f\u6307\u4ec0\u4e48\uff1a \u5728\u505a\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u6a21\u62df\u65f6\uff0c\u7f51\u683c\u64cd\u4f5c\u4e3a\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u4eff\u771f\u4e2d\u7684pressure projection \u5728\u505a\u56fa\u4f53\u6a21\u62df\u65f6\uff0c\u7f51\u683c\u64cd\u4f5c\u4e3a\u5185\u90e8\u529b\u7684\u8ba1\u7b97 -> MPM FLIP\u548cPIC\u5728advection\u4e0a\u7684\u533a\u522b\u4e3a\uff1a PIC: \u6bcf\u4e2a\u7c92\u5b50\u53bb\u6536\u96c6\u5468\u56f4\u7f51\u683c\u7ed3\u70b9\u4e0a \\(t+1\\) \u65f6\u523b\u7684\u901f\u5ea6\u6765\u66f4\u65b0 - \\(v_p^{t+1}=gather(v_i^{t+1})\\) FLIP: \u6bcf\u4e2a\u7c92\u5b50\u53bb\u6536\u96c6\u5468\u56f4\u7f51\u683c\u7ed3\u70b9 \\(t+1\\) \u65f6\u523b\u548c \\(t\\) \u65f6\u523b\u901f\u5ea6\u7684\u5dee\u503c\u6765\u66f4\u65b0 - \\(v_P^{t+1}=v_p^{t}+gather(v_i^{t+1}-v_i^t)\\) FLIP\u7684\u7f3a\u70b9\u548c\u4f7f\u7528 FLIP\u7684\u7f3a\u70b9\u662f\uff0cnoise\u592a\u591a\u3002 \u6709\u4e00\u4e2a\u4e2d\u548c\u7684\u529e\u6cd5\u662fFLIP0.99\uff0c\u5373\u628a0.99\u4e2aFLIP\u7684\u7ed3\u679c\u52a0\u4e0a0.01\u4e2aPIC\u7684\u7ed3\u679c\u4f5c\u4e3adamping\u3002\u5f88\u591a\u65f6\u5019FLIP\u6548\u679c\u8fd8\u6ca1\u6709APIC\u597d\uff0c\u6240\u4ee5\uff0c\u4e00\u822c\u90fd\u4f1a\u628aFLIP\u548cPIC\u4e00\u8d77\u52a0\u6743\u7528\uff0c\u6216\u8005\u76f4\u63a5\u7528APIC\uff08\u65b0\u624b\uff09\u3002 6. MPM MPM\u65b9\u6cd5\u662f\u4e00\u4e2astand-alone\u7684\u6a21\u5f0f\uff0c\u548c\u524d\u9762\u4ecb\u7ecd\u7684\u6a21\u5f0f\u90fd\u4e0d\u4e00\u6837\u3002\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u90fd\u662f\u5173\u4e8eadvection\u7684\u6a21\u5f0f\uff0c\u57fa\u672c\u4e0a\u53ea\u643a\u5e26\u7c92\u5b50\u7684\u901f\u5ea6\u4fe1\u606f\uff0c\u5728projection\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u90fd\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684multigrid solver\u6765\u6c42\u89e3\uff0c\u4f46\u662fMPM\u4e0d\u53ea\u662f\u4e00\u4e2aadvection\u3002MPM\u7b49\u4e8e\u8bf4\u662f\u4e00\u6574\u4f7f\u7528\u5957\u6df7\u5408\u62c9\u683c\u6717\u65e5-\u6b27\u62c9\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u4eff\u771f\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u4e86advection\uff0c\u4e5f\u5305\u62ec\u4e86projection\u3002\u5982\u6b64\u4e00\u6765\uff0c\u7c92\u5b50\u5c31\u9700\u8981\u643a\u5e26\u901f\u5ea6\u4e4b\u5916\u7684\u66f4\u591a\u4fe1\u606f\u4e86\u3002\u6bd4\u5982\u8fd8\u9700\u8981\u50a8\u5b58\u5f62\u53d8\u68af\u5ea6\u3001\u4f53\u79ef\u4ee5\u53ca\u5176\u4ed6\u7279\u5b9a\u6a21\u62df\u4e2d\u9700\u8981\u7528\u5230\u7684\u7269\u7406\u91cf\u3002 MPM\u65b9\u6cd5\u57282018\u5e74\u7684\u60c5\u51b5\u5982\u56fe\u6240\u793a\uff1a \u5728\u7c92\u5b50\u8fd9\u8fb9\u53ef\u4ee5\u7814\u7a76\u672c\u6784\u6a21\u578b/\u6750\u6599\u6a21\u578b\uff0c\u4f8b\u5982 \u96ea\u7684\u6750\u6599\u6a21\u578b \u6ce1\u6cab\u7684\u6750\u6599\u6a21\u578b \u6c99\u5b50\u7684\u6750\u6599\u6a21\u578b \u5728\u7f51\u683c\u8fd9\u8fb9\u53ef\u4ee5\u7814\u7a76\u7f51\u683c\u7684\u65b9\u6cd5 \u5728P2G\u548cG2P\u4e0a\u4e5f\u6709\u8bb8\u591a\u7814\u7a76\uff0c\u4f8b\u5982\u524d\u9762\u63d0\u5230\u7684APIC\u7b49\uff0c\u6b64\u5916\u8fd8\u6709 MLS-MPM Compatible PIC\uff1a\u7528\u6765\u5904\u7406\u6750\u6599\u5207\u5272\uff0c\u4ee5\u53caMPM\u548c\u521a\u4f53\u7684\u8026\u5408 6.1 MPM\u7684\u4f18\u52bf \u81ea\u52a8\u8026\u5408\u4e0d\u540c\u7684\u6750\u6599\uff0c\u4f8b\u5982\u6db2\u4f53\u3001\u56fa\u4f53\u3001\u9897\u7c92\u72b6\u7269\u8d28\u7b49 \u81ea\u52a8\u5904\u7406\u78b0\u649e/\u81ea\u78b0\u649e \u81ea\u52a8\u5904\u7406\u65ad\u88c2 fracture\uff0c\u4f46\u662f\u4e0d\u51c6\u786e\uff0c\u89c6\u89c9\u8db3\u591f \u80fd\u591f\u5904\u7406\u5927\u578b\u53d8 7. MLS-MPM\u4ee3\u7801\u89e3\u8bfb MLS-MPM\u662f\u57fa\u4e8eAPIC\uff0c\u7279\u70b9\u662f\u901f\u5ea6\u5feb\uff0c\u56e0\u4e3a\u964d\u4f4e\u4e86\u4e00\u534a\u7684FLOPS\u6d6e\u70b9\u6570\u8fd0\u7b97\u3002 \u5927\u7684\u4e09\u6b65\u8fd8\u662f\u548c\u4e4b\u524d\u4e00\u6837\uff0cP2G\u3001Grid operation\u3001G2P\uff0c\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f\uff0c\u5728P2G\u7684\u65f6\u5019\uff0c\u9700\u8981\u8ba1\u7b97\u67ef\u897f\u5e94\u529b\u4ee5\u53ca\u7c92\u5b50\u5bf9\u6bcf\u4e2a\u7f51\u683c\u7ed3\u70b9\u7684\u8d21\u732e\u3002 7.1. \u53c2\u6570\u8bbe\u7f6e\u90e8\u5206 import taichi as ti import time ti . init ( arch = ti . gpu ) n_particles = 8192 n_grid = 128 dx = 1 / n_grid dt = 2e-4 p_rho = 1 # \u7c92\u5b50\u5bc6\u5ea6 p_vol = ( dx * 0.5 ) ** 2 # \u7c92\u5b50\u4f53\u79ef p_mass = p_vol * p_rho # \u7c92\u5b50\u8d28\u91cf gravity = 9.8 bound = 3 E = 400 # stiffness\u521a\u5ea6\uff0c\u5728\u6db2\u4f53\u91cc\u662fbulk modulus \u4f53\u79ef\u6a21\u91cf x = ti . Vector . field ( 2 , float , n_particles ) v = ti . Vector . field ( 2 , float , n_particles ) C = ti . Matrix . field ( 2 , 2 , float , n_particles ) J = ti . field ( float , n_particles ) grid_v = ti . Vector . field ( 2 , float , ( n_grid , n_grid )) grid_m = ti . field ( float , ( n_grid , n_grid )) 7.2 \u66f4\u65b0\u90e8\u5206P2G \u548cAPIC\u7684\u533a\u522b\u5728\u4e8e\uff1a stress\uff1a\u6db2\u4f53\u88ab\u538b\u7f29\u4f1a\u4ea7\u751f\u4e00\u4e2a\u62b5\u6297\u538b\u7f29\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u67ef\u897f\u5e94\u529b\u4f53\u73b0\u51fa\u6765\uff0c\u4ece\u800c\u8868\u73b0\u4e3a\u7c92\u5b50\u548c\u7c92\u5b50\u4e4b\u95f4\u4e92\u76f8\u63a8\u5f00\u3002\u4f46\u662f\u8fd9\u4e2a\u63a8\u5f00\u7684\u8fc7\u7a0b\u5e76\u4e0d\u53d1\u751f\u5728\u7c92\u5b50\u4e4b\u95f4\uff0c\u800c\u662f\u901a\u8fc7\u7f51\u683c\u6765\u63a8\u5f00\u3002 affine\uff1a\u628aC\u548cstress\u53e0\u52a0\u5728\u4e00\u8d77\uff0c\u7edf\u4e00\u901a\u8fc7affine\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u8282\u7701\u4e86\u8ba1\u7b97\u91cf\u3002 @ti . kernel def substep (): for i , j in grid_m : grid_v [ i , j ] = [ 0 , 0 ] grid_m [ i , j ] = 0 for p in x : Xp = x [ p ] / dx base = int ( Xp - 0.5 ) fx = Xp - base w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] # B-Spline kernel function stress = - dt * 4 * E * p_vol * ( J [ p ] - 1 ) / dx ** 2 affine = ti . Matrix ([[ stress , 0 ], [ 0 , stress ]]) + p_mass * C [ p ] for i , j in ti . static ( ti . ndrange ( 3 , 3 )): offset = ti . Vector ([ i , j ]) dpos = ( offset - fx ) * dx weight = w [ i ] . x * w [ j ] . y grid_v [ base + offset ] += weight * ( p_mass * v [ p ] + affine @ dpos ) grid_m [ base + offset ] += weight * p_mass 7.3 \u8fb9\u754c\u6761\u4ef6 \u8fd9\u91cc\u53ea\u8bbe\u7f6e\u4e86\u56db\u5468\u7684\u8fb9\u754c\u6761\u4ef6\uff0c\u81ea\u78b0\u649e\u5982\u4f55\u5904\u7406\uff1f for i , j in grid_m : if grid_m [ i , j ] > 0 : grid_v [ i , j ] /= grid_m [ i , j ] grid_v [ i , j ] . y -= dt * gravity if i < bound and grid_v [ i , j ] . x < 0 : grid_v [ i , j ] . x = 0 if i > n_grid - bound and grid_v [ i , j ] . x > 0 : grid_v [ i , j ] . x = 0 if j < bound and grid_v [ i , j ] . y < 0 : grid_v [ i , j ] . y = 0 if j > n_grid - bound and grid_v [ i , j ] . y > 0 : grid_v [ i , j ] . y = 0 7.4 \u66f4\u65b0\u90e8\u5206G2P \u4e0eAPIC\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f J[p] \u7684\u66f4\u65b0\u3002 J \u5728\u8fd9\u91cc\u662f\u6307\u7c92\u5b50\u7684\u4f53\u79ef\uff0c\u901a\u8fc7\u52a0\u5165\u4e86C\u7684trace\u3002\u56de\u987eAPIC\u91cc\u5173\u4e8eC\u7684\u90e8\u5206\uff08 \\(C_{00}, C_{01}...\\) \uff09\uff0c\u5176\u4e2d\u5173\u4e8e\u6269\u6563\u7684x\u65b9\u5411\u7684\u62c9\u4f38 \\(C_{00}\\) \u548cy\u65b9\u5411\u7684\u62c9\u4f38 \\(C_{11}\\) \u662f\u552f\u4e00\u4f1a\u5f71\u54cd\u7c92\u5b50\u4f53\u79ef\u7684\u5206\u91cf\uff0c\u800c\u526a\u5207\u5206\u91cf \\(C_{01}\\) \u548c \\(C_{10}\\) \u5219\u5bf9\u4f53\u79ef\u53d8\u5316\u6ca1\u6709\u5f71\u54cd\u3002\u90a3\u4e48\u4ee3\u7801\u4e2d\u7684 1 + dt * new_C.trace() \u5c31\u662f\u4f53\u79ef\u7684\u53d8\u5316\u7387\uff0c\u81ea\u4e58\u5219\u5f97\u5230\u53d8\u5316\u540e\u7684\u4f53\u79ef\u3002\u6ce8\u610f\uff0c\u6d41\u4f53\u91cc\u7684\u529b\uff0c\u5b8c\u5168\u5c31\u662f\u7531 \\(J\\) \u6765\u8fdb\u884c\u63a7\u5236\u7684\u3002 for p in x : Xp = x [ p ] / dx base = int ( Xp - 0.5 ) fx = Xp - base w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] new_v = ti . Vector . zero ( float , 2 ) new_C = ti . Matrix . zero ( float , 2 , 2 ) for i , j in ti . static ( ti . ndrange ( 3 , 3 )): offset = ti . Vector ([ i , j ]) dpos = ( offset - fx ) * dx weight = w [ i ] . x * w [ j ] . y g_v = grid_v [ base + offset ] new_v += weight * g_v new_C += 4 * weight * g_v . outer_product ( dpos ) / dx ** 2 v [ p ] = new_v x [ p ] += dt * v [ p ] J [ p ] *= 1 + dt * new_C . trace () C [ p ] = new_C 7.5 \u4e3b\u7a0b\u5e8f\u90e8\u5206 \u521d\u59cb\u5316\u7c92\u5b50\uff0c\u6ce8\u610f\u5728\u6bcf\u4e00\u4e2asubstep\u8fd0\u884c\u4e4b\u524d\uff0c\u9700\u8981\u628a grid_v \u548c grid-m \u8bbe\u7f6e\u4e3a0\uff08mpm88\u4e2d\u6ca1\u6709\u8fd9\u4e24\u9879\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\uff1f\uff09 @ti . kernel def init (): for i in range ( n_particles ): x [ i ] = [ ti . random () * 0.4 + 0.2 , ti . random () * 0.4 + 0.2 ] v [ i ] = [ 0 , - 1 ] J [ i ] = 1 init () # gui = ti.GUI('MPM88',(1920, 1080), fullscreen=True) gui = ti . GUI ( 'MPM88' ) while gui . running and not gui . get_event ( gui . ESCAPE ): for s in range ( 50 ): grid_v . fill ([ 0 , 0 ]) # \u6ce8\u610f grid_m . fill ( 0 ) # \u6ce8\u610f substep () gui . clear ( 0x112F41 ) gui . circles ( x . to_numpy (), radius = 3 , color = 0x068587 ) gui . show () \u95ee\u9898 \u6d41\u56fa\u8026\u5408\uff08\u8c03\u53c2\uff1f\uff09 GIF\u6548\u679c \u53c2\u8003\u6765\u6e90 Lecture 7 \u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09\uff1a GAMES201\uff1a\u9ad8\u7ea7\u7269\u7406\u5f15\u64ce\u5b9e\u6218\u6307\u53572020 Lecture 7 \u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09\uff1a GAMES201\uff1a\u9ad8\u7ea7\u7269\u7406\u5f15\u64ce\u5b9e\u6218\u6307\u53572020","title":"\u7269\u8d28\u70b9\u6cd5"},{"location":"simulation/graphics/mpm/#mpm","text":"","title":"\u7269\u8d28\u70b9\u6cd5MPM"},{"location":"simulation/graphics/mpm/#_1","text":"\u4e86\u89e3MPM\u76f8\u5173\u77e5\u8bc6\u70b9 \u89e3\u8bfbTaiji\u4e2d mpm88.py \u4ee3\u7801","title":"\u76ee\u6807"},{"location":"simulation/graphics/mpm/#1-","text":"","title":"1. \u6df7\u5408\u62c9\u683c\u6717\u65e5-\u6b27\u62c9\u65b9\u6cd5"},{"location":"simulation/graphics/mpm/#11","text":"Particle advection schemes: Particle-in-Cell (PIC), Affine Particle-in-Cell (APIC), Polynomial PIC (PolyPIC) Fluid Implicit Particles (FLIP) Material Point Method (MPM), Moving Least Squares MPM (MLS-MPM) Constutive models in MPM Lagrangian forces in MPM Implicit MPM","title":"1.1 \u65b9\u6cd5\u6982\u89c8"},{"location":"simulation/graphics/mpm/#12","text":"\u5728\u6df7\u5408\u62c9\u683c\u6717\u65e5-\u6b27\u62c9\u65b9\u6cd5\u4e2d\uff0c\u7c92\u5b50\u662f\u4e00\u7b49\u516c\u6c11\uff0c\u7f51\u683c\u662f\u7528\u6765\u505a\u8ba1\u7b97\u548c\u5b58\u50a8\u72b6\u6001\u7684\u3002 Particle-to-Grid transfer (P2G) Grid operations Pressure projection Boundary conditions Grid-to-Particle transfer (G2P) Particle operations Move particles Update material","title":"1.2 \u65b9\u6cd5\u4e00\u822c\u6d41\u7a0b"},{"location":"simulation/graphics/mpm/#13-vs","text":"\u6b27\u62c9\u7f51\u683c Eulerian Grids \u62c9\u683c\u6717\u65e5\u7c92\u5b50 Lagrangian Particles <+> Good at projection Good at advection <+> Easy to discrete Low dissipation <+> \u67e5\u627e\u90bb\u5c45\u5f88\u9ad8\u6548 Efficient neighbour look-up <+> Easy to precondition <-> Dissipative: loss of energy and geometry \u505a\u79bb\u6563\u5316\u5f88\u9ebb\u70e6 Tricky to discrete <-> \u67e5\u627e\u90bb\u8fd1\u7c92\u5b50\u7b97\u6cd5\u590d\u6742 Complex algorithm for neighbour look-up","title":"1.3 \u6b27\u62c9\u7f51\u683cvs\u62c9\u683c\u6717\u65e5\u7c92\u5b50"},{"location":"simulation/graphics/mpm/#2-pic","text":"\u505aP2G\u65f6\uff0c\u7c92\u5b50\u5e76\u4e0d\u4f1a\u540c\u7b49\u5730\u5bf9\u5f85\u9644\u8fd1\u7684\u7f51\u683c\uff0c\u800c\u662f\u53d6\u51b3\u4e8e\u6743\u91cd\u3002\u4e00\u822c\u6743\u91cd\u7684\u505a\u6cd5\u5c31\u662f\u7528\u6838\u51fd\u6570\u3002 \u6838\u51fd\u6570\u7684\u4f8b\u5b50\uff1a B-Spline kernels Linear \u7ebf\u6027\u63d2\u503c Quadratic \u4e8c\u6b21\u63d2\u503c Cubic \u4e09\u6b21\u63d2\u503c P2G\u4ee3\u7801\u89e3\u91ca G2P\u4ee3\u7801\u89e3\u91ca P2G\u548cG2P\u53ea\u662f\u5728\u7c92\u5b50\u548c\u7f51\u683c\u95f4\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u7684\u64cd\u4f5c\uff0c\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u8fdb\u884c\u5b9e\u8d28\u4e0a\u5bf9\u7269\u7406\u91cf\u7684\u64cd\u4f5c\u3002\u5982\u679c\u5bf9\u7269\u7406\u91cf\u8fdb\u884c\u64cd\u4f5c\u7684\u8bdd\uff0c\u5176\u4e2d\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0cPIC\u548c\u57fa\u4e8e\u7f51\u683c\u7684\u67cf\u677e\u6c42\u89e3\u5668\uff0c\u53ef\u4ee5\u7ec4\u5408\u6210\u4e00\u4e2a\u6d41\u4f53\u6a21\u62df\u5668\u3002\u8fd9\u6837\u7684\u4e00\u4e2a\u6d41\u4f53\u6a21\u62df\u5668\u7684\u6b65\u9aa4\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a P2G: scatter velocity from particle to grid Normalize velocity Pressure projection (e.g. Multigrid solver) G2P: gather divergence-free velocity from grid to particle Move particles according to divergence-free velocity field RK2/3/4 if necessary PIC\u7684\u80fd\u91cf\u8017\u6563\u6bd4\u8f83\u4e25\u91cd\u3002\u539f\u56e0\u662f\uff0c\u5f53\u505aG2P\u7684\u65f6\u5019\uff0c\u5047\u5982\u662f\u4e2a3x3\u7684\u7f51\u683c\u7cfb\u7edf\u4e00\u51719\u4e2agrid\uff0c\u6bcf\u4e2agrid\u6709\u4e24\u4e2a\u81ea\u7531\u5ea6\uff0c\u5373x\u548cy\u65b9\u5411\uff0c\u90a3\u4e48G2P\u6570\u636e\u4f20\u8f93\u4e4b\u524d\u7b49\u4e8e\u4e00\u5171\u670918\u4e2a\u81ea\u7531\u5ea6\uff08\u5206\u91cf\uff09\u3002\u4f20\u8f93\u5230\u5355\u4e2a\u7c92\u5b50\u4e0a\uff0c\u6bcf\u4e2a\u7c92\u5b50\u53ea\u67092\u4e2a\u81ea\u7531\u5ea6\uff08\u5206\u91cf\uff09\uff0c\u5373x\u548cy\u65b9\u5411\u3002\u8fd9\u6837\u5c31\u9020\u6210\u4e86\u4fe1\u606f\u4e22\u5931\uff0c\u5373\u9020\u6210\u4e86\u80fd\u91cf\u8017\u6563\u3002\u6240\u4ee5\uff0c\u4eba\u4eec\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528PIC\u3002 \u5bf9\u4e8e\u80fd\u91cf\u8017\u6563\uff0c\u76ee\u524d\u7814\u7a76\u9886\u57df\u6709\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\uff1a \u4f20\u8f93\u66f4\u591a\u7684\u6570\u636e\uff1aAPIC, PolyPIC \u4f20\u8f93delta\uff1aFLIP \u4e0d\u628a\u6240\u6709\u7684\u4fe1\u606f\u90fd\u901a\u8fc7grid\u8fdb\u884c\u4f20\u8f93\uff0c\u53ea\u4f20\u8f93\u4e00\u4e2adelta \u5728\u7c92\u5b50\u4e0a\u4fdd\u7559\u4e00\u4e9b\u4fe1\u606f","title":"2. PIC"},{"location":"simulation/graphics/mpm/#3-apic","text":"\u5bf9\u4e8e\u4e0b\u56fe\uff0cPIC\u65b9\u6cd5\u503c\u5305\u542b \\(v_0\\) \u548c \\(v_1\\) \u4e24\u4e2a\u5e38\u91cf\uff0c\u4f46\u662f\u901f\u5ea6\u8fd8\u6709\u5176\u4ed6\u6a21\u5f0f\u3002\u4f8b\u5982\uff1a \\(C_{00}\\) \uff1a\u63cf\u8ff0\u7684\u662f\u6269\u5f20\u3002\u6cbf\u7740 \\(x\\) \u8f74\u4e0a\u7684\u901f\u5ea6\u5e76\u4e0d\u662f\u4e00\u6837\u7684\uff0c\u968f\u7740 \\(x\\) \u7684\u589e\u52a0\uff0c \\(x\\) \u7684\u901f\u5ea6\u8d8a\u5927\uff0c\u4f1a\u62c9\u4f38\u8fd9\u4e2a\u6750\u6599 \\(C_{10}\\) \uff1a\u63cf\u8ff0\u7684\u662f\u526a\u5207\u3002\u6cbf\u7740 \\(y\\) \u8f74\u4e0a\u7684\u901f\u5ea6\u5e76\u4e0d\u662f\u4e00\u6837\u7684\uff0c\u968f\u7740 \\(x\\) \u7684\u589e\u52a0\uff0c \\(y\\) \u7684\u901f\u5ea6\u8d8a\u5927\uff0c\u4f1a\u526a\u5207\u8fd9\u4e2a\u6750\u6599 \\(C_{01}\\) \u548c \\(C_{11}\\) \u540c\u7406 APIC\u4e2d\u7684P2G\u548cG2P\u90fd\u662f\u89d2\u52a8\u91cf\u5b88\u6052\u7684 APIC\u7684\u6570\u5b66\u63a8\u5bfc\u5f88\u590d\u6742\uff0c\u4f46\u662f\u4ee3\u7801\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002","title":"3. APIC\u90e8\u5206\u4ee3\u7801\u89e3\u8bfb"},{"location":"simulation/graphics/mpm/#31-p2g","text":"\u6709\u4e00\u4e2aaffine\u7684\u901f\u5ea6\u573a\uff0c\u5728\u4ece\u7c92\u5b50\u5230\u7f51\u683c\u7684\u901f\u5ea6\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u4e86\u7c92\u5b50\u7684\u901f\u5ea6 v[p] \u7684\u8f6c\u79fb\uff0c\u8fd8\u6709\u4e00\u4e2a affine @ dpos \u91cf\u7684\u8f6c\u79fb\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u77e9\u9635\u4e58\u6cd5\u3002\u6570\u5b66\u516c\u5f0f\u7684\u63a8\u5bfc\u7701\u7565\u3002 for p in x : base = ( x [ p ] * inv_dx - 0.5 ) . cast ( int ) fx = x [ p ] * inv_dx - base . cast ( float ) w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] affine = C [ p ] # \u8fd9\u91cc\u6709\u4e0d\u540c for i in ti . static ( range ( 3 )): for j in ti . static ( range ( 3 )): offset = ti . Vector ([ i , j ]) dpos = ( offset . cast ( float ) - fx ) * dx weight = w [ i ][ 0 ] * w [ j ][ 1 ] grid_v [ base + offset ] += weight * ( v [ p ] + affine @ dpos ) # \u8fd9\u91cc\u6709\u4e0d\u540c grid_m [ base + offset ] += weight","title":"3.1 P2G\u7684\u64cd\u4f5c"},{"location":"simulation/graphics/mpm/#32-g2p","text":"\u8ba1\u7b97\u4e00\u4e2a new_C \uff0c\u662f\u6bcf\u4e2a\u7f51\u683c\u5bf9C\u7684\u53e0\u52a0\uff0c\u7136\u540e\u66f4\u65b0 C[p] \u3002\u8fd9\u91cc\u8ba1\u7b97 new_C \u4f7f\u7528\u7684\u662f\u5916\u79ef\u3002\u6570\u5b66\u516c\u5f0f\u7684\u63a8\u5bfc\u7701\u7565\u3002 for p in x : # grid to particle (G2P) base = ( x [ p ] * inv_dx - 0.5 ) . cast ( int ) fx = x [ p ] * inv_dx - base . cast ( float ) w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1.0 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] new_v = ti . Vector . zero ( float , 2 ) # \u8fd9\u91cc\u6709\u4e0d\u540c new_C = ti . Matrix . zero ( float , 2 , 2 ) # \u8fd9\u91cc\u6709\u4e0d\u540c for i , j in ti . static ( ti . ndrange ( 3 , 3 )): # loop over 3x3 grid node neighborhood dpos = ti . Vector ([ i , j ]) . cast ( float ) - fx g_v = grid_v [ base + ti . Vector ([ i , j ])] weight = w [ i ][ 0 ] * w [ j ][ 1 ] new_v += weight * g_v # \u8fd9\u91cc\u6709\u4e0d\u540c new_C += 4 * inv_dx * weight * g_v . outer_product ( dpos ) # \u8fd9\u91cc\u6709\u4e0d\u540c v [ p ], C [ p ] = new_v , new_C # \u8fd9\u91cc\u6709\u4e0d\u540c x [ p ] += dt * v [ p ] # advection \u8fd9\u91cc\u6709\u4e0d\u540c","title":"3.2 G2P\u7684\u64cd\u4f5c"},{"location":"simulation/graphics/mpm/#4-polypic","text":"PolyPIC\u5219\u6bd4APIC\u591a\u51fa\u66f4\u591a\u7684\u901f\u5ea6\u6a21\u5f0f\uff0c\u670918\u79cd\u901f\u5ea6\u6a21\u5f0f\u3002\u5373\u6bcf\u4e2a\u7c92\u5b50\u67099\u4e2a\u7ed3\u70b9\u4e58\u4ee52\uff0c\u4e00\u517118\u4e2a\u81ea\u7531\u5ea6\u3002\u6bcf\u4e2a3x3\u7f51\u683c\u768418\u4e2a\u81ea\u7531\u5ea6\uff0c\u5bf9\u5e94\u6bcf\u4e2a\u7c92\u5b5018\u4e2a\u81ea\u7531\u5ea6\uff0c\u4f20\u8f93\u51e0\u4e4e\u6ca1\u6709\u635f\u5931","title":"4. PolyPIC"},{"location":"simulation/graphics/mpm/#5-flip","text":"FLIP\u65b9\u6cd5\u7684\u601d\u8def\u662f\uff0c\u4e0d\u6536\u96c6\u7c92\u5b50\u4e0a\u7684\u7269\u7406\u91cf\uff0c\u800c\u662f\u53ea\u6536\u96c6\u7f51\u683c\u64cd\u4f5c\u524d/\u540e\u7684\u7269\u7406\u91cf\u7684\u589e\u91cf$delta\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u589e\u91cf\u5177\u4f53\u662f\u6307\u4ec0\u4e48\uff1a \u5728\u505a\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u6a21\u62df\u65f6\uff0c\u7f51\u683c\u64cd\u4f5c\u4e3a\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u4eff\u771f\u4e2d\u7684pressure projection \u5728\u505a\u56fa\u4f53\u6a21\u62df\u65f6\uff0c\u7f51\u683c\u64cd\u4f5c\u4e3a\u5185\u90e8\u529b\u7684\u8ba1\u7b97 -> MPM FLIP\u548cPIC\u5728advection\u4e0a\u7684\u533a\u522b\u4e3a\uff1a PIC: \u6bcf\u4e2a\u7c92\u5b50\u53bb\u6536\u96c6\u5468\u56f4\u7f51\u683c\u7ed3\u70b9\u4e0a \\(t+1\\) \u65f6\u523b\u7684\u901f\u5ea6\u6765\u66f4\u65b0 - \\(v_p^{t+1}=gather(v_i^{t+1})\\) FLIP: \u6bcf\u4e2a\u7c92\u5b50\u53bb\u6536\u96c6\u5468\u56f4\u7f51\u683c\u7ed3\u70b9 \\(t+1\\) \u65f6\u523b\u548c \\(t\\) \u65f6\u523b\u901f\u5ea6\u7684\u5dee\u503c\u6765\u66f4\u65b0 - \\(v_P^{t+1}=v_p^{t}+gather(v_i^{t+1}-v_i^t)\\)","title":"5. FLIP"},{"location":"simulation/graphics/mpm/#flip","text":"FLIP\u7684\u7f3a\u70b9\u662f\uff0cnoise\u592a\u591a\u3002 \u6709\u4e00\u4e2a\u4e2d\u548c\u7684\u529e\u6cd5\u662fFLIP0.99\uff0c\u5373\u628a0.99\u4e2aFLIP\u7684\u7ed3\u679c\u52a0\u4e0a0.01\u4e2aPIC\u7684\u7ed3\u679c\u4f5c\u4e3adamping\u3002\u5f88\u591a\u65f6\u5019FLIP\u6548\u679c\u8fd8\u6ca1\u6709APIC\u597d\uff0c\u6240\u4ee5\uff0c\u4e00\u822c\u90fd\u4f1a\u628aFLIP\u548cPIC\u4e00\u8d77\u52a0\u6743\u7528\uff0c\u6216\u8005\u76f4\u63a5\u7528APIC\uff08\u65b0\u624b\uff09\u3002","title":"FLIP\u7684\u7f3a\u70b9\u548c\u4f7f\u7528"},{"location":"simulation/graphics/mpm/#6-mpm","text":"MPM\u65b9\u6cd5\u662f\u4e00\u4e2astand-alone\u7684\u6a21\u5f0f\uff0c\u548c\u524d\u9762\u4ecb\u7ecd\u7684\u6a21\u5f0f\u90fd\u4e0d\u4e00\u6837\u3002\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u90fd\u662f\u5173\u4e8eadvection\u7684\u6a21\u5f0f\uff0c\u57fa\u672c\u4e0a\u53ea\u643a\u5e26\u7c92\u5b50\u7684\u901f\u5ea6\u4fe1\u606f\uff0c\u5728projection\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u90fd\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684multigrid solver\u6765\u6c42\u89e3\uff0c\u4f46\u662fMPM\u4e0d\u53ea\u662f\u4e00\u4e2aadvection\u3002MPM\u7b49\u4e8e\u8bf4\u662f\u4e00\u6574\u4f7f\u7528\u5957\u6df7\u5408\u62c9\u683c\u6717\u65e5-\u6b27\u62c9\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u4eff\u771f\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u4e86advection\uff0c\u4e5f\u5305\u62ec\u4e86projection\u3002\u5982\u6b64\u4e00\u6765\uff0c\u7c92\u5b50\u5c31\u9700\u8981\u643a\u5e26\u901f\u5ea6\u4e4b\u5916\u7684\u66f4\u591a\u4fe1\u606f\u4e86\u3002\u6bd4\u5982\u8fd8\u9700\u8981\u50a8\u5b58\u5f62\u53d8\u68af\u5ea6\u3001\u4f53\u79ef\u4ee5\u53ca\u5176\u4ed6\u7279\u5b9a\u6a21\u62df\u4e2d\u9700\u8981\u7528\u5230\u7684\u7269\u7406\u91cf\u3002 MPM\u65b9\u6cd5\u57282018\u5e74\u7684\u60c5\u51b5\u5982\u56fe\u6240\u793a\uff1a \u5728\u7c92\u5b50\u8fd9\u8fb9\u53ef\u4ee5\u7814\u7a76\u672c\u6784\u6a21\u578b/\u6750\u6599\u6a21\u578b\uff0c\u4f8b\u5982 \u96ea\u7684\u6750\u6599\u6a21\u578b \u6ce1\u6cab\u7684\u6750\u6599\u6a21\u578b \u6c99\u5b50\u7684\u6750\u6599\u6a21\u578b \u5728\u7f51\u683c\u8fd9\u8fb9\u53ef\u4ee5\u7814\u7a76\u7f51\u683c\u7684\u65b9\u6cd5 \u5728P2G\u548cG2P\u4e0a\u4e5f\u6709\u8bb8\u591a\u7814\u7a76\uff0c\u4f8b\u5982\u524d\u9762\u63d0\u5230\u7684APIC\u7b49\uff0c\u6b64\u5916\u8fd8\u6709 MLS-MPM Compatible PIC\uff1a\u7528\u6765\u5904\u7406\u6750\u6599\u5207\u5272\uff0c\u4ee5\u53caMPM\u548c\u521a\u4f53\u7684\u8026\u5408","title":"6. MPM"},{"location":"simulation/graphics/mpm/#61-mpm","text":"\u81ea\u52a8\u8026\u5408\u4e0d\u540c\u7684\u6750\u6599\uff0c\u4f8b\u5982\u6db2\u4f53\u3001\u56fa\u4f53\u3001\u9897\u7c92\u72b6\u7269\u8d28\u7b49 \u81ea\u52a8\u5904\u7406\u78b0\u649e/\u81ea\u78b0\u649e \u81ea\u52a8\u5904\u7406\u65ad\u88c2 fracture\uff0c\u4f46\u662f\u4e0d\u51c6\u786e\uff0c\u89c6\u89c9\u8db3\u591f \u80fd\u591f\u5904\u7406\u5927\u578b\u53d8","title":"6.1 MPM\u7684\u4f18\u52bf"},{"location":"simulation/graphics/mpm/#7-mls-mpm","text":"MLS-MPM\u662f\u57fa\u4e8eAPIC\uff0c\u7279\u70b9\u662f\u901f\u5ea6\u5feb\uff0c\u56e0\u4e3a\u964d\u4f4e\u4e86\u4e00\u534a\u7684FLOPS\u6d6e\u70b9\u6570\u8fd0\u7b97\u3002 \u5927\u7684\u4e09\u6b65\u8fd8\u662f\u548c\u4e4b\u524d\u4e00\u6837\uff0cP2G\u3001Grid operation\u3001G2P\uff0c\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f\uff0c\u5728P2G\u7684\u65f6\u5019\uff0c\u9700\u8981\u8ba1\u7b97\u67ef\u897f\u5e94\u529b\u4ee5\u53ca\u7c92\u5b50\u5bf9\u6bcf\u4e2a\u7f51\u683c\u7ed3\u70b9\u7684\u8d21\u732e\u3002","title":"7. MLS-MPM\u4ee3\u7801\u89e3\u8bfb"},{"location":"simulation/graphics/mpm/#71","text":"import taichi as ti import time ti . init ( arch = ti . gpu ) n_particles = 8192 n_grid = 128 dx = 1 / n_grid dt = 2e-4 p_rho = 1 # \u7c92\u5b50\u5bc6\u5ea6 p_vol = ( dx * 0.5 ) ** 2 # \u7c92\u5b50\u4f53\u79ef p_mass = p_vol * p_rho # \u7c92\u5b50\u8d28\u91cf gravity = 9.8 bound = 3 E = 400 # stiffness\u521a\u5ea6\uff0c\u5728\u6db2\u4f53\u91cc\u662fbulk modulus \u4f53\u79ef\u6a21\u91cf x = ti . Vector . field ( 2 , float , n_particles ) v = ti . Vector . field ( 2 , float , n_particles ) C = ti . Matrix . field ( 2 , 2 , float , n_particles ) J = ti . field ( float , n_particles ) grid_v = ti . Vector . field ( 2 , float , ( n_grid , n_grid )) grid_m = ti . field ( float , ( n_grid , n_grid ))","title":"7.1. \u53c2\u6570\u8bbe\u7f6e\u90e8\u5206"},{"location":"simulation/graphics/mpm/#72-p2g","text":"\u548cAPIC\u7684\u533a\u522b\u5728\u4e8e\uff1a stress\uff1a\u6db2\u4f53\u88ab\u538b\u7f29\u4f1a\u4ea7\u751f\u4e00\u4e2a\u62b5\u6297\u538b\u7f29\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u67ef\u897f\u5e94\u529b\u4f53\u73b0\u51fa\u6765\uff0c\u4ece\u800c\u8868\u73b0\u4e3a\u7c92\u5b50\u548c\u7c92\u5b50\u4e4b\u95f4\u4e92\u76f8\u63a8\u5f00\u3002\u4f46\u662f\u8fd9\u4e2a\u63a8\u5f00\u7684\u8fc7\u7a0b\u5e76\u4e0d\u53d1\u751f\u5728\u7c92\u5b50\u4e4b\u95f4\uff0c\u800c\u662f\u901a\u8fc7\u7f51\u683c\u6765\u63a8\u5f00\u3002 affine\uff1a\u628aC\u548cstress\u53e0\u52a0\u5728\u4e00\u8d77\uff0c\u7edf\u4e00\u901a\u8fc7affine\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u8282\u7701\u4e86\u8ba1\u7b97\u91cf\u3002 @ti . kernel def substep (): for i , j in grid_m : grid_v [ i , j ] = [ 0 , 0 ] grid_m [ i , j ] = 0 for p in x : Xp = x [ p ] / dx base = int ( Xp - 0.5 ) fx = Xp - base w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] # B-Spline kernel function stress = - dt * 4 * E * p_vol * ( J [ p ] - 1 ) / dx ** 2 affine = ti . Matrix ([[ stress , 0 ], [ 0 , stress ]]) + p_mass * C [ p ] for i , j in ti . static ( ti . ndrange ( 3 , 3 )): offset = ti . Vector ([ i , j ]) dpos = ( offset - fx ) * dx weight = w [ i ] . x * w [ j ] . y grid_v [ base + offset ] += weight * ( p_mass * v [ p ] + affine @ dpos ) grid_m [ base + offset ] += weight * p_mass","title":"7.2 \u66f4\u65b0\u90e8\u5206P2G"},{"location":"simulation/graphics/mpm/#73","text":"\u8fd9\u91cc\u53ea\u8bbe\u7f6e\u4e86\u56db\u5468\u7684\u8fb9\u754c\u6761\u4ef6\uff0c\u81ea\u78b0\u649e\u5982\u4f55\u5904\u7406\uff1f for i , j in grid_m : if grid_m [ i , j ] > 0 : grid_v [ i , j ] /= grid_m [ i , j ] grid_v [ i , j ] . y -= dt * gravity if i < bound and grid_v [ i , j ] . x < 0 : grid_v [ i , j ] . x = 0 if i > n_grid - bound and grid_v [ i , j ] . x > 0 : grid_v [ i , j ] . x = 0 if j < bound and grid_v [ i , j ] . y < 0 : grid_v [ i , j ] . y = 0 if j > n_grid - bound and grid_v [ i , j ] . y > 0 : grid_v [ i , j ] . y = 0","title":"7.3 \u8fb9\u754c\u6761\u4ef6"},{"location":"simulation/graphics/mpm/#74-g2p","text":"\u4e0eAPIC\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f J[p] \u7684\u66f4\u65b0\u3002 J \u5728\u8fd9\u91cc\u662f\u6307\u7c92\u5b50\u7684\u4f53\u79ef\uff0c\u901a\u8fc7\u52a0\u5165\u4e86C\u7684trace\u3002\u56de\u987eAPIC\u91cc\u5173\u4e8eC\u7684\u90e8\u5206\uff08 \\(C_{00}, C_{01}...\\) \uff09\uff0c\u5176\u4e2d\u5173\u4e8e\u6269\u6563\u7684x\u65b9\u5411\u7684\u62c9\u4f38 \\(C_{00}\\) \u548cy\u65b9\u5411\u7684\u62c9\u4f38 \\(C_{11}\\) \u662f\u552f\u4e00\u4f1a\u5f71\u54cd\u7c92\u5b50\u4f53\u79ef\u7684\u5206\u91cf\uff0c\u800c\u526a\u5207\u5206\u91cf \\(C_{01}\\) \u548c \\(C_{10}\\) \u5219\u5bf9\u4f53\u79ef\u53d8\u5316\u6ca1\u6709\u5f71\u54cd\u3002\u90a3\u4e48\u4ee3\u7801\u4e2d\u7684 1 + dt * new_C.trace() \u5c31\u662f\u4f53\u79ef\u7684\u53d8\u5316\u7387\uff0c\u81ea\u4e58\u5219\u5f97\u5230\u53d8\u5316\u540e\u7684\u4f53\u79ef\u3002\u6ce8\u610f\uff0c\u6d41\u4f53\u91cc\u7684\u529b\uff0c\u5b8c\u5168\u5c31\u662f\u7531 \\(J\\) \u6765\u8fdb\u884c\u63a7\u5236\u7684\u3002 for p in x : Xp = x [ p ] / dx base = int ( Xp - 0.5 ) fx = Xp - base w = [ 0.5 * ( 1.5 - fx ) ** 2 , 0.75 - ( fx - 1 ) ** 2 , 0.5 * ( fx - 0.5 ) ** 2 ] new_v = ti . Vector . zero ( float , 2 ) new_C = ti . Matrix . zero ( float , 2 , 2 ) for i , j in ti . static ( ti . ndrange ( 3 , 3 )): offset = ti . Vector ([ i , j ]) dpos = ( offset - fx ) * dx weight = w [ i ] . x * w [ j ] . y g_v = grid_v [ base + offset ] new_v += weight * g_v new_C += 4 * weight * g_v . outer_product ( dpos ) / dx ** 2 v [ p ] = new_v x [ p ] += dt * v [ p ] J [ p ] *= 1 + dt * new_C . trace () C [ p ] = new_C","title":"7.4 \u66f4\u65b0\u90e8\u5206G2P"},{"location":"simulation/graphics/mpm/#75","text":"\u521d\u59cb\u5316\u7c92\u5b50\uff0c\u6ce8\u610f\u5728\u6bcf\u4e00\u4e2asubstep\u8fd0\u884c\u4e4b\u524d\uff0c\u9700\u8981\u628a grid_v \u548c grid-m \u8bbe\u7f6e\u4e3a0\uff08mpm88\u4e2d\u6ca1\u6709\u8fd9\u4e24\u9879\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\uff1f\uff09 @ti . kernel def init (): for i in range ( n_particles ): x [ i ] = [ ti . random () * 0.4 + 0.2 , ti . random () * 0.4 + 0.2 ] v [ i ] = [ 0 , - 1 ] J [ i ] = 1 init () # gui = ti.GUI('MPM88',(1920, 1080), fullscreen=True) gui = ti . GUI ( 'MPM88' ) while gui . running and not gui . get_event ( gui . ESCAPE ): for s in range ( 50 ): grid_v . fill ([ 0 , 0 ]) # \u6ce8\u610f grid_m . fill ( 0 ) # \u6ce8\u610f substep () gui . clear ( 0x112F41 ) gui . circles ( x . to_numpy (), radius = 3 , color = 0x068587 ) gui . show ()","title":"7.5 \u4e3b\u7a0b\u5e8f\u90e8\u5206"},{"location":"simulation/graphics/mpm/#_2","text":"\u6d41\u56fa\u8026\u5408\uff08\u8c03\u53c2\uff1f\uff09 GIF\u6548\u679c","title":"\u95ee\u9898"},{"location":"simulation/graphics/mpm/#_3","text":"Lecture 7 \u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09\uff1a GAMES201\uff1a\u9ad8\u7ea7\u7269\u7406\u5f15\u64ce\u5b9e\u6218\u6307\u53572020 Lecture 7 \u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09\uff1a GAMES201\uff1a\u9ad8\u7ea7\u7269\u7406\u5f15\u64ce\u5b9e\u6218\u6307\u53572020","title":"\u53c2\u8003\u6765\u6e90"},{"location":"simulation/graphics/mss/","text":"\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf \u76ee\u6807 \u7406\u89e3\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf 1. \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u4e2d\u7684\u53d7\u529b \u91cd\u529b - \\(f_i^{gravity}=-m_ig\\) \u5f39\u7c27\u529b - \\(f_{ij}^{spring}=-k(\\lVert x_i-x_j\\lVert_2-l_{ij})d = -Y(\\frac{||x_i-x_j||_2}{l_{ij}}-1)d \\qquad Hooke's Law\\) \u963b\u5c3c - \\(f_i^{drag}=-\\alpha v_i\\) \u51cf\u9707\u5668 - \\(f_{ij}^{dashpot}=-[\\beta (v_i-v_j)\\cdot \\textbf{d}]\\textbf{d}\\) \\(k\\) -\u5f39\u7c27\u521a\u5ea6 stiffness \\(Y\\) - \u6768\u6c0f\u6a21\u91cf \\(l_{ij}\\) - \u5f39\u7c27\u9759\u6b62\u957f\u5ea6 \\(\\textbf{d}=\\widehat{(x_i-x_j)}\\) - \u4ecei\u5230j\u7684\u65b9\u5411\u5411\u91cf\u7684\u5355\u4f4d\u5411\u91cf 2. \u663e\u5f0f\u79ef\u5206 2.1 \u663e\u5f0f\u79ef\u5206\u516c\u5f0f \\[ \\begin{align*} & v_{t+1}=v_t+\\Delta t\\frac{f_t}{m} \\\\ & x_{t+1}=x_t+\\Delta t v_t \\end{align*} \\] \u610f\u601d\u662f\uff1a \u4e0b\u4e00\u65f6\u523b\u7684\u901f\u5ea6\uff0c\u53d6\u51b3\u4e8e\u73b0\u5728\u7684\u901f\u5ea6\u4e0e\u52a0\u901f\u5ea6\uff1b\u4e0b\u4e00\u523b\u7684\u4f4d\u7f6e\uff0c\u53d6\u51b3\u4e8e\u73b0\u5728\u7684\u4f4d\u7f6e\u548c\u73b0\u5728\u7684\u901f\u5ea6 \u3002 \u663e\u5f0f\u79ef\u5206\u65b9\u6cd5 \uff1a Forward Euler Sympletic Euler RK4 \u5bb9\u6613\u5b9e\u65bd\uff0c\u5bb9\u6613\u7206\u70b8\uff0c\u4e0d\u9002\u5408\u521a\u5ea6\u5f88\u5927\u7684\u6750\u6599 \u7206\u70b8\u7684\u610f\u601d\u662f\uff0c\u8ba1\u7b97\u8bef\u5dee\u65e0\u6cd5\u968f\u7740\u65f6\u95f4\u8870\u51cf\uff0c\u800c\u662f\u968f\u7740\u65f6\u95f4\u7206\u70b8\u6027\u589e\u957f 3. \u9690\u5f0f\u79ef\u5206 3.1 \u9690\u5f0f\u79ef\u5206\u516c\u5f0f \\[ \\begin{align*} & x_{t+1}=x_t+\\Delta tv_{t+1}\\quad (1) \\\\ \\\\ & v_{t+1}=v_t+\\Delta tM^{-1}f(x_{t+1})\\quad (2) \\end{align*} \\] \u9690\u5f0f\u65f6\u95f4\u79ef\u5206 \\((1)\\) \u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u4f4d\u7f6e\u53d6\u51b3\u4e8e\u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u901f\u5ea6 \\((2)\\) \u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u901f\u5ea6\u53d6\u51b3\u4e8e\u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u4f4d\u7f6e\uff08\u529b\uff09 \u9690\u5f0f\u79ef\u5206\u65b9\u6cd5 \uff1a Backward Euler Middle-point \u63d0\u793a\uff1a\u5982\u679c\u89e3 \u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \uff0c\u90a3\u4e48\u8ba1\u7b97\u4f1a\u66f4\u6602\u8d35\uff0c\u6c42\u89e3\u590d\u6742\uff0c\u65e0\u6cd5\u505a\u5411\u91cf\u5316 3.2 \u540e\u5411\u6b27\u62c9 \u901a\u8fc7 \\((1)\\) \u548c \\((2)\\) \u5f97\u5230\uff1a $$ v_{t+1}=v_t+\\Delta t M^{-1}f(x_t+\\Delta tv_{t+1}) \\quad (3) $$ \u7ebf\u6027\u5316\uff1a\u7531\u4e8e\u516c\u5f0f \\((3)\\) \u662f\u4e00\u4e2a\u975e\u7ebf\u6027\u7cfb\u7edf\uff0c\u5bf9f()\u8fdb\u884c\u4e00\u5c4a\u6cf0\u52d2\u5c55\u5f00\uff08\u725b\u987f\u65b9\u6cd5\u7684\u4e00\u4e2a\u6b65\u9aa4\uff09 \u7531\u4e8e \\(x_t\\) \u548c \\(v_t\\) \u90fd\u5df2\u77e5\uff0c\u9700\u8981\u6c42\u89e3\u7684\u662f \\(v_{t+1}\\) \uff0c\u6240\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ebf\u6027\u7cfb\u7edf \\((5)\\) $$ \\begin{aligned}& v_{t+1}=v_t+\\Delta t M^{-1}[f(x_t)+\\frac{\\partial f}{\\partial x}(x_t)\\Delta t v_{t+1}] \\quad (4)\\\\ & [I-\\Delta t^2 M^{-1 }\\frac{\\partial f}{\\partial x}(x_t)]v_{t+1} = v_t+\\Delta t M^{-1}f(x_t) \\quad (5) \\end{aligned} $$ 4. \u79ef\u5206\u5668\u901a\u7528\u516c\u5f0f \u5bf9\u516c\u5f0f \\((5)\\) \u505a\u4e00\u70b9\u5c0f\u6539\u52a8\uff0c\u52a0\u5165 \\(\\beta\\) \u5f97\u5230 \\((6)\\) $$ [I-\\beta\\Delta t^2 M^{-1 }\\frac{\\partial f}{\\partial x}(x_t)]v_{t+1} = v_t+\\Delta t M^{-1}f(x_t) \\quad (6) $$ \u4e0d\u540c\u7684 \\(\\beta\\) \u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u79ef\u5206\u5668\uff1a \\(\\beta=0\\) \u65f6\uff0c \\(v_{t+1}=v_t+\\Delta tM^{-1}f(x_t)\\) \uff0c\u5c5e\u4e8e\u524d\u5411\u6b27\u62c9\u663e\u5f0f\u79ef\u5206 \\(\\beta=1/2\\) \u65f6\uff0c\u4e3amiddle point\u65b9\u6cd5\uff0c\u7cbe\u5ea6\u6bd4\u9690\u5f0f\u79ef\u5206\u53ef\u80fd\u597d\u4e9b \\(\\beta=1\\) \u65f6\uff0c\u5c5e\u4e8e\u540e\u5411\u6b27\u62c9\u6cd5 5. \u590d\u6742\u5f39\u7c27\u7cfb\u7edf \u5982\u679c\u6709\u6210\u5343\u4e0a\u4e07\u4e2a\u5f39\u7c27\uff1a \u7a00\u758f\u77e9\u9635 \u5171\u8f6d\u68af\u5ea6 Preconditioning Position-based dynamics (PBD) \u6216\u8005\u4f7f\u7528Fast mass-spring system solver Fast simulation of mass-spring system 6. DEMO\u6848\u4f8b Taichi Open a window Free falling and fixed particles Springs Wall collision Attractor Drag damping Dashpot damping","title":"\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf"},{"location":"simulation/graphics/mss/#_1","text":"","title":"\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf"},{"location":"simulation/graphics/mss/#_2","text":"\u7406\u89e3\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf","title":"\u76ee\u6807"},{"location":"simulation/graphics/mss/#1","text":"\u91cd\u529b - \\(f_i^{gravity}=-m_ig\\) \u5f39\u7c27\u529b - \\(f_{ij}^{spring}=-k(\\lVert x_i-x_j\\lVert_2-l_{ij})d = -Y(\\frac{||x_i-x_j||_2}{l_{ij}}-1)d \\qquad Hooke's Law\\) \u963b\u5c3c - \\(f_i^{drag}=-\\alpha v_i\\) \u51cf\u9707\u5668 - \\(f_{ij}^{dashpot}=-[\\beta (v_i-v_j)\\cdot \\textbf{d}]\\textbf{d}\\) \\(k\\) -\u5f39\u7c27\u521a\u5ea6 stiffness \\(Y\\) - \u6768\u6c0f\u6a21\u91cf \\(l_{ij}\\) - \u5f39\u7c27\u9759\u6b62\u957f\u5ea6 \\(\\textbf{d}=\\widehat{(x_i-x_j)}\\) - \u4ecei\u5230j\u7684\u65b9\u5411\u5411\u91cf\u7684\u5355\u4f4d\u5411\u91cf","title":"1. \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u4e2d\u7684\u53d7\u529b"},{"location":"simulation/graphics/mss/#2","text":"","title":"2. \u663e\u5f0f\u79ef\u5206"},{"location":"simulation/graphics/mss/#21","text":"\\[ \\begin{align*} & v_{t+1}=v_t+\\Delta t\\frac{f_t}{m} \\\\ & x_{t+1}=x_t+\\Delta t v_t \\end{align*} \\] \u610f\u601d\u662f\uff1a \u4e0b\u4e00\u65f6\u523b\u7684\u901f\u5ea6\uff0c\u53d6\u51b3\u4e8e\u73b0\u5728\u7684\u901f\u5ea6\u4e0e\u52a0\u901f\u5ea6\uff1b\u4e0b\u4e00\u523b\u7684\u4f4d\u7f6e\uff0c\u53d6\u51b3\u4e8e\u73b0\u5728\u7684\u4f4d\u7f6e\u548c\u73b0\u5728\u7684\u901f\u5ea6 \u3002 \u663e\u5f0f\u79ef\u5206\u65b9\u6cd5 \uff1a Forward Euler Sympletic Euler RK4 \u5bb9\u6613\u5b9e\u65bd\uff0c\u5bb9\u6613\u7206\u70b8\uff0c\u4e0d\u9002\u5408\u521a\u5ea6\u5f88\u5927\u7684\u6750\u6599 \u7206\u70b8\u7684\u610f\u601d\u662f\uff0c\u8ba1\u7b97\u8bef\u5dee\u65e0\u6cd5\u968f\u7740\u65f6\u95f4\u8870\u51cf\uff0c\u800c\u662f\u968f\u7740\u65f6\u95f4\u7206\u70b8\u6027\u589e\u957f","title":"2.1 \u663e\u5f0f\u79ef\u5206\u516c\u5f0f"},{"location":"simulation/graphics/mss/#3","text":"","title":"3. \u9690\u5f0f\u79ef\u5206"},{"location":"simulation/graphics/mss/#31","text":"\\[ \\begin{align*} & x_{t+1}=x_t+\\Delta tv_{t+1}\\quad (1) \\\\ \\\\ & v_{t+1}=v_t+\\Delta tM^{-1}f(x_{t+1})\\quad (2) \\end{align*} \\] \u9690\u5f0f\u65f6\u95f4\u79ef\u5206 \\((1)\\) \u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u4f4d\u7f6e\u53d6\u51b3\u4e8e\u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u901f\u5ea6 \\((2)\\) \u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u901f\u5ea6\u53d6\u51b3\u4e8e\u4e0b\u4e00\u4e2a\u65f6\u95f4\u7684\u4f4d\u7f6e\uff08\u529b\uff09 \u9690\u5f0f\u79ef\u5206\u65b9\u6cd5 \uff1a Backward Euler Middle-point \u63d0\u793a\uff1a\u5982\u679c\u89e3 \u7ebf\u6027\u7cfb\u7edf\u65b9\u7a0b\u7ec4 \uff0c\u90a3\u4e48\u8ba1\u7b97\u4f1a\u66f4\u6602\u8d35\uff0c\u6c42\u89e3\u590d\u6742\uff0c\u65e0\u6cd5\u505a\u5411\u91cf\u5316","title":"3.1 \u9690\u5f0f\u79ef\u5206\u516c\u5f0f"},{"location":"simulation/graphics/mss/#32","text":"\u901a\u8fc7 \\((1)\\) \u548c \\((2)\\) \u5f97\u5230\uff1a $$ v_{t+1}=v_t+\\Delta t M^{-1}f(x_t+\\Delta tv_{t+1}) \\quad (3) $$ \u7ebf\u6027\u5316\uff1a\u7531\u4e8e\u516c\u5f0f \\((3)\\) \u662f\u4e00\u4e2a\u975e\u7ebf\u6027\u7cfb\u7edf\uff0c\u5bf9f()\u8fdb\u884c\u4e00\u5c4a\u6cf0\u52d2\u5c55\u5f00\uff08\u725b\u987f\u65b9\u6cd5\u7684\u4e00\u4e2a\u6b65\u9aa4\uff09 \u7531\u4e8e \\(x_t\\) \u548c \\(v_t\\) \u90fd\u5df2\u77e5\uff0c\u9700\u8981\u6c42\u89e3\u7684\u662f \\(v_{t+1}\\) \uff0c\u6240\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ebf\u6027\u7cfb\u7edf \\((5)\\) $$ \\begin{aligned}& v_{t+1}=v_t+\\Delta t M^{-1}[f(x_t)+\\frac{\\partial f}{\\partial x}(x_t)\\Delta t v_{t+1}] \\quad (4)\\\\ & [I-\\Delta t^2 M^{-1 }\\frac{\\partial f}{\\partial x}(x_t)]v_{t+1} = v_t+\\Delta t M^{-1}f(x_t) \\quad (5) \\end{aligned} $$","title":"3.2 \u540e\u5411\u6b27\u62c9"},{"location":"simulation/graphics/mss/#4","text":"\u5bf9\u516c\u5f0f \\((5)\\) \u505a\u4e00\u70b9\u5c0f\u6539\u52a8\uff0c\u52a0\u5165 \\(\\beta\\) \u5f97\u5230 \\((6)\\) $$ [I-\\beta\\Delta t^2 M^{-1 }\\frac{\\partial f}{\\partial x}(x_t)]v_{t+1} = v_t+\\Delta t M^{-1}f(x_t) \\quad (6) $$ \u4e0d\u540c\u7684 \\(\\beta\\) \u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u79ef\u5206\u5668\uff1a \\(\\beta=0\\) \u65f6\uff0c \\(v_{t+1}=v_t+\\Delta tM^{-1}f(x_t)\\) \uff0c\u5c5e\u4e8e\u524d\u5411\u6b27\u62c9\u663e\u5f0f\u79ef\u5206 \\(\\beta=1/2\\) \u65f6\uff0c\u4e3amiddle point\u65b9\u6cd5\uff0c\u7cbe\u5ea6\u6bd4\u9690\u5f0f\u79ef\u5206\u53ef\u80fd\u597d\u4e9b \\(\\beta=1\\) \u65f6\uff0c\u5c5e\u4e8e\u540e\u5411\u6b27\u62c9\u6cd5","title":"4. \u79ef\u5206\u5668\u901a\u7528\u516c\u5f0f"},{"location":"simulation/graphics/mss/#5","text":"\u5982\u679c\u6709\u6210\u5343\u4e0a\u4e07\u4e2a\u5f39\u7c27\uff1a \u7a00\u758f\u77e9\u9635 \u5171\u8f6d\u68af\u5ea6 Preconditioning Position-based dynamics (PBD) \u6216\u8005\u4f7f\u7528Fast mass-spring system solver Fast simulation of mass-spring system","title":"5. \u590d\u6742\u5f39\u7c27\u7cfb\u7edf"},{"location":"simulation/graphics/mss/#6-demo","text":"Taichi Open a window Free falling and fixed particles Springs Wall collision Attractor Drag damping Dashpot damping","title":"6. DEMO\u6848\u4f8b"},{"location":"tech-concepts/cicd/","text":"","title":"CI/CD"},{"location":"tech-concepts/mlops/","text":"","title":"Index"},{"location":"tools/git/","text":"Git \u6253\u5370 \u7b80\u6d01\uff1a git log --pretty=oneline \u66f4\u52a0\u7b80\u6d01\uff1a git log --oneline \u6253\u5370HEAD\u6307\u9488\u4fe1\u606f\uff08\u6307\u9488\u56de\u5230\u5386\u53f2\u7248\u672c\u9700\u8981\u56de\u9000\u591a\u5c11\u6b65\uff09\uff1a git reflog \u56de\u9000 git reset --hard <\u7d22\u5f15UUID> git reset --hard HEAD --hard\u4f5c\u7528\uff1a\u672c\u5730\u5e93\u3001\u6682\u5b58\u533a\u3001\u5de5\u4f5c\u533a\u4e09\u4e2a\u72b6\u6001\uff0c\u90fd\u8ddf\u7740HEAD\u6307\u9488\u8d70\uff08\u9891\u7e41\u4f7f\u7528\uff09 --soft\u4f5c\u7528\uff1a\u53ea\u6709\u672c\u5730\u5e93\u72b6\u6001\u53d8\u5316\uff0c\u6682\u5b58\u533a\u3001\u5de5\u4f5c\u533a\u4e0d\u52a8 --mixed\u4f5c\u7528\uff1a\u79fb\u52a8\u672c\u5730\u5e93HEAD\u6307\u9488\u65f6\uff0c\u5de5\u4f5c\u533a\u72b6\u6001\u4e0d\u53d8\uff08\u6587\u4ef6\u72b6\u6001\u4e0d\u56de\u9000\uff09 \u6bd4\u8f83 \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u533a\u522b \u5355\u4e2a\u6587\u4ef6\u7684\u5bf9\u6bd4\uff1a git diff <\u6587\u4ef6\u540d> \u6240\u6709\u6587\u4ef6\u7684\u5bf9\u6bd4\uff1a git diff \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u672c\u5730\u5e93\u7684\u533a\u522b \u4e0e\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\u72b6\u6001\u6bd4\u8f83\uff1a git diff HEAD \u4e0e\u6307\u5b9a\u7684\u72b6\u6001\u8fdb\u884c\u6bd4\u8f83\uff1a git diff <HEAD\u6307\u9488UUID> \u5206\u652f \u67e5\u770b\u5206\u652f\uff1a git branch -v \uff0c\u6709*\u7684\u5730\u65b9\u662f\u5f53\u524d\u5206\u652f \u521b\u5efa\u5206\u652f\uff1a git branch <\u5206\u652f\u540d> \uff0c\u4f8b\u5982 git branch hot-fix \u5207\u6362\u5206\u652f\uff1a git checkout <\u5206\u652f\u540d> \uff0c \u4f8b\u5982 git checkout hot-fix \u5206\u652f\u5408\u5e76\u548c\u51b2\u7a81\u89e3\u51b3 \u8fdb\u5165\u4e3b\u5206\u652f \u5c06hot-fix\u5206\u652f\u5185\u5bb9\u4e0emaster\u5206\u652f\u5408\u5e76 git merge hot-fix \uff1a\u63d0\u793a\u6709\u51b2\u7a81 \u51b2\u7a81\u9700\u8981\u81ea\u5df1\u89e3\u51b3\uff0c\u534f\u5546\u597d\u4ee5\u540e\u624b\u52a8\u4fee\u6539 \u5728master\u4e2dadd+commit\uff0c\u89e3\u51b3\u5408\u5e76\u51b2\u7a81 \u8fdc\u7a0b\u4ed3\u5e93\u5230\u672c\u5730 git clone <\u8fdc\u7a0b\u5e93\u5730\u5740> \u8fdc\u7a0b\u4ed3\u5e93\u672c\u5730\u522b\u540d \u67e5\u770b\u8fdc\u7a0b\u5e93\u522b\u540d\uff1a git remote -v \u7ed9\u4e00\u4e2a\u8fdc\u7a0b\u5e93\u589e\u52a0\u522b\u540d\uff1a git remote add <\u522b\u540d> <\u8fdc\u7a0b\u5e93\u5730\u5740> \uff0c\u4f8b\u5982\uff1a git remote add origin https://github.com/xxxxx.git \u7ecf\u8fc7 git remote -v \u67e5\u770b\u6709\u4e24\u4e2a fetch push \u672c\u5730\u63a8\u9001\u8fdc\u7a0b\u5e93 git push <\u522b\u540d> <\u63a8\u9001\u5230\u54ea\u4e2a\u5206\u652f> \u4f8b\u5982\uff1a git push origin master \u5982\u679c\u8fdc\u7a0b\u4ed3\u5e93\u6ca1\u6709 master \u5206\u652f\uff0c\u5219\u4f1a\u521b\u5efa master \u5206\u652f \u514b\u9686\uff08\u5916\u4eba\u5f00\u53d1\uff09 \u7535\u8111\u4e2d\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e git clone <\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5730\u5740> \u514b\u9686\u64cd\u4f5c\u5b8c\u6210\u4e09\u4e2a\u4e8b\u60c5 \u521d\u59cb\u5316\u672c\u5730\u5e93Git \u8fdc\u7a0b\u5e93\u5185\u5bb9\u5b8c\u6574\u5230\u672c\u5730 \u81ea\u52a8\u521b\u5efa\u8fdc\u7a0b\u4ed3\u5e93\u7684\u522b\u540d git remote -v \u5916\u4eba\u63a8\u9001\u5230Git\u9879\u76ee\uff0c\u5931\u8d25 \u5916\u4eba\u63a8\u9001\u64cd\u4f5c \u547d\u4ee4\u4e5f\u662f git push origin master \uff0c\u4f46\u662f\u5f97\u5148\u52a0\u5165\u56e2\u961f \u5728\u4e3b\u8d26\u53f7\u9080\u8bf7\u4eba\u5458\uff1asettings > manage access \u6dfb\u52a0\u90ae\u4ef6\uff0c\u590d\u5236\u9080\u8bf7\u94fe\u63a5\uff0c\u5c06\u9080\u8bf7\u94fe\u63a5\u53d1\u9001\u7ed9\u5916\u4eba \u5916\u4eba\u6253\u5f00\u94fe\u63a5\uff0c\u63a5\u53d7\u9080\u8bf7 \u5c06\u66f4\u65b0\u7684\u8fdc\u7a0b\u5e93\u66f4\u65b0\u5230\u672c\u5730 pull\u64cd\u4f5c\uff08pull = fetch + merge\uff09 \u64cd\u4f5cfetch+merge \u6293\u53d6\uff08\u8bfb\u53d6\uff09\uff1a git fetch <\u8fdc\u7a0b\u5e93\u522b\u540d> <\u8fdc\u7a0b\u5e93\u5206\u652f\u540d> \u4f8b\u5b50\uff1a git fetch origin master -- \u672c\u5730\u5de5\u4f5c\u533a\u91cc\u7684\u5185\u5bb9\u4e0d\u53d8\uff01 \u53ef\u4ee5\u901a\u8fc7 git checkout origin/master \u5148\u67e5\u770b\u8fdc\u7a0b\u5e93\u5185\u5bb9\u662f\u5426\u6b63\u786e \u7136\u540e\u8fdb\u884c\u5408\u5e76\uff1a \u5207\u6362\u5230\u672c\u5730\u7684master git checkout master \u5c06\u8fdc\u7a0b\u5e93origin/master\u5408\u5e76\u5230\u672c\u5730\u7684master\uff1a git merge origin/master \u64cd\u4f5cpull git pull origin master \u7b49\u540c\u4e8efetch + merge \u533a\u522b fetch+merge: \u4fdd\u9669\u614e\u91cd pull: \u4e0d\u590d\u6742\u7684\u60c5\u51b5 \u591a\u65b9\u5f00\u53d1\u8fdc\u7a0b\u5e93\u51b2\u7a81 \u540c\u65f6\u4fee\u6539\u540c\u6837\u5730\u65b9\u7684\u8bdd\uff0cpush\u4f1a\u5931\u8d25 \u89e3\u51b3\u65b9\u6cd5\uff1a\u5148pull\u6700\u65b0\u7248\u672c\uff0c\u4eba\u4e3a\u4fee\u6539/\u9009\u62e9\u6700\u4f73\u4ee3\u7801\uff0cadd/commit/push \u7ed3\u675f \u8de8\u56e2\u961f\u5f00\u53d1\uff08FORK\uff09 \u516c\u53f8A\u521b\u5efa\u7684\u8fdc\u7a0b\u4ee3\u7801\u5e93 \u516c\u53f8B\u4f7f\u7528fork\uff0c\u590d\u5236\u4e00\u4efd\u5230\u516c\u53f8B\u7684\u8fdc\u7a0b\u4ed3\u5e93\u8fdb\u884c\u5f00\u53d1 \u516c\u53f8B\u5f00\u53d1\u73a9\uff0c\u53d1\u9001pull request\uff08Github\u4e0a\uff09 \u516c\u53f8A\u8fdb\u884c\u5ba1\u6838 \u516c\u53f8A\u8fdb\u884cmerge","title":"Git"},{"location":"tools/git/#git","text":"","title":"Git"},{"location":"tools/git/#_1","text":"\u7b80\u6d01\uff1a git log --pretty=oneline \u66f4\u52a0\u7b80\u6d01\uff1a git log --oneline \u6253\u5370HEAD\u6307\u9488\u4fe1\u606f\uff08\u6307\u9488\u56de\u5230\u5386\u53f2\u7248\u672c\u9700\u8981\u56de\u9000\u591a\u5c11\u6b65\uff09\uff1a git reflog","title":"\u6253\u5370"},{"location":"tools/git/#_2","text":"git reset --hard <\u7d22\u5f15UUID> git reset --hard HEAD --hard\u4f5c\u7528\uff1a\u672c\u5730\u5e93\u3001\u6682\u5b58\u533a\u3001\u5de5\u4f5c\u533a\u4e09\u4e2a\u72b6\u6001\uff0c\u90fd\u8ddf\u7740HEAD\u6307\u9488\u8d70\uff08\u9891\u7e41\u4f7f\u7528\uff09 --soft\u4f5c\u7528\uff1a\u53ea\u6709\u672c\u5730\u5e93\u72b6\u6001\u53d8\u5316\uff0c\u6682\u5b58\u533a\u3001\u5de5\u4f5c\u533a\u4e0d\u52a8 --mixed\u4f5c\u7528\uff1a\u79fb\u52a8\u672c\u5730\u5e93HEAD\u6307\u9488\u65f6\uff0c\u5de5\u4f5c\u533a\u72b6\u6001\u4e0d\u53d8\uff08\u6587\u4ef6\u72b6\u6001\u4e0d\u56de\u9000\uff09","title":"\u56de\u9000"},{"location":"tools/git/#_3","text":"","title":"\u6bd4\u8f83"},{"location":"tools/git/#_4","text":"\u5355\u4e2a\u6587\u4ef6\u7684\u5bf9\u6bd4\uff1a git diff <\u6587\u4ef6\u540d> \u6240\u6709\u6587\u4ef6\u7684\u5bf9\u6bd4\uff1a git diff","title":"\u6bd4\u8f83\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u533a\u522b"},{"location":"tools/git/#_5","text":"\u4e0e\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\u72b6\u6001\u6bd4\u8f83\uff1a git diff HEAD \u4e0e\u6307\u5b9a\u7684\u72b6\u6001\u8fdb\u884c\u6bd4\u8f83\uff1a git diff <HEAD\u6307\u9488UUID>","title":"\u6bd4\u8f83\u6682\u5b58\u533a\u548c\u672c\u5730\u5e93\u7684\u533a\u522b"},{"location":"tools/git/#_6","text":"\u67e5\u770b\u5206\u652f\uff1a git branch -v \uff0c\u6709*\u7684\u5730\u65b9\u662f\u5f53\u524d\u5206\u652f \u521b\u5efa\u5206\u652f\uff1a git branch <\u5206\u652f\u540d> \uff0c\u4f8b\u5982 git branch hot-fix \u5207\u6362\u5206\u652f\uff1a git checkout <\u5206\u652f\u540d> \uff0c \u4f8b\u5982 git checkout hot-fix","title":"\u5206\u652f"},{"location":"tools/git/#_7","text":"\u8fdb\u5165\u4e3b\u5206\u652f \u5c06hot-fix\u5206\u652f\u5185\u5bb9\u4e0emaster\u5206\u652f\u5408\u5e76 git merge hot-fix \uff1a\u63d0\u793a\u6709\u51b2\u7a81 \u51b2\u7a81\u9700\u8981\u81ea\u5df1\u89e3\u51b3\uff0c\u534f\u5546\u597d\u4ee5\u540e\u624b\u52a8\u4fee\u6539 \u5728master\u4e2dadd+commit\uff0c\u89e3\u51b3\u5408\u5e76\u51b2\u7a81","title":"\u5206\u652f\u5408\u5e76\u548c\u51b2\u7a81\u89e3\u51b3"},{"location":"tools/git/#_8","text":"git clone <\u8fdc\u7a0b\u5e93\u5730\u5740>","title":"\u8fdc\u7a0b\u4ed3\u5e93\u5230\u672c\u5730"},{"location":"tools/git/#_9","text":"\u67e5\u770b\u8fdc\u7a0b\u5e93\u522b\u540d\uff1a git remote -v \u7ed9\u4e00\u4e2a\u8fdc\u7a0b\u5e93\u589e\u52a0\u522b\u540d\uff1a git remote add <\u522b\u540d> <\u8fdc\u7a0b\u5e93\u5730\u5740> \uff0c\u4f8b\u5982\uff1a git remote add origin https://github.com/xxxxx.git \u7ecf\u8fc7 git remote -v \u67e5\u770b\u6709\u4e24\u4e2a fetch push","title":"\u8fdc\u7a0b\u4ed3\u5e93\u672c\u5730\u522b\u540d"},{"location":"tools/git/#_10","text":"git push <\u522b\u540d> <\u63a8\u9001\u5230\u54ea\u4e2a\u5206\u652f> \u4f8b\u5982\uff1a git push origin master \u5982\u679c\u8fdc\u7a0b\u4ed3\u5e93\u6ca1\u6709 master \u5206\u652f\uff0c\u5219\u4f1a\u521b\u5efa master \u5206\u652f","title":"\u672c\u5730\u63a8\u9001\u8fdc\u7a0b\u5e93"},{"location":"tools/git/#_11","text":"\u7535\u8111\u4e2d\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e git clone <\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5730\u5740> \u514b\u9686\u64cd\u4f5c\u5b8c\u6210\u4e09\u4e2a\u4e8b\u60c5 \u521d\u59cb\u5316\u672c\u5730\u5e93Git \u8fdc\u7a0b\u5e93\u5185\u5bb9\u5b8c\u6574\u5230\u672c\u5730 \u81ea\u52a8\u521b\u5efa\u8fdc\u7a0b\u4ed3\u5e93\u7684\u522b\u540d git remote -v \u5916\u4eba\u63a8\u9001\u5230Git\u9879\u76ee\uff0c\u5931\u8d25","title":"\u514b\u9686\uff08\u5916\u4eba\u5f00\u53d1\uff09"},{"location":"tools/git/#_12","text":"\u547d\u4ee4\u4e5f\u662f git push origin master \uff0c\u4f46\u662f\u5f97\u5148\u52a0\u5165\u56e2\u961f \u5728\u4e3b\u8d26\u53f7\u9080\u8bf7\u4eba\u5458\uff1asettings > manage access \u6dfb\u52a0\u90ae\u4ef6\uff0c\u590d\u5236\u9080\u8bf7\u94fe\u63a5\uff0c\u5c06\u9080\u8bf7\u94fe\u63a5\u53d1\u9001\u7ed9\u5916\u4eba \u5916\u4eba\u6253\u5f00\u94fe\u63a5\uff0c\u63a5\u53d7\u9080\u8bf7","title":"\u5916\u4eba\u63a8\u9001\u64cd\u4f5c"},{"location":"tools/git/#_13","text":"pull\u64cd\u4f5c\uff08pull = fetch + merge\uff09","title":"\u5c06\u66f4\u65b0\u7684\u8fdc\u7a0b\u5e93\u66f4\u65b0\u5230\u672c\u5730"},{"location":"tools/git/#fetchmerge","text":"\u6293\u53d6\uff08\u8bfb\u53d6\uff09\uff1a git fetch <\u8fdc\u7a0b\u5e93\u522b\u540d> <\u8fdc\u7a0b\u5e93\u5206\u652f\u540d> \u4f8b\u5b50\uff1a git fetch origin master -- \u672c\u5730\u5de5\u4f5c\u533a\u91cc\u7684\u5185\u5bb9\u4e0d\u53d8\uff01 \u53ef\u4ee5\u901a\u8fc7 git checkout origin/master \u5148\u67e5\u770b\u8fdc\u7a0b\u5e93\u5185\u5bb9\u662f\u5426\u6b63\u786e \u7136\u540e\u8fdb\u884c\u5408\u5e76\uff1a \u5207\u6362\u5230\u672c\u5730\u7684master git checkout master \u5c06\u8fdc\u7a0b\u5e93origin/master\u5408\u5e76\u5230\u672c\u5730\u7684master\uff1a git merge origin/master","title":"\u64cd\u4f5cfetch+merge"},{"location":"tools/git/#pull","text":"git pull origin master \u7b49\u540c\u4e8efetch + merge","title":"\u64cd\u4f5cpull"},{"location":"tools/git/#_14","text":"fetch+merge: \u4fdd\u9669\u614e\u91cd pull: \u4e0d\u590d\u6742\u7684\u60c5\u51b5","title":"\u533a\u522b"},{"location":"tools/git/#_15","text":"\u540c\u65f6\u4fee\u6539\u540c\u6837\u5730\u65b9\u7684\u8bdd\uff0cpush\u4f1a\u5931\u8d25 \u89e3\u51b3\u65b9\u6cd5\uff1a\u5148pull\u6700\u65b0\u7248\u672c\uff0c\u4eba\u4e3a\u4fee\u6539/\u9009\u62e9\u6700\u4f73\u4ee3\u7801\uff0cadd/commit/push \u7ed3\u675f","title":"\u591a\u65b9\u5f00\u53d1\u8fdc\u7a0b\u5e93\u51b2\u7a81"},{"location":"tools/git/#fork","text":"\u516c\u53f8A\u521b\u5efa\u7684\u8fdc\u7a0b\u4ee3\u7801\u5e93 \u516c\u53f8B\u4f7f\u7528fork\uff0c\u590d\u5236\u4e00\u4efd\u5230\u516c\u53f8B\u7684\u8fdc\u7a0b\u4ed3\u5e93\u8fdb\u884c\u5f00\u53d1 \u516c\u53f8B\u5f00\u53d1\u73a9\uff0c\u53d1\u9001pull request\uff08Github\u4e0a\uff09 \u516c\u53f8A\u8fdb\u884c\u5ba1\u6838 \u516c\u53f8A\u8fdb\u884cmerge","title":"\u8de8\u56e2\u961f\u5f00\u53d1\uff08FORK\uff09"},{"location":"tools/cmake/tips/","text":"\u5efa\u8bbe\u4e2d... \u521b\u5efacmake_utils\u4e13\u95e8\u7528\u6765\u505a\u5f00\u6e90\u52a8\u6001\u5e93\u7684\u94fe\u63a5 https://cloud.tencent.com/developer/article/1597060","title":"\u5b9e\u7528\u7ecf\u9a8c"},{"location":"tools/cmake/totools/","text":"\u94fe\u63a5\u5de5\u5177 \u76ee\u6807 \u4e86\u89e3\u4e0d\u540c\u5de5\u5177\u7684\u914d\u7f6e\u65b9\u6cd5 \u6316\u5751 SDL2\u548cSDL2_Image \u4f7f\u7528Homebrew \u914d\u7f6e\u5934\u6587\u4ef6\u65f6\u5019\u7684\u5927\u5751 \u5982\u679c\u4ece Homebrew \u7684\u6587\u4ef6\u5939\u4e2d\u627e\u5230sdl2\u548csdl2_image\u4e24\u4e2a\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u5934\u6587\u4ef6\u76ee\u5f55\u53ea\u8bbe\u7f6e\u5230\u4e0a\u4e00\u5c42\u7684\u65f6\u5019\uff1a SDL2: /opt/homebrew/Cellar/sdl2/2.24.0/include/ SDL2_Image: /opt/homebrew/Cellar/sdl2_image/2.6.2/include/ \u5728CPP\u6587\u4ef6\u4e2d\u5f15\u5165\u4e24\u4e2a\u6587\u4ef6\u7684\u4ee3\u7801\u5219\u4e3a\uff1a SDL2: #include SDL2_Image: #include \u8fd9\u4e2a\u65f6\u5019\u4f1a\u62a5\u9519 ...: fatal error: 'SDL.h' file not found \u8fd9\u4e2a\u9519\u8bef\u7684\u539f\u56e0\u597d\u50cf\u662f\uff0c\u5728 SDL_image.h \u8fd9\u4e2a\u5934\u6587\u4ef6\u4e2d\uff0c\u627e\u4e0d\u5230 SDL.h \u8fd9\u4e2a\u5934\u6587\u4ef6\u3002 \u539f\u56e0\u53ef\u80fd\u662f\uff0c\u5728\u5c06\u8fd9\u4e24\u4e2a\u6e90\u6587\u4ef6\u4e00\u8d77\u6784\u5efa\u65f6\uff0c\u81ea\u5df1\u5199\u7684CPP\u5185\u5f15\u5165SDL2\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\u4e3a SDL2/SDL.h \uff0c\u548c SDL_image.h \u4e2d\u5f15\u5165SDL2\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u5bfc\u81f4\u65e0\u6cd5\u627e\u5230\u3002 \u89e3\u51b3\u529e\u6cd5 \u5728Cmake\u4e2d\uff0c\u5f15\u5165\u5934\u6587\u4ef6\u7684\u76ee\u5f55\u8bbe\u7f6e\u5230\u6700\u540e\u4e00\u5c42\uff0c\u4ee5\u4fbf\u4e8eSDL.h\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165 GLFW \u56e0\u4e3a\u81ea\u5df1\u7528\u7684\u662farm\u67b6\u6784\u7684\u7535\u8111\uff0c\u4ee5\u4e0b\u8bb0\u5f55\u4e3a\u4eceglfw\u5b98\u7f51\u4e0b\u8f7d\u9884\u7f16\u8bd1\u7248\u672c\u7684\u8fc7\u7a0b \u4e0b\u8f7d\u9884\u7f16\u8bd1\u7248 \u4e0b\u8f7d\u6587\u4ef6\u4e2d\uff1a \u5934\u6587\u4ef6\u76ee\u5f55: include \u5e93\u6587\u4ef6\u76ee\u5f55: lib-arm64 \u7f16\u5199CMakeLists.txt \u521b\u5efaCPP\u9879\u76ee\u6587\u4ef6\u5939 .h\u5934\u6587\u4ef6\u653e\u5728include .a/.dylib\u9759\u6001\u5e93\u6587\u4ef6\u653e\u5728src cmake_minimum_required ( VERSION 3.0 ) # optional set ( CMAKE_CXX_STANDARD 17 ) project ( GLFW_TEST ) # \u5728CMAKE_CXX_FLAGS\u4e2d\u8ffd\u52a0\u53c2\u6570\uff0c\u7b49\u540c\u4e8e\u5728g++ \u540e\u9762\u8ffd\u52a0\u53c2\u6570 (MacOS\u9700\u8981\u4f7f\u7528) set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -framework Cocoa -framework OpenGL -framework IOKit\" ) # \u5305\u542b\u5934\u6587\u4ef6\u7684\u6587\u4ef6\u5939\uff0c\u5185\u542bglfw3.h\u6587\u4ef6 include_directories ( include ) # \u94fe\u63a5\u5e93\u7684\u6587\u4ef6\u5939\uff0c\u5185\u542b.a/.dylib\u6587\u4ef6 link_directories ( src ) add_executable ( glfw_test main.cpp ) # \u9700\u8981\u94fe\u63a5\u7684\u6587\u4ef6libglfw3.a target_link_libraries ( glfw_test glfw3 ) Eigen Eigen\u5e93\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u4e0d\u9700\u8981\u5f15\u7528\u5934\u6587\u4ef6\u5373\u53ef\u4f7f\u7528\u3002 \u662f\u4e0d\u662f\u6709\u522b\u7684\u529e\u6cd5\uff0c\u518d\u7559\u610f\u4e0b\u3002 \u4e0b\u8f7dEigen\u6587\u4ef6\u5939 \u4e0b\u8f7d\u5b8c\u7684\u6587\u4ef6\u540d\uff0c\u4f8b\u5982\uff1a eigen-3.4.0 \u91cc\u9762\u6709\u4e2a Eigen \u6587\u4ef6\u5939 \u76f4\u63a5\u62f7\u8d1d\u5230\u9879\u76ee\u7684 include \u6587\u4ef6\u52a0\u4e2d \u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5982\u4e0b \u4f8b\u5982\u4f7f\u7528Vector2f\uff0c\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff1a ... #include <Eigen/Core> using namespace Eigen ; ... // Matrix<float, 2, 1> Vector2f; Vector2f A_speedVec ( A -> speedX , A -> speedY ); Vector2f B_speedVec ( B -> speedX , B -> speedY ); \u5b66\u4e60\u53c2\u8003 https://gigi.nullneuron.net/gigilabs/loading-images-in-sdl2-with-sdl_image/","title":"\u94fe\u63a5\u5de5\u5177"},{"location":"tools/cmake/totools/#_1","text":"","title":"\u94fe\u63a5\u5de5\u5177"},{"location":"tools/cmake/totools/#_2","text":"\u4e86\u89e3\u4e0d\u540c\u5de5\u5177\u7684\u914d\u7f6e\u65b9\u6cd5 \u6316\u5751","title":"\u76ee\u6807"},{"location":"tools/cmake/totools/#sdl2sdl2_image","text":"","title":"SDL2\u548cSDL2_Image"},{"location":"tools/cmake/totools/#homebrew","text":"\u914d\u7f6e\u5934\u6587\u4ef6\u65f6\u5019\u7684\u5927\u5751 \u5982\u679c\u4ece Homebrew \u7684\u6587\u4ef6\u5939\u4e2d\u627e\u5230sdl2\u548csdl2_image\u4e24\u4e2a\u6e90\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u5934\u6587\u4ef6\u76ee\u5f55\u53ea\u8bbe\u7f6e\u5230\u4e0a\u4e00\u5c42\u7684\u65f6\u5019\uff1a SDL2: /opt/homebrew/Cellar/sdl2/2.24.0/include/ SDL2_Image: /opt/homebrew/Cellar/sdl2_image/2.6.2/include/ \u5728CPP\u6587\u4ef6\u4e2d\u5f15\u5165\u4e24\u4e2a\u6587\u4ef6\u7684\u4ee3\u7801\u5219\u4e3a\uff1a SDL2: #include SDL2_Image: #include \u8fd9\u4e2a\u65f6\u5019\u4f1a\u62a5\u9519 ...: fatal error: 'SDL.h' file not found \u8fd9\u4e2a\u9519\u8bef\u7684\u539f\u56e0\u597d\u50cf\u662f\uff0c\u5728 SDL_image.h \u8fd9\u4e2a\u5934\u6587\u4ef6\u4e2d\uff0c\u627e\u4e0d\u5230 SDL.h \u8fd9\u4e2a\u5934\u6587\u4ef6\u3002 \u539f\u56e0\u53ef\u80fd\u662f\uff0c\u5728\u5c06\u8fd9\u4e24\u4e2a\u6e90\u6587\u4ef6\u4e00\u8d77\u6784\u5efa\u65f6\uff0c\u81ea\u5df1\u5199\u7684CPP\u5185\u5f15\u5165SDL2\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\u4e3a SDL2/SDL.h \uff0c\u548c SDL_image.h \u4e2d\u5f15\u5165SDL2\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u5bfc\u81f4\u65e0\u6cd5\u627e\u5230\u3002 \u89e3\u51b3\u529e\u6cd5 \u5728Cmake\u4e2d\uff0c\u5f15\u5165\u5934\u6587\u4ef6\u7684\u76ee\u5f55\u8bbe\u7f6e\u5230\u6700\u540e\u4e00\u5c42\uff0c\u4ee5\u4fbf\u4e8eSDL.h\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165","title":"\u4f7f\u7528Homebrew"},{"location":"tools/cmake/totools/#glfw","text":"\u56e0\u4e3a\u81ea\u5df1\u7528\u7684\u662farm\u67b6\u6784\u7684\u7535\u8111\uff0c\u4ee5\u4e0b\u8bb0\u5f55\u4e3a\u4eceglfw\u5b98\u7f51\u4e0b\u8f7d\u9884\u7f16\u8bd1\u7248\u672c\u7684\u8fc7\u7a0b","title":"GLFW"},{"location":"tools/cmake/totools/#_3","text":"\u4e0b\u8f7d\u6587\u4ef6\u4e2d\uff1a \u5934\u6587\u4ef6\u76ee\u5f55: include \u5e93\u6587\u4ef6\u76ee\u5f55: lib-arm64","title":"\u4e0b\u8f7d\u9884\u7f16\u8bd1\u7248"},{"location":"tools/cmake/totools/#cmakeliststxt","text":"\u521b\u5efaCPP\u9879\u76ee\u6587\u4ef6\u5939 .h\u5934\u6587\u4ef6\u653e\u5728include .a/.dylib\u9759\u6001\u5e93\u6587\u4ef6\u653e\u5728src cmake_minimum_required ( VERSION 3.0 ) # optional set ( CMAKE_CXX_STANDARD 17 ) project ( GLFW_TEST ) # \u5728CMAKE_CXX_FLAGS\u4e2d\u8ffd\u52a0\u53c2\u6570\uff0c\u7b49\u540c\u4e8e\u5728g++ \u540e\u9762\u8ffd\u52a0\u53c2\u6570 (MacOS\u9700\u8981\u4f7f\u7528) set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -framework Cocoa -framework OpenGL -framework IOKit\" ) # \u5305\u542b\u5934\u6587\u4ef6\u7684\u6587\u4ef6\u5939\uff0c\u5185\u542bglfw3.h\u6587\u4ef6 include_directories ( include ) # \u94fe\u63a5\u5e93\u7684\u6587\u4ef6\u5939\uff0c\u5185\u542b.a/.dylib\u6587\u4ef6 link_directories ( src ) add_executable ( glfw_test main.cpp ) # \u9700\u8981\u94fe\u63a5\u7684\u6587\u4ef6libglfw3.a target_link_libraries ( glfw_test glfw3 )","title":"\u7f16\u5199CMakeLists.txt"},{"location":"tools/cmake/totools/#eigen","text":"Eigen\u5e93\u6bd4\u8f83\u6709\u610f\u601d\uff0c\u4e0d\u9700\u8981\u5f15\u7528\u5934\u6587\u4ef6\u5373\u53ef\u4f7f\u7528\u3002 \u662f\u4e0d\u662f\u6709\u522b\u7684\u529e\u6cd5\uff0c\u518d\u7559\u610f\u4e0b\u3002","title":"Eigen"},{"location":"tools/cmake/totools/#eigen_1","text":"\u4e0b\u8f7d\u5b8c\u7684\u6587\u4ef6\u540d\uff0c\u4f8b\u5982\uff1a eigen-3.4.0 \u91cc\u9762\u6709\u4e2a Eigen \u6587\u4ef6\u5939 \u76f4\u63a5\u62f7\u8d1d\u5230\u9879\u76ee\u7684 include \u6587\u4ef6\u52a0\u4e2d \u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5982\u4e0b \u4f8b\u5982\u4f7f\u7528Vector2f\uff0c\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff1a ... #include <Eigen/Core> using namespace Eigen ; ... // Matrix<float, 2, 1> Vector2f; Vector2f A_speedVec ( A -> speedX , A -> speedY ); Vector2f B_speedVec ( B -> speedX , B -> speedY );","title":"\u4e0b\u8f7dEigen\u6587\u4ef6\u5939"},{"location":"tools/cmake/totools/#_4","text":"https://gigi.nullneuron.net/gigilabs/loading-images-in-sdl2-with-sdl_image/","title":"\u5b66\u4e60\u53c2\u8003"},{"location":"tools/cmake/workflow/","text":"CMake\u7f16\u8bd1\u5de5\u7a0b 1. \u76ee\u5f55\u7ed3\u6784 \u5728\u9879\u76ee\u4e3b\u76ee\u5f55\u4e0b\u5b58\u5728\u4e00\u4e2aCMakeLists.txt\u6587\u4ef6 2. \u7f16\u8bd1\u89c4\u5219 2.1 \u5b50\u6587\u4ef6\u5939\u5305\u542bCMakeLists.txt \u6b64\u65f6\uff0c\u5b50\u6587\u4ef6\u5939\u7684\u7f16\u8bd1\u89c4\u5219\u5728\u5b50\u6587\u4ef6\u5939\u7684txt\u6587\u4ef6\u4e2d \u5fc5\u987b\u5728\u4e3b\u76ee\u5f55\u7684CMakeLists.txt\u4e2d\u901a\u8fc7add_subdirectory\u6dfb\u52a0\u81ea\u76ee\u5f55 2.2 \u53ea\u6709\u4e00\u4e2aCMakeLists.txt \u6b64\u65f6\uff0c\u53ea\u6709\u4e3b\u76ee\u5f55\u4e0b\u4e00\u4e2aCMakeLists.txt\u6587\u4ef6\uff0c\u5b50\u6587\u4ef6\u5939\u7684\u7f16\u8bd1\u89c4\u5219\u4f53\u73b0\u5728\u4e3b\u76ee\u5f55\u7684txt\u6587\u4ef6\u4e2d 2. \u7f16\u8bd1\u6d41\u7a0b Linux\u4e0bCmake\u6784\u5efaC/C++\u5de5\u7a0b\u7684\u6d41\u7a0b\uff1a \u624b\u52a8\u7f16\u5199CMakeLists.txt\u6587\u4ef6 \u6267\u884c cmake PATH \u547d\u4ee4\u751f\u6210Makefile\uff08PATH\u662f\u9876\u5c42CMakeLists.txt\u6240\u5728\u7684\u76ee\u5f55\uff09 \u6267\u884c make \u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1 3. \u6784\u5efa\u65b9\u5f0f 3.1 \u5185\u90e8\u6784\u5efa in-source build \u5728\u540c\u7ea7\u76ee\u5f55\u4e0b\u4ea7\u751f\u5927\u91cf\u4e2d\u95f4\u6587\u4ef6\uff0c\u8fd9\u4e9b\u5e76\u4e0d\u662f\u6700\u7ec8\u9700\u8981\u7684\uff0c\u6742\u4e71\u65e0\u7ae0 \u4e0d\u63a8\u8350 # \u5185\u90e8\u6784\u5efa # \u5728\u5f53\u524d\u76ee\u5f55\u7f16\u8bd1\u672c\u76ee\u5f55\u7684CMakeLists.txt\uff0c\u751f\u6210Makefile\u548c\u5176\u4ed6\u6587\u4ef6 cmake . # \u6267\u884cmake\u547d\u4ee4\uff0c\u751f\u6210target make 3.2 \u5916\u90e8\u6784\u5efa out-of-source build \u7f16\u8bd1\u8f93\u51fa\u6587\u4ef6\u4e0e\u6e90\u6587\u4ef6\u653e\u5230\u4e0d\u540c\u76ee\u5f55\u4e2d \u63a8\u8350 # \u5916\u90e8\u6784\u5efa # 1. \u521b\u5efabuild\u76ee\u5f55\uff0c\u8fdb\u5165 mkdir build && cd build # 2. \u7f16\u8bd1\u4e0a\u7ea7\u76ee\u5f55\u7684CMakeLists.txt\uff0c\u751f\u6210Makefile\u548c\u5176\u4ed6\u6587\u4ef6 cmake .. # 3. \u751f\u6210target make","title":"CMake\u6d41\u7a0b"},{"location":"tools/cmake/workflow/#cmake","text":"","title":"CMake\u7f16\u8bd1\u5de5\u7a0b"},{"location":"tools/cmake/workflow/#1","text":"\u5728\u9879\u76ee\u4e3b\u76ee\u5f55\u4e0b\u5b58\u5728\u4e00\u4e2aCMakeLists.txt\u6587\u4ef6","title":"1. \u76ee\u5f55\u7ed3\u6784"},{"location":"tools/cmake/workflow/#2","text":"","title":"2. \u7f16\u8bd1\u89c4\u5219"},{"location":"tools/cmake/workflow/#21-cmakeliststxt","text":"\u6b64\u65f6\uff0c\u5b50\u6587\u4ef6\u5939\u7684\u7f16\u8bd1\u89c4\u5219\u5728\u5b50\u6587\u4ef6\u5939\u7684txt\u6587\u4ef6\u4e2d \u5fc5\u987b\u5728\u4e3b\u76ee\u5f55\u7684CMakeLists.txt\u4e2d\u901a\u8fc7add_subdirectory\u6dfb\u52a0\u81ea\u76ee\u5f55","title":"2.1 \u5b50\u6587\u4ef6\u5939\u5305\u542bCMakeLists.txt"},{"location":"tools/cmake/workflow/#22-cmakeliststxt","text":"\u6b64\u65f6\uff0c\u53ea\u6709\u4e3b\u76ee\u5f55\u4e0b\u4e00\u4e2aCMakeLists.txt\u6587\u4ef6\uff0c\u5b50\u6587\u4ef6\u5939\u7684\u7f16\u8bd1\u89c4\u5219\u4f53\u73b0\u5728\u4e3b\u76ee\u5f55\u7684txt\u6587\u4ef6\u4e2d","title":"2.2 \u53ea\u6709\u4e00\u4e2aCMakeLists.txt"},{"location":"tools/cmake/workflow/#2_1","text":"Linux\u4e0bCmake\u6784\u5efaC/C++\u5de5\u7a0b\u7684\u6d41\u7a0b\uff1a \u624b\u52a8\u7f16\u5199CMakeLists.txt\u6587\u4ef6 \u6267\u884c cmake PATH \u547d\u4ee4\u751f\u6210Makefile\uff08PATH\u662f\u9876\u5c42CMakeLists.txt\u6240\u5728\u7684\u76ee\u5f55\uff09 \u6267\u884c make \u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1","title":"2. \u7f16\u8bd1\u6d41\u7a0b"},{"location":"tools/cmake/workflow/#3","text":"","title":"3. \u6784\u5efa\u65b9\u5f0f"},{"location":"tools/cmake/workflow/#31","text":"in-source build \u5728\u540c\u7ea7\u76ee\u5f55\u4e0b\u4ea7\u751f\u5927\u91cf\u4e2d\u95f4\u6587\u4ef6\uff0c\u8fd9\u4e9b\u5e76\u4e0d\u662f\u6700\u7ec8\u9700\u8981\u7684\uff0c\u6742\u4e71\u65e0\u7ae0 \u4e0d\u63a8\u8350 # \u5185\u90e8\u6784\u5efa # \u5728\u5f53\u524d\u76ee\u5f55\u7f16\u8bd1\u672c\u76ee\u5f55\u7684CMakeLists.txt\uff0c\u751f\u6210Makefile\u548c\u5176\u4ed6\u6587\u4ef6 cmake . # \u6267\u884cmake\u547d\u4ee4\uff0c\u751f\u6210target make","title":"3.1 \u5185\u90e8\u6784\u5efa"},{"location":"tools/cmake/workflow/#32","text":"out-of-source build \u7f16\u8bd1\u8f93\u51fa\u6587\u4ef6\u4e0e\u6e90\u6587\u4ef6\u653e\u5230\u4e0d\u540c\u76ee\u5f55\u4e2d \u63a8\u8350 # \u5916\u90e8\u6784\u5efa # 1. \u521b\u5efabuild\u76ee\u5f55\uff0c\u8fdb\u5165 mkdir build && cd build # 2. \u7f16\u8bd1\u4e0a\u7ea7\u76ee\u5f55\u7684CMakeLists.txt\uff0c\u751f\u6210Makefile\u548c\u5176\u4ed6\u6587\u4ef6 cmake .. # 3. \u751f\u6210target make","title":"3.2 \u5916\u90e8\u6784\u5efa"},{"location":"tools/gcp/","text":"","title":"Index"},{"location":"tools/gcp/canary-deploy/","text":"Canary\u90e8\u7f72 \u4f7f\u7528Kubernetes\u548cIstio\u7684Tensorflow\u6a21\u578b \u76ee\u6807 \u4e86\u89e3\u8c37\u6b4c\u4e91\u5e73\u53f0\u4e2dCanary\u90e8\u7f72\u7684\u6b65\u9aa4 \u64cd\u4f5c\u4e00\u4e2aCanary\u90e8\u7f72 \u5de5\u5177 Google Cloud Platform - Google Kubernetes Engine \u96c6\u7fa4 (GKE Cluster) \u5728GKE cluster\u4e2d\u7684Istio add-on TensorFlow Serving ResNet50\u548cResnet101\u6a21\u578b \u6b65\u9aa4 \u521b\u5efaGKE\u96c6\u7fa4\uff0c\u5e76\u4f7f\u7528Istio\u63d2\u4ef6 \u4f7f\u7528TensorFlow Serving\u90e8\u7f72ResNet\u6a21\u578b \u914d\u7f6eIstio\u5165\u53e3\u7f51\u5173 (Istio Ingress Gateway) \u914d\u7f6eIstio\u865a\u62df\u670d\u52a1\u548c\u76ee\u6807\u89c4\u5219 (Istio virtual services and destination rules) \u914d\u7f6e\u57fa\u4e8e\u6743\u91cd\u7684\u8def\u7531 \u914d\u7f6e\u57fa\u4e8e\u5185\u5bb9\u7684\u8def\u7531 1. \u914d\u7f6e 1.1 \u83b7\u53d6\u5b9e\u9a8c\u6587\u4ef6 \u76ee\u7684 \uff1a\u4eceGithub\u83b7\u53d6TFServing Canary\u6587\u4ef6\u5230\u6839\u76ee\u5f55\u4e0b \u7ed3\u679c \uff1a\u521b\u5efa\u7684 /home/student_04_xxx/tfserving-canary \u76ee\u5f55\u53ca\u5176\u6587\u4ef6 cd SRC_REPO = https://github.com/GoogleCloudPlatform/mlops-on-gcp kpt pkg get $SRC_REPO /workshops/mlep-qwiklabs/tfserving-canary-gke tfserving-canary cd tfserving-canary 1.2 \u8ba1\u7b97\u533a\u548c\u96c6\u7fa4 \u76ee\u7684 \uff1a\u5728Google Cloud\u4e2d\u521b\u5efa\u8ba1\u7b97\u533a\uff0c\u914d\u7f6e\u96c6\u7fa4\u540d\u5b57 gcloud config set compute/zone us-central1-f PROJECT_ID = $( gcloud config get-value project ) CLUSTER_NAME = cluster-1 \u76ee\u7684 \uff1a\u5f00\u542f\u4e00\u4e2a\u5e26Istio\u63d2\u4ef6\u7684\u96c6\u7fa4 \u7ed3\u679c\uff1a\u6307\u5b9a project id \u3001 addons=Istio \u3001\u8282\u70b9\u6570\u91cf 3 \u7684\u96c6\u7fa4 gcloud beta container clusters create $CLUSTER_NAME \\ --project = $PROJECT_ID \\ --addons = Istio \\ --istio-config = auth = MTLS_PERMISSIVE \\ --cluster-version = latest \\ --machine-type = n1-standard-4 \\ --num-nodes = 3 1.3 \u83b7\u53d6\u96c6\u7fa4\u8bc1\u4e66 \u76ee\u7684 \uff1a\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4 gcloud container clusters get-credentials $CLUSTER_NAME 2. Istio\u914d\u7f6e\u68c0\u67e5 2.1 \u68c0\u67e5Kubernetes\u670d\u52a1 \u76ee\u7684 \uff1a\u67e5\u770bIstio\u76f8\u5173\u7684Kubernetes\u670d\u52a1\u662f\u5426\u5df2\u7ecf\u90e8\u7f72\uff0c\u5305\u542b\uff1a istio-citadel istio-galley istio-pilot istio-ingressgateway istio-policy istio-sidecar-injector istio-telemetry \u7ed3\u679c \uff1a\u63a7\u5236\u53f0\u6253\u5370\u4fe1\u606f kubectl get service -n istio-system 2.2 \u68c0\u67e5Kubernetes\u7684Pods \u76ee\u7684 \uff1a\u67e5\u770bPods\u662f\u5426\u5df2\u7ecf\u5728Running kubectl get pods -n istio-system 2.3 \u914d\u7f6e\u81ea\u52a8\u6ce8\u5165 \u4e3a\u4e86\u5229\u7528Istio\u7684\u6240\u6709\u529f\u80fd\uff0cIstio\u7f51\u683c\u4e2d\u7684pod\u5fc5\u987b\u8fd0\u884c\u4e00\u4e2aIstio sidecar\u4ee3\u7406\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u5c06Istio sidecar\u6ce8\u5165\u5230pod\u4e2d\uff1a \u624b\u52a8\u4f7f\u7528istioctl\u547d\u4ee4\u6216\u901a\u8fc7\u5728pod\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u542f\u7528\u81ea\u52a8Istio sidecar\u6ce8\u5165\u3002\u624b\u52a8\u6ce8\u5165\u76f4\u63a5\u4fee\u6539\u914d\u7f6e\uff0c\u5982\u90e8\u7f72\uff0c\u5e76\u5c06\u4ee3\u7406\u914d\u7f6e\u6ce8\u5165\u5176\u4e2d\u3002\u5f53\u5728pod\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u542f\u7528\u65f6\uff0c\u81ea\u52a8\u6ce8\u5165\u4f1a\u5728pod\u521b\u5efa\u65f6\u4f7f\u7528\u4e00\u4e2a\u63a5\u7eb3\u63a7\u5236\u5668\u6ce8\u5165\u4ee3\u7406\u914d\u7f6e\u3002 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u5ba4\u4e2d\uff0c\u4f7f\u7528\u7684\u662f\u81ea\u52a8\u4fa7\u8f66\u6ce8\u5165\u3002\u8981\u914d\u7f6e\u81ea\u52a8sidecar\u6ce8\u5165\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 kubectl label namespace default istio-injection = enabled 3. \u90e8\u7f72ResNet50\u6a21\u578b 3.1 \u521b\u5efabucket \u76ee\u7684 \uff1a\u4e3aGoogle Cloud\u521b\u5efa\u4e00\u4e2a\u50a8\u5b58\u7684\u533a\u57df \u7ed3\u679c \uff1a\u53ef\u4ee5\u5f80\u91cc\u9762\u653e\u8d44\u6e90\u4e86 export MODEL_BUCKET = ${ PROJECT_ID } -bucket gsutil mb gs:// ${ MODEL_BUCKET } 3.2 \u62f7\u8d1d \u76ee\u7684 \uff1a\u5c06\u51c6\u5907\u597d\u7684ResNet\u6a21\u578b\u62f7\u8d1d\u5230\u50a8\u5b58\u533a \u7ed3\u679c \uff1aResNet50/101\u4e24\u4e2a\u6a21\u578b\u5b58\u5728\u4e8eGoogle\u5168\u5c40\u8d44\u6e90 gsutil cp -r gs://workshop-datasets/models/resnet_101 gs:// ${ MODEL_BUCKET } gsutil cp -r gs://workshop-datasets/models/resnet_50 gs:// ${ MODEL_BUCKET } 4. \u4f7f\u7528yaml\u8fdb\u884c\u90e8\u7f72 \u4e00\u5171\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a \u521b\u5efa\u4e00\u4e2aKubernetes ConfigMap\uff0c\u76ee\u7684\u662f\u6307\u5411\u6a21\u578b\u5b58\u653e\u7684\u5730\u70b9 \u521b\u5efaKubenertes Deployment\uff0c\u4f7f\u7528TensorFlow Serving\u7684\u955c\u50cf \u90e8\u7f72\u6210\u529f\u540e\uff0c\u521b\u5efaKubernetes Service\uff0c\u76ee\u7684\u662f\u4e3a\u6a21\u578b\u670d\u52a1\u63d0\u4f9b\u63a5\u53e3 4.1 ConfigMap \u4fee\u6539 MODEL_PATH \uff0c\u6307\u5411\u6a21\u578b\u6240\u50a8\u5b58\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc qwiklabs-gcp-03-4b91a600a7a2-bucket \u6307\u7684\u662fStorage\u7684\u8def\u5f84 # YAML\u6587\u4ef6\u622a\u53d6 apiVersion : v1 kind : ConfigMap metadata : name : tfserving-configs data : MODEL_NAME : image_classifier MODEL_PATH : gs://qwiklabs-gcp-03-4b91a600a7a2-bucket/resnet_50 \u7136\u540e\uff0c\u521b\u5efaConfigMap kubectl apply -f tf-serving/configmap-resnet50.yaml 4.2 Deployment \u9700\u8981\u6ce8\u610f\uff0cdeployment\u6709\u4e24\u4e2alabels\uff1a app: image-classifier version: resnet50 \u8fd9\u4e24\u4e2alabels\u5728\u914d\u7f6eIstio\u6d41\u91cf\u8def\u7531(traffic routing)\u65f6==\u975e\u5e38\u91cd\u8981== # YAML\u6587\u4ef6\u622a\u53d6 ... apiVersion : apps/v1 kind : Deployment metadata : name : image-classifier-resnet50 namespace : default labels : app : image-classifier version : resnet50 ... \u521b\u5efadeployment kubectl apply -f tf-serving/deployment-resnet50.yaml \u4e5f\u53ef\u4ee5\u67e5\u770bdeployments\u72b6\u6001 kubectl get deployments 4.3 Service \u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a selector \u6307\u5411 app-classifier \u7684\u610f\u601d\u662f\uff1a\u670d\u52a1\u5c06\u5728\u6240\u6709\u5e26\u6b64 label \u7684pod\u4e0a\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff08\u5728\u90e8\u7f72ResNet50\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9bpods\u6307\u7684\u5c31\u662f\u90e8\u7f72\u4e86ResNet50\u7684pods\uff09 \u670d\u52a1\u7c7b\u578b\u662f ClusterIP \uff0c\u610f\u601d\u5c31\u662f\uff0c\u670d\u52a1\u6240\u66b4\u9732\u7684IP\u53ea\u5728\u96c6\u7fa4\u5185\u53ef\u89c1 # YAML\u6587\u4ef6\u622a\u53d6 apiVersion : v1 kind : Service metadata : name : image-classifier namespace : default labels : app : image-classifier service : image-classifier spec : type : ClusterIP ports : - port : 8500 protocol : TCP name : tf-serving-grpc - port : 8501 protocol : TCP name : tf-serving-http selector : app : image-classifier 5. \u914d\u7f6eIstio 5.1 \u6253\u5f00\u7f51\u5173 \u4f60\u4f7f\u7528Istio Ingress\u7f51\u5173\u6765\u7ba1\u7406\u7f51\u72b6\u7ed3\u6784\u7684\u5165\u7ad9\u548c\u51fa\u7ad9\u6d41\u91cf\uff0c\u8ba9\u4f60\u6307\u5b9a\u54ea\u4e9b\u6d41\u91cf\u8981\u8fdb\u5165\u548c\u79bb\u5f00\u7f51\u72b6\u7ed3\u6784\u3002 \u4e0e\u5176\u4ed6\u63a7\u5236\u6d41\u91cf\u8fdb\u5165\u7cfb\u7edf\u7684\u673a\u5236\u4e0d\u540c\uff0c\u5982Kubernetes Ingress APIs\uff0cIstio\u7f51\u5173\u8ba9\u4f60\u4f7f\u7528Istio\u6d41\u91cf\u8def\u7531\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u3002 tf-serving/gateway.yaml \u7684\u4f5c\u7528\uff1a\u6587\u4ef6\u4e2d\u7684\u7f51\u5173\u6e05\u5355\u5c06\u7f51\u5173\u914d\u7f6e\u4e3a\u4e3aHTTP\u6d41\u91cf\u6253\u5f0080\u7aef\u53e3\u3002 # gateway.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : Gateway metadata : name : image-classifier-gateway spec : selector : istio : ingressgateway servers : - port : number : 80 name : http protocol : HTTP hosts : - \"*\" \u521b\u5efagateway kubectl apply -f tf-serving/gateway.yaml 5.2 \u914d\u7f6e\u865a\u62df\u670d\u52a1\u4ee5\u53ca\u76ee\u7684\u5730\u89c4\u5219 \u73b0\u5728\uff0c\u7f51\u5173\u5df2\u7ecf\u521b\u5efa\uff0c\u4f46\u662fResNet50\u7684\u90e8\u7f72\u8fd8\u4e0d\u80fd\u88ab\u96c6\u7fa4\u5916\u8bbf\u95ee\u3002 Virtual Service \u548c Destination Rule \u865a\u62df\u670d\u52a1\u4ee5\u53ca\u76ee\u7684\u5730\u89c4\u5219\u662fIstio\u6d41\u91cf\u8def\u7531\u529f\u80fd\u7684\u5173\u952e\u6784\u5efa\u5757\u3002\u901a\u8fc7\u865a\u62df\u670d\u52a1\uff0c\u4f60\u53ef\u4ee5\u914d\u7f6e\u8bf7\u6c42\u5982\u4f55\u88ab\u8def\u7531\u5230Istio\u670d\u52a1\u7f51\u4e2d\u7684\u670d\u52a1\u3002\u6bcf\u4e2a\u865a\u62df\u670d\u52a1\u7531\u4e00\u7ec4\u8def\u7531\u89c4\u5219\u7ec4\u6210\uff0c\u8fd9\u4e9b\u89c4\u5219\u6309\u987a\u5e8f\u8fdb\u884c\u8bc4\u4f30\uff0c\u8ba9Istio\u5c06\u6bcf\u4e2a\u7ed9\u5b9a\u7684\u865a\u62df\u670d\u52a1\u8bf7\u6c42\u5339\u914d\u5230\u7f51\u72b6\u7ed3\u6784\u4e2d\u7684\u7279\u5b9a\u771f\u5b9e\u76ee\u7684\u5730\u3002 \u4f60\u5c06\u9996\u5148\u914d\u7f6e\u4e00\u4e2a\u865a\u62df\u670d\u52a1\uff0c\u5c06\u6240\u6709\u901a\u8fc7\u7f51\u517380\u7aef\u53e3\u53d1\u9001\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed98501\u7aef\u53e3\u7684 image-classifier \u3002\u56de\u987e\u4e00\u4e0b\uff0c image-classifier \u670d\u52a1\u88ab\u914d\u7f6e\u4e3a\u5728\u6807\u6709 app: image-classifer \u6807\u7b7e\u7684pod\u4e4b\u95f4\u5b9e\u73b0\u8d1f\u8f7d\u5e73\u8861\u3002 # virtualservice.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - route : - destination : host : image-classifier port : number : 8501 \u521b\u5efa\u865a\u62df\u670d\u52a1 kubectl apply -f tf-serving/virtualservice.yaml 6. \u6d4b\u8bd5ResNet50\u670d\u52a1 \u4e3a\u4e86\u53d1\u9001\u8bf7\u6c42\uff0c\u9700\u8981\u4e00\u4e2a\u4f7f\u7528Istio gateway\u66b4\u9732\u7684\u5916\u90e8IP\u548c\u7aef\u53e3 \u8bbe\u7f6eIP\u548c\u7aef\u53e3 export INGRESS_HOST = $( kubectl -n istio-system get service istio-ingressgateway -o jsonpath = '{.status.loadBalancer.ingress[0].ip}' ) export INGRESS_PORT = $( kubectl -n istio-system get service istio-ingressgateway -o jsonpath = '{.spec.ports[?(@.name==\"http2\")].port}' ) \u8bbe\u7f6egateway\u7684URL export GATEWAY_URL = $INGRESS_HOST : $INGRESS_PORT echo $GATEWAY_URL TensorFlow Serving REST\u7684endpoint\u662f\uff1a http://host:port/v1/models/ ${ MODEL_NAME } [ /versions/ ${ VERSION } | /labels/ ${ LABEL } ] :predict \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cendpoint\u662f http:// $GATEWAY_URL /v1/models/image_classifier:predict. 7. ResNet101\u7684Canary\u90e8\u7f72 7.1 \u90e8\u7f72\u6743\u91cd\u4e3a0\u7684ResNet101 \u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\uff0cdestination rule\u4f7f\u7528 version \u6807\u7b7e\u4f5c\u4e3a\u9009\u62e9\u5668\uff0c\u914d\u7f6e\u4e86 image-classifier \u670d\u52a1\u7684\u4e24\u4e2a\u4e0d\u540c\u5b50\u96c6\uff0c\u4ee5\u533a\u5206ResNet50\u548cResNet101\u7684\u90e8\u7f72\u3002 # destinationrule.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : DestinationRule metadata : name : image-classifier spec : host : image-classifier subsets : - name : resnet101 labels : version : resnet101 - name : resnet50 labels : version : resnet50 destination rule\u5141\u8bb8virtual service\u7684\u4e24\u4e2a\u90e8\u7f72\u4e4b\u95f4\u8def\u7531\u6d41\u91cf \u521b\u5efadestination rule kubectl apply -f tf-serving/destinationrule.yaml \u7136\u540e\uff0c\u91cd\u65b0\u914d\u7f6evirtual service\uff085.2\u8282\u90e8\u7f72\u8fc7\u4e00\u6b21\uff09 \u8fd9\u4e00\u6b21\uff0c\u7ed9 ResNet50 \u7684\u6743\u91cd\u5206\u914d\u7684\u662f100\uff0c\u7ed9 ResNet101 \u5206\u914d\u7684\u6743\u91cd\u662f0 # virtualservice-weight-100.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - route : - destination : host : image-classifier subset : resnet50 port : number : 8501 weight : 100 - destination : host : image-classifier subset : resnet101 port : number : 8501 weight : 0 \u521b\u5efavirtual service kubectl apply -f tf-serving/virtualservice-weight-100.yaml \u7136\u540e\uff0c\u90e8\u7f72ResNet101 \u6b65\u9aa4\u548c\u7b2c4\u8282\u4e00\u6837\uff1a \u66f4\u65b0ConfigMap tf-serving/configmap-resnet101.yaml \u6307\u5411 gs://[YOUR_BUCKET]/resnet_101 location. \u5e94\u7528 tf-serving/configmap-resnet101.yaml \u5e94\u7528 tf-serving/deployment-resnet101.yaml 7.2 \u90e8\u7f72\u6743\u91cd\u4e3a30\u7684ResNet101 \u73b0\u5728\u91cd\u65b0\u914d\u7f6eIstio\u865a\u62df\u670d\u52a1\uff0c\u4f7f\u7528\u52a0\u6743\u8d1f\u8f7d\u5e73\u8861\u5728ResNet50\u548cResNet101\u6a21\u578b\u4e4b\u95f4\u5206\u914d\u6d41\u91cf--70%\u7684\u8bf7\u6c42\u5c06\u8fdb\u5165ResNet50\uff0c30%\u8fdb\u5165ResNet101\u3002 \u914d\u7f6e tf-serving/virtualservice-weight-70.yaml \u6587\u4ef6 # virtualservice-weight-70.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - route : - destination : host : image-classifier subset : resnet50 port : number : 8501 weight : 70 - destination : host : image-classifier subset : resnet101 port : number : 8501 weight : 30 \u5e94\u7528 kubectl apply -f tf-serving/virtualservice-weight-70.yaml \u7136\u540e\uff0c\u5f53\u4f7f\u7528\u8bf7\u6c42\u65f6\uff0c\u670930%\u7684\u6982\u7387\u662fResNet101\u9884\u6d4b\u7684\u7ed3\u679c curl -d @payloads/request-body.json -X POST http:// $GATEWAY_URL /v1/models/image_classifier:predict 8. \u8bf7\u6c42\u5934\u90e8\u4fe1\u606f\u7684Canary\u90e8\u7f72 \u5728\u524d\u9762\u7684\u6b65\u9aa4\u4e2d\uff0c\u4f60\u5b66\u5230\u4e86\u5982\u4f55\u63a7\u5236\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u767e\u5206\u6bd4\u3002Istio\u8def\u7531\u89c4\u5219\u5141\u8bb8\u66f4\u590d\u6742\u7684canary\u6d4b\u8bd5\u573a\u666f\u3002 \u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u4f60\u5c06\u91cd\u65b0\u914d\u7f6e\u865a\u62df\u670d\u52a1\uff0c\u6839\u636e \u8bf7\u6c42\u5934\u5c06\u6d41\u91cf\u8def\u7531\u5230canary\u90e8\u7f72 \u3002\u8fd9\u79cd\u65b9\u6cd5\u5141\u8bb8\u5404\u79cd\u573a\u666f\uff0c\u5305\u62ec\u5c06\u6765\u81ea\u7279\u5b9a\u7528\u6237\u7ec4\u7684\u8bf7\u6c42\u8def\u7531\u5230canary\u53d1\u5e03\u3002\u8ba9\u6211\u4eec\u5047\u8bbe\uff0c\u6765\u81eacanary\u7528\u6237\u7684\u8bf7\u6c42\u5c06\u643a\u5e26\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5934\u6587\u4ef6 user-group \u3002\u5982\u679c\u8fd9\u4e2a\u5934\u88ab\u8bbe\u7f6e\u4e3a canary \uff0c\u8bf7\u6c42\u5c06\u88ab\u8def\u7531\u5230ResNet101\u3002 \u5728 match \u533a\u57df\uff0c\u5b9a\u4e49\u4e86match\u7684\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\uff0c \u5982\u679cheaders\u4e2duser-group\u7684\u5185\u5bb9\u662fcanary \uff0c\u5219\u4f7f\u7528ResNet101\u6a21\u578b\u3002 # virtualservice-focused-routing.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - match : - headers : user-group : exact : canary route : - destination : host : image-classifier subset : resnet101 port : number : 8501 - route : - destination : host : image-classifier subset : resnet50 port : number : 8501 \u5e94\u7528 kubectl apply -f tf-serving/virtualservice-focused-routing.yaml 8.1 \u6d4b\u8bd5\u4e0d\u540c\u8bf7\u6c42 \u5934\u90e8\u4fe1\u606f\u4e0d\u5e26canary curl -d @payloads/request-body.json -X POST http:// $GATEWAY_URL /v1/models/image_classifier:predict \u5934\u90e8\u4fe1\u606f\u5e26canary curl -d @payloads/request-body.json -H \"user-group: canary\" -X POST http:// $GATEWAY_URL /v1/models/image_classifier:predict \u4f7f\u75282\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u4f7f\u7528ResNet101\u6a21\u578b \u5b66\u4e60\u8d44\u6599 Coursera\u7684MLOps\u8bfe\u7a0b Implementing Canary Releases of TensorFlow Model Deployments with Kubernetes and Istio","title":"Canary\u90e8\u7f72"},{"location":"tools/gcp/canary-deploy/#canary","text":"\u4f7f\u7528Kubernetes\u548cIstio\u7684Tensorflow\u6a21\u578b","title":"Canary\u90e8\u7f72"},{"location":"tools/gcp/canary-deploy/#_1","text":"\u4e86\u89e3\u8c37\u6b4c\u4e91\u5e73\u53f0\u4e2dCanary\u90e8\u7f72\u7684\u6b65\u9aa4 \u64cd\u4f5c\u4e00\u4e2aCanary\u90e8\u7f72","title":"\u76ee\u6807"},{"location":"tools/gcp/canary-deploy/#_2","text":"Google Cloud Platform - Google Kubernetes Engine \u96c6\u7fa4 (GKE Cluster) \u5728GKE cluster\u4e2d\u7684Istio add-on TensorFlow Serving ResNet50\u548cResnet101\u6a21\u578b","title":"\u5de5\u5177"},{"location":"tools/gcp/canary-deploy/#_3","text":"\u521b\u5efaGKE\u96c6\u7fa4\uff0c\u5e76\u4f7f\u7528Istio\u63d2\u4ef6 \u4f7f\u7528TensorFlow Serving\u90e8\u7f72ResNet\u6a21\u578b \u914d\u7f6eIstio\u5165\u53e3\u7f51\u5173 (Istio Ingress Gateway) \u914d\u7f6eIstio\u865a\u62df\u670d\u52a1\u548c\u76ee\u6807\u89c4\u5219 (Istio virtual services and destination rules) \u914d\u7f6e\u57fa\u4e8e\u6743\u91cd\u7684\u8def\u7531 \u914d\u7f6e\u57fa\u4e8e\u5185\u5bb9\u7684\u8def\u7531","title":"\u6b65\u9aa4"},{"location":"tools/gcp/canary-deploy/#1","text":"","title":"1. \u914d\u7f6e"},{"location":"tools/gcp/canary-deploy/#11","text":"\u76ee\u7684 \uff1a\u4eceGithub\u83b7\u53d6TFServing Canary\u6587\u4ef6\u5230\u6839\u76ee\u5f55\u4e0b \u7ed3\u679c \uff1a\u521b\u5efa\u7684 /home/student_04_xxx/tfserving-canary \u76ee\u5f55\u53ca\u5176\u6587\u4ef6 cd SRC_REPO = https://github.com/GoogleCloudPlatform/mlops-on-gcp kpt pkg get $SRC_REPO /workshops/mlep-qwiklabs/tfserving-canary-gke tfserving-canary cd tfserving-canary","title":"1.1 \u83b7\u53d6\u5b9e\u9a8c\u6587\u4ef6"},{"location":"tools/gcp/canary-deploy/#12","text":"\u76ee\u7684 \uff1a\u5728Google Cloud\u4e2d\u521b\u5efa\u8ba1\u7b97\u533a\uff0c\u914d\u7f6e\u96c6\u7fa4\u540d\u5b57 gcloud config set compute/zone us-central1-f PROJECT_ID = $( gcloud config get-value project ) CLUSTER_NAME = cluster-1 \u76ee\u7684 \uff1a\u5f00\u542f\u4e00\u4e2a\u5e26Istio\u63d2\u4ef6\u7684\u96c6\u7fa4 \u7ed3\u679c\uff1a\u6307\u5b9a project id \u3001 addons=Istio \u3001\u8282\u70b9\u6570\u91cf 3 \u7684\u96c6\u7fa4 gcloud beta container clusters create $CLUSTER_NAME \\ --project = $PROJECT_ID \\ --addons = Istio \\ --istio-config = auth = MTLS_PERMISSIVE \\ --cluster-version = latest \\ --machine-type = n1-standard-4 \\ --num-nodes = 3","title":"1.2 \u8ba1\u7b97\u533a\u548c\u96c6\u7fa4"},{"location":"tools/gcp/canary-deploy/#13","text":"\u76ee\u7684 \uff1a\u53ef\u4ee5\u4f7f\u7528 kubectl \u547d\u4ee4 gcloud container clusters get-credentials $CLUSTER_NAME","title":"1.3 \u83b7\u53d6\u96c6\u7fa4\u8bc1\u4e66"},{"location":"tools/gcp/canary-deploy/#2-istio","text":"","title":"2. Istio\u914d\u7f6e\u68c0\u67e5"},{"location":"tools/gcp/canary-deploy/#21-kubernetes","text":"\u76ee\u7684 \uff1a\u67e5\u770bIstio\u76f8\u5173\u7684Kubernetes\u670d\u52a1\u662f\u5426\u5df2\u7ecf\u90e8\u7f72\uff0c\u5305\u542b\uff1a istio-citadel istio-galley istio-pilot istio-ingressgateway istio-policy istio-sidecar-injector istio-telemetry \u7ed3\u679c \uff1a\u63a7\u5236\u53f0\u6253\u5370\u4fe1\u606f kubectl get service -n istio-system","title":"2.1 \u68c0\u67e5Kubernetes\u670d\u52a1"},{"location":"tools/gcp/canary-deploy/#22-kubernetespods","text":"\u76ee\u7684 \uff1a\u67e5\u770bPods\u662f\u5426\u5df2\u7ecf\u5728Running kubectl get pods -n istio-system","title":"2.2 \u68c0\u67e5Kubernetes\u7684Pods"},{"location":"tools/gcp/canary-deploy/#23","text":"\u4e3a\u4e86\u5229\u7528Istio\u7684\u6240\u6709\u529f\u80fd\uff0cIstio\u7f51\u683c\u4e2d\u7684pod\u5fc5\u987b\u8fd0\u884c\u4e00\u4e2aIstio sidecar\u4ee3\u7406\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u5c06Istio sidecar\u6ce8\u5165\u5230pod\u4e2d\uff1a \u624b\u52a8\u4f7f\u7528istioctl\u547d\u4ee4\u6216\u901a\u8fc7\u5728pod\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u542f\u7528\u81ea\u52a8Istio sidecar\u6ce8\u5165\u3002\u624b\u52a8\u6ce8\u5165\u76f4\u63a5\u4fee\u6539\u914d\u7f6e\uff0c\u5982\u90e8\u7f72\uff0c\u5e76\u5c06\u4ee3\u7406\u914d\u7f6e\u6ce8\u5165\u5176\u4e2d\u3002\u5f53\u5728pod\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u542f\u7528\u65f6\uff0c\u81ea\u52a8\u6ce8\u5165\u4f1a\u5728pod\u521b\u5efa\u65f6\u4f7f\u7528\u4e00\u4e2a\u63a5\u7eb3\u63a7\u5236\u5668\u6ce8\u5165\u4ee3\u7406\u914d\u7f6e\u3002 \u5728\u8fd9\u4e2a\u5b9e\u9a8c\u5ba4\u4e2d\uff0c\u4f7f\u7528\u7684\u662f\u81ea\u52a8\u4fa7\u8f66\u6ce8\u5165\u3002\u8981\u914d\u7f6e\u81ea\u52a8sidecar\u6ce8\u5165\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 kubectl label namespace default istio-injection = enabled","title":"2.3 \u914d\u7f6e\u81ea\u52a8\u6ce8\u5165"},{"location":"tools/gcp/canary-deploy/#3-resnet50","text":"","title":"3. \u90e8\u7f72ResNet50\u6a21\u578b"},{"location":"tools/gcp/canary-deploy/#31-bucket","text":"\u76ee\u7684 \uff1a\u4e3aGoogle Cloud\u521b\u5efa\u4e00\u4e2a\u50a8\u5b58\u7684\u533a\u57df \u7ed3\u679c \uff1a\u53ef\u4ee5\u5f80\u91cc\u9762\u653e\u8d44\u6e90\u4e86 export MODEL_BUCKET = ${ PROJECT_ID } -bucket gsutil mb gs:// ${ MODEL_BUCKET }","title":"3.1 \u521b\u5efabucket"},{"location":"tools/gcp/canary-deploy/#32","text":"\u76ee\u7684 \uff1a\u5c06\u51c6\u5907\u597d\u7684ResNet\u6a21\u578b\u62f7\u8d1d\u5230\u50a8\u5b58\u533a \u7ed3\u679c \uff1aResNet50/101\u4e24\u4e2a\u6a21\u578b\u5b58\u5728\u4e8eGoogle\u5168\u5c40\u8d44\u6e90 gsutil cp -r gs://workshop-datasets/models/resnet_101 gs:// ${ MODEL_BUCKET } gsutil cp -r gs://workshop-datasets/models/resnet_50 gs:// ${ MODEL_BUCKET }","title":"3.2 \u62f7\u8d1d"},{"location":"tools/gcp/canary-deploy/#4-yaml","text":"\u4e00\u5171\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a \u521b\u5efa\u4e00\u4e2aKubernetes ConfigMap\uff0c\u76ee\u7684\u662f\u6307\u5411\u6a21\u578b\u5b58\u653e\u7684\u5730\u70b9 \u521b\u5efaKubenertes Deployment\uff0c\u4f7f\u7528TensorFlow Serving\u7684\u955c\u50cf \u90e8\u7f72\u6210\u529f\u540e\uff0c\u521b\u5efaKubernetes Service\uff0c\u76ee\u7684\u662f\u4e3a\u6a21\u578b\u670d\u52a1\u63d0\u4f9b\u63a5\u53e3","title":"4. \u4f7f\u7528yaml\u8fdb\u884c\u90e8\u7f72"},{"location":"tools/gcp/canary-deploy/#41-configmap","text":"\u4fee\u6539 MODEL_PATH \uff0c\u6307\u5411\u6a21\u578b\u6240\u50a8\u5b58\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc qwiklabs-gcp-03-4b91a600a7a2-bucket \u6307\u7684\u662fStorage\u7684\u8def\u5f84 # YAML\u6587\u4ef6\u622a\u53d6 apiVersion : v1 kind : ConfigMap metadata : name : tfserving-configs data : MODEL_NAME : image_classifier MODEL_PATH : gs://qwiklabs-gcp-03-4b91a600a7a2-bucket/resnet_50 \u7136\u540e\uff0c\u521b\u5efaConfigMap kubectl apply -f tf-serving/configmap-resnet50.yaml","title":"4.1 ConfigMap"},{"location":"tools/gcp/canary-deploy/#42-deployment","text":"\u9700\u8981\u6ce8\u610f\uff0cdeployment\u6709\u4e24\u4e2alabels\uff1a app: image-classifier version: resnet50 \u8fd9\u4e24\u4e2alabels\u5728\u914d\u7f6eIstio\u6d41\u91cf\u8def\u7531(traffic routing)\u65f6==\u975e\u5e38\u91cd\u8981== # YAML\u6587\u4ef6\u622a\u53d6 ... apiVersion : apps/v1 kind : Deployment metadata : name : image-classifier-resnet50 namespace : default labels : app : image-classifier version : resnet50 ... \u521b\u5efadeployment kubectl apply -f tf-serving/deployment-resnet50.yaml \u4e5f\u53ef\u4ee5\u67e5\u770bdeployments\u72b6\u6001 kubectl get deployments","title":"4.2 Deployment"},{"location":"tools/gcp/canary-deploy/#43-service","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a selector \u6307\u5411 app-classifier \u7684\u610f\u601d\u662f\uff1a\u670d\u52a1\u5c06\u5728\u6240\u6709\u5e26\u6b64 label \u7684pod\u4e0a\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff08\u5728\u90e8\u7f72ResNet50\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9bpods\u6307\u7684\u5c31\u662f\u90e8\u7f72\u4e86ResNet50\u7684pods\uff09 \u670d\u52a1\u7c7b\u578b\u662f ClusterIP \uff0c\u610f\u601d\u5c31\u662f\uff0c\u670d\u52a1\u6240\u66b4\u9732\u7684IP\u53ea\u5728\u96c6\u7fa4\u5185\u53ef\u89c1 # YAML\u6587\u4ef6\u622a\u53d6 apiVersion : v1 kind : Service metadata : name : image-classifier namespace : default labels : app : image-classifier service : image-classifier spec : type : ClusterIP ports : - port : 8500 protocol : TCP name : tf-serving-grpc - port : 8501 protocol : TCP name : tf-serving-http selector : app : image-classifier","title":"4.3 Service"},{"location":"tools/gcp/canary-deploy/#5-istio","text":"","title":"5. \u914d\u7f6eIstio"},{"location":"tools/gcp/canary-deploy/#51","text":"\u4f60\u4f7f\u7528Istio Ingress\u7f51\u5173\u6765\u7ba1\u7406\u7f51\u72b6\u7ed3\u6784\u7684\u5165\u7ad9\u548c\u51fa\u7ad9\u6d41\u91cf\uff0c\u8ba9\u4f60\u6307\u5b9a\u54ea\u4e9b\u6d41\u91cf\u8981\u8fdb\u5165\u548c\u79bb\u5f00\u7f51\u72b6\u7ed3\u6784\u3002 \u4e0e\u5176\u4ed6\u63a7\u5236\u6d41\u91cf\u8fdb\u5165\u7cfb\u7edf\u7684\u673a\u5236\u4e0d\u540c\uff0c\u5982Kubernetes Ingress APIs\uff0cIstio\u7f51\u5173\u8ba9\u4f60\u4f7f\u7528Istio\u6d41\u91cf\u8def\u7531\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u3002 tf-serving/gateway.yaml \u7684\u4f5c\u7528\uff1a\u6587\u4ef6\u4e2d\u7684\u7f51\u5173\u6e05\u5355\u5c06\u7f51\u5173\u914d\u7f6e\u4e3a\u4e3aHTTP\u6d41\u91cf\u6253\u5f0080\u7aef\u53e3\u3002 # gateway.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : Gateway metadata : name : image-classifier-gateway spec : selector : istio : ingressgateway servers : - port : number : 80 name : http protocol : HTTP hosts : - \"*\" \u521b\u5efagateway kubectl apply -f tf-serving/gateway.yaml","title":"5.1 \u6253\u5f00\u7f51\u5173"},{"location":"tools/gcp/canary-deploy/#52","text":"\u73b0\u5728\uff0c\u7f51\u5173\u5df2\u7ecf\u521b\u5efa\uff0c\u4f46\u662fResNet50\u7684\u90e8\u7f72\u8fd8\u4e0d\u80fd\u88ab\u96c6\u7fa4\u5916\u8bbf\u95ee\u3002","title":"5.2 \u914d\u7f6e\u865a\u62df\u670d\u52a1\u4ee5\u53ca\u76ee\u7684\u5730\u89c4\u5219"},{"location":"tools/gcp/canary-deploy/#virtual-service-destination-rule","text":"\u865a\u62df\u670d\u52a1\u4ee5\u53ca\u76ee\u7684\u5730\u89c4\u5219\u662fIstio\u6d41\u91cf\u8def\u7531\u529f\u80fd\u7684\u5173\u952e\u6784\u5efa\u5757\u3002\u901a\u8fc7\u865a\u62df\u670d\u52a1\uff0c\u4f60\u53ef\u4ee5\u914d\u7f6e\u8bf7\u6c42\u5982\u4f55\u88ab\u8def\u7531\u5230Istio\u670d\u52a1\u7f51\u4e2d\u7684\u670d\u52a1\u3002\u6bcf\u4e2a\u865a\u62df\u670d\u52a1\u7531\u4e00\u7ec4\u8def\u7531\u89c4\u5219\u7ec4\u6210\uff0c\u8fd9\u4e9b\u89c4\u5219\u6309\u987a\u5e8f\u8fdb\u884c\u8bc4\u4f30\uff0c\u8ba9Istio\u5c06\u6bcf\u4e2a\u7ed9\u5b9a\u7684\u865a\u62df\u670d\u52a1\u8bf7\u6c42\u5339\u914d\u5230\u7f51\u72b6\u7ed3\u6784\u4e2d\u7684\u7279\u5b9a\u771f\u5b9e\u76ee\u7684\u5730\u3002 \u4f60\u5c06\u9996\u5148\u914d\u7f6e\u4e00\u4e2a\u865a\u62df\u670d\u52a1\uff0c\u5c06\u6240\u6709\u901a\u8fc7\u7f51\u517380\u7aef\u53e3\u53d1\u9001\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed98501\u7aef\u53e3\u7684 image-classifier \u3002\u56de\u987e\u4e00\u4e0b\uff0c image-classifier \u670d\u52a1\u88ab\u914d\u7f6e\u4e3a\u5728\u6807\u6709 app: image-classifer \u6807\u7b7e\u7684pod\u4e4b\u95f4\u5b9e\u73b0\u8d1f\u8f7d\u5e73\u8861\u3002 # virtualservice.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - route : - destination : host : image-classifier port : number : 8501 \u521b\u5efa\u865a\u62df\u670d\u52a1 kubectl apply -f tf-serving/virtualservice.yaml","title":"Virtual Service \u548c Destination Rule"},{"location":"tools/gcp/canary-deploy/#6-resnet50","text":"\u4e3a\u4e86\u53d1\u9001\u8bf7\u6c42\uff0c\u9700\u8981\u4e00\u4e2a\u4f7f\u7528Istio gateway\u66b4\u9732\u7684\u5916\u90e8IP\u548c\u7aef\u53e3 \u8bbe\u7f6eIP\u548c\u7aef\u53e3 export INGRESS_HOST = $( kubectl -n istio-system get service istio-ingressgateway -o jsonpath = '{.status.loadBalancer.ingress[0].ip}' ) export INGRESS_PORT = $( kubectl -n istio-system get service istio-ingressgateway -o jsonpath = '{.spec.ports[?(@.name==\"http2\")].port}' ) \u8bbe\u7f6egateway\u7684URL export GATEWAY_URL = $INGRESS_HOST : $INGRESS_PORT echo $GATEWAY_URL TensorFlow Serving REST\u7684endpoint\u662f\uff1a http://host:port/v1/models/ ${ MODEL_NAME } [ /versions/ ${ VERSION } | /labels/ ${ LABEL } ] :predict \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cendpoint\u662f http:// $GATEWAY_URL /v1/models/image_classifier:predict.","title":"6. \u6d4b\u8bd5ResNet50\u670d\u52a1"},{"location":"tools/gcp/canary-deploy/#7-resnet101canary","text":"","title":"7. ResNet101\u7684Canary\u90e8\u7f72"},{"location":"tools/gcp/canary-deploy/#71-0resnet101","text":"\u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\uff0cdestination rule\u4f7f\u7528 version \u6807\u7b7e\u4f5c\u4e3a\u9009\u62e9\u5668\uff0c\u914d\u7f6e\u4e86 image-classifier \u670d\u52a1\u7684\u4e24\u4e2a\u4e0d\u540c\u5b50\u96c6\uff0c\u4ee5\u533a\u5206ResNet50\u548cResNet101\u7684\u90e8\u7f72\u3002 # destinationrule.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : DestinationRule metadata : name : image-classifier spec : host : image-classifier subsets : - name : resnet101 labels : version : resnet101 - name : resnet50 labels : version : resnet50 destination rule\u5141\u8bb8virtual service\u7684\u4e24\u4e2a\u90e8\u7f72\u4e4b\u95f4\u8def\u7531\u6d41\u91cf \u521b\u5efadestination rule kubectl apply -f tf-serving/destinationrule.yaml \u7136\u540e\uff0c\u91cd\u65b0\u914d\u7f6evirtual service\uff085.2\u8282\u90e8\u7f72\u8fc7\u4e00\u6b21\uff09 \u8fd9\u4e00\u6b21\uff0c\u7ed9 ResNet50 \u7684\u6743\u91cd\u5206\u914d\u7684\u662f100\uff0c\u7ed9 ResNet101 \u5206\u914d\u7684\u6743\u91cd\u662f0 # virtualservice-weight-100.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - route : - destination : host : image-classifier subset : resnet50 port : number : 8501 weight : 100 - destination : host : image-classifier subset : resnet101 port : number : 8501 weight : 0 \u521b\u5efavirtual service kubectl apply -f tf-serving/virtualservice-weight-100.yaml \u7136\u540e\uff0c\u90e8\u7f72ResNet101 \u6b65\u9aa4\u548c\u7b2c4\u8282\u4e00\u6837\uff1a \u66f4\u65b0ConfigMap tf-serving/configmap-resnet101.yaml \u6307\u5411 gs://[YOUR_BUCKET]/resnet_101 location. \u5e94\u7528 tf-serving/configmap-resnet101.yaml \u5e94\u7528 tf-serving/deployment-resnet101.yaml","title":"7.1 \u90e8\u7f72\u6743\u91cd\u4e3a0\u7684ResNet101"},{"location":"tools/gcp/canary-deploy/#72-30resnet101","text":"\u73b0\u5728\u91cd\u65b0\u914d\u7f6eIstio\u865a\u62df\u670d\u52a1\uff0c\u4f7f\u7528\u52a0\u6743\u8d1f\u8f7d\u5e73\u8861\u5728ResNet50\u548cResNet101\u6a21\u578b\u4e4b\u95f4\u5206\u914d\u6d41\u91cf--70%\u7684\u8bf7\u6c42\u5c06\u8fdb\u5165ResNet50\uff0c30%\u8fdb\u5165ResNet101\u3002 \u914d\u7f6e tf-serving/virtualservice-weight-70.yaml \u6587\u4ef6 # virtualservice-weight-70.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - route : - destination : host : image-classifier subset : resnet50 port : number : 8501 weight : 70 - destination : host : image-classifier subset : resnet101 port : number : 8501 weight : 30 \u5e94\u7528 kubectl apply -f tf-serving/virtualservice-weight-70.yaml \u7136\u540e\uff0c\u5f53\u4f7f\u7528\u8bf7\u6c42\u65f6\uff0c\u670930%\u7684\u6982\u7387\u662fResNet101\u9884\u6d4b\u7684\u7ed3\u679c curl -d @payloads/request-body.json -X POST http:// $GATEWAY_URL /v1/models/image_classifier:predict","title":"7.2 \u90e8\u7f72\u6743\u91cd\u4e3a30\u7684ResNet101"},{"location":"tools/gcp/canary-deploy/#8-canary","text":"\u5728\u524d\u9762\u7684\u6b65\u9aa4\u4e2d\uff0c\u4f60\u5b66\u5230\u4e86\u5982\u4f55\u63a7\u5236\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u767e\u5206\u6bd4\u3002Istio\u8def\u7531\u89c4\u5219\u5141\u8bb8\u66f4\u590d\u6742\u7684canary\u6d4b\u8bd5\u573a\u666f\u3002 \u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u4f60\u5c06\u91cd\u65b0\u914d\u7f6e\u865a\u62df\u670d\u52a1\uff0c\u6839\u636e \u8bf7\u6c42\u5934\u5c06\u6d41\u91cf\u8def\u7531\u5230canary\u90e8\u7f72 \u3002\u8fd9\u79cd\u65b9\u6cd5\u5141\u8bb8\u5404\u79cd\u573a\u666f\uff0c\u5305\u62ec\u5c06\u6765\u81ea\u7279\u5b9a\u7528\u6237\u7ec4\u7684\u8bf7\u6c42\u8def\u7531\u5230canary\u53d1\u5e03\u3002\u8ba9\u6211\u4eec\u5047\u8bbe\uff0c\u6765\u81eacanary\u7528\u6237\u7684\u8bf7\u6c42\u5c06\u643a\u5e26\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5934\u6587\u4ef6 user-group \u3002\u5982\u679c\u8fd9\u4e2a\u5934\u88ab\u8bbe\u7f6e\u4e3a canary \uff0c\u8bf7\u6c42\u5c06\u88ab\u8def\u7531\u5230ResNet101\u3002 \u5728 match \u533a\u57df\uff0c\u5b9a\u4e49\u4e86match\u7684\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\uff0c \u5982\u679cheaders\u4e2duser-group\u7684\u5185\u5bb9\u662fcanary \uff0c\u5219\u4f7f\u7528ResNet101\u6a21\u578b\u3002 # virtualservice-focused-routing.yaml\u6587\u4ef6\u622a\u53d6 apiVersion : networking.istio.io/v1alpha3 kind : VirtualService metadata : name : image-classifier spec : hosts : - \"*\" gateways : - image-classifier-gateway http : - match : - headers : user-group : exact : canary route : - destination : host : image-classifier subset : resnet101 port : number : 8501 - route : - destination : host : image-classifier subset : resnet50 port : number : 8501 \u5e94\u7528 kubectl apply -f tf-serving/virtualservice-focused-routing.yaml","title":"8. \u8bf7\u6c42\u5934\u90e8\u4fe1\u606f\u7684Canary\u90e8\u7f72"},{"location":"tools/gcp/canary-deploy/#81","text":"\u5934\u90e8\u4fe1\u606f\u4e0d\u5e26canary curl -d @payloads/request-body.json -X POST http:// $GATEWAY_URL /v1/models/image_classifier:predict \u5934\u90e8\u4fe1\u606f\u5e26canary curl -d @payloads/request-body.json -H \"user-group: canary\" -X POST http:// $GATEWAY_URL /v1/models/image_classifier:predict \u4f7f\u75282\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u4f7f\u7528ResNet101\u6a21\u578b","title":"8.1 \u6d4b\u8bd5\u4e0d\u540c\u8bf7\u6c42"},{"location":"tools/gcp/canary-deploy/#_4","text":"Coursera\u7684MLOps\u8bfe\u7a0b Implementing Canary Releases of TensorFlow Model Deployments with Kubernetes and Istio","title":"\u5b66\u4e60\u8d44\u6599"},{"location":"tools/gcp/tfjob/","text":"TFJob\u90e8\u7f72 \u90e8\u7f72TFJob\u7ec4\u4ef6\u5230Google Kubernetes Engine \u76ee\u6807 \u90e8\u7f72TFJob\u7ec4\u4ef6\u5230Google Kubernetes Engine \u914d\u7f6e\u4f7f\u7528TFJob\u7684multi-worker distributed\u8bad\u7ec3\u4efb\u52a1 \u63d0\u4ea4\u4ee5\u53ca\u89c2\u5bdfTFJob jobs \u6b65\u9aa4 \u521b\u5efa\u8ba1\u7b97\u533a\u3001\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u548c\u96c6\u7fa4 \u83b7\u53d6\u96c6\u7fa4\u8bc1\u4e66 Credentials \u4eceKubeflow\u83b7\u53d6TFJob\u6e05\u5355 \u521b\u5efaKubernetes\u547d\u540d\u7a7a\u95f4\u5e76\u5b89\u88c5\uff08\u7ed9TFJob\u4e00\u4e2a\u53ef\u4ee5host\u7684\u5730\u65b9\uff09 \u521b\u5efa\u4e91\u7aef\u50a8\u5b58 \u5206\u5e03\u5f0f\u8bad\u7ec3\u811a\u672c\u4f1a\u5c06SavedModel\u50a8\u5b58\u5230\u4e00\u4e2a\u4f4d\u7f6e\u3002\u4ee3\u7801\u4e5f\u9700\u8981\u5b58\u653e \u6240\u4ee5\uff0c\u5f00\u4e00\u4e2astorage bucket\uff0c\u4f5c\u4e3aGoogle Cloud\u7684\u5168\u5c40\u8d44\u6e90 \u51c6\u5907TFJob \u4eceGithub\u83b7\u53d6\u8bad\u7ec3\u4ee3\u7801\u548cmanifest\u6a21\u677f \u8bad\u7ec3\u4ee3\u7801\u9700\u8981\u6253\u5305\u5230docker\u955c\u50cf docker\u955c\u50cf\u9700\u8981\u63a8\u9001\u5230\u9879\u76ee\u7684\u5bb9\u5668\u6ce8\u518c \u66f4\u65b0TFJob\u7684manifest tfjob.yaml \u6587\u4ef6 \u5173\u952e\u8981\u5b9a\u4e49tfReplicaSpecs\u4e2d\u7684Worker\u533a\u57df\u5b9a\u4e49pod\u7684\u6570\u91cf \u4e5f\u8981\u5728container\u533a\u57df\u5b9a\u4e49\u5176\u4e2d\u7684\u955c\u50cf\u4f4d\u7f6e \u63d0\u4ea4TFJob \u76d1\u6d4bTFJob \u5b66\u4e60\u8d44\u6599 Cousera MLOps \u8bfe\u7a0b","title":"TFJob\u90e8\u7f72"},{"location":"tools/gcp/tfjob/#tfjob","text":"\u90e8\u7f72TFJob\u7ec4\u4ef6\u5230Google Kubernetes Engine","title":"TFJob\u90e8\u7f72"},{"location":"tools/gcp/tfjob/#_1","text":"\u90e8\u7f72TFJob\u7ec4\u4ef6\u5230Google Kubernetes Engine \u914d\u7f6e\u4f7f\u7528TFJob\u7684multi-worker distributed\u8bad\u7ec3\u4efb\u52a1 \u63d0\u4ea4\u4ee5\u53ca\u89c2\u5bdfTFJob jobs","title":"\u76ee\u6807"},{"location":"tools/gcp/tfjob/#_2","text":"\u521b\u5efa\u8ba1\u7b97\u533a\u3001\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u548c\u96c6\u7fa4 \u83b7\u53d6\u96c6\u7fa4\u8bc1\u4e66 Credentials \u4eceKubeflow\u83b7\u53d6TFJob\u6e05\u5355 \u521b\u5efaKubernetes\u547d\u540d\u7a7a\u95f4\u5e76\u5b89\u88c5\uff08\u7ed9TFJob\u4e00\u4e2a\u53ef\u4ee5host\u7684\u5730\u65b9\uff09 \u521b\u5efa\u4e91\u7aef\u50a8\u5b58 \u5206\u5e03\u5f0f\u8bad\u7ec3\u811a\u672c\u4f1a\u5c06SavedModel\u50a8\u5b58\u5230\u4e00\u4e2a\u4f4d\u7f6e\u3002\u4ee3\u7801\u4e5f\u9700\u8981\u5b58\u653e \u6240\u4ee5\uff0c\u5f00\u4e00\u4e2astorage bucket\uff0c\u4f5c\u4e3aGoogle Cloud\u7684\u5168\u5c40\u8d44\u6e90 \u51c6\u5907TFJob \u4eceGithub\u83b7\u53d6\u8bad\u7ec3\u4ee3\u7801\u548cmanifest\u6a21\u677f \u8bad\u7ec3\u4ee3\u7801\u9700\u8981\u6253\u5305\u5230docker\u955c\u50cf docker\u955c\u50cf\u9700\u8981\u63a8\u9001\u5230\u9879\u76ee\u7684\u5bb9\u5668\u6ce8\u518c \u66f4\u65b0TFJob\u7684manifest tfjob.yaml \u6587\u4ef6 \u5173\u952e\u8981\u5b9a\u4e49tfReplicaSpecs\u4e2d\u7684Worker\u533a\u57df\u5b9a\u4e49pod\u7684\u6570\u91cf \u4e5f\u8981\u5728container\u533a\u57df\u5b9a\u4e49\u5176\u4e2d\u7684\u955c\u50cf\u4f4d\u7f6e \u63d0\u4ea4TFJob \u76d1\u6d4bTFJob","title":"\u6b65\u9aa4"},{"location":"tools/gcp/tfjob/#_3","text":"Cousera MLOps \u8bfe\u7a0b","title":"\u5b66\u4e60\u8d44\u6599"},{"location":"tools/gcp/vertex-ai/","text":"Vertex Pipelines \u76ee\u6807 \u5b66\u4e60\u4f7f\u7528Vertext AI\u96c6\u6210ML\u670d\u52a1\u7684\u6b65\u9aa4 \u4ec0\u4e48\u662fVertext AI Vertex AI\u8de8Google Cloud\u96c6\u6210\u4e86ML\u670d\u52a1 \u4ee5\u524d\uff0cAutoML\u8bad\u7ec3\u6a21\u578b\uff0c\u4e0d\u540c\u7684\u81ea\u5b9a\u4e49\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u5355\u72ec\u7684\u670d\u52a1\u8bbf\u95ee \u73b0\u5728\uff0cVertex AI\u5c06\u4e24\u8005\u7ed3\u5408\u5230\u4e00\u4e2a\u5355\u72ec\u7684API\u3002\u5b83\u4e5f\u5305\u542b\u4e86MLOps\u4ea7\u54c1\uff0c\u4f8b\u5982Vertex Pipelines \u4ece\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5b66\u5230\u5982\u4f55\u4f7f\u7528Vertex Pipelines\u521b\u5efa\u548c\u8fd0\u884cML pipelines\uff1a \u4f7f\u7528Kubeflow Pipeline SDK\u6784\u5efa\u4e00\u4e2a\u53ef\u6269\u5c55\u7684ML pipelines \u521b\u5efa\u548c\u8fd0\u884c\u4e00\u4e2a3\u6b65\u7684\u4f8b\u5b50 \u521b\u5efa\u548c\u8fd0\u884c\u4e00\u4e2a\u8bad\u7ec3\u3001\u8bc4\u4f30\u3001\u90e8\u7f72AutoML\u5206\u7c7b\u6a21\u578b\u7684pipeline \u4f7f\u7528google_cloud_pipeline_components\u5e93\u5185\u5efa\u7684\u7ec4\u4ef6\u4e0eVertex AI\u670d\u52a1\u4e92\u52a8\uff0c \u4f7f\u7528Cloud Scheduler\u8c03\u5ea6pipeline\u4efb\u52a1 1. \u521b\u5efaNotebook \u5728Sidebar\u5bfc\u822a\u680f\u9009\u62e9 Vertext AI > Workbench > Open JupyterLab 2. \u8bbe\u7f6eVertex\u7ba1\u9053 2.1 \u5b89\u88c5\u4f9d\u8d56 \u4ee3\u7801\u4e0e\u542b\u4e49\uff1a # \u5168\u5c40\u53d8\u91cf USER_FLAG = \"--user\" # \u5b89\u88c5google-cloud-apiplatform\u548ckfp google-cloud-piepeline-components ! pip3 install { USER_FLAG } google - cloud - aiplatform == 1.0.0 -- upgrade ! pip3 install { USER_FLAG } kfp google - cloud - pipeline - components == 0.1.1 -- upgrade # \u81ea\u52a8\u91cd\u542fkernel import os if not os . getenv ( \"IS_TESTING\" ): # Automatically restart kernel after installs import IPython app = IPython . Application . instance () app . kernel . do_shutdown ( True ) # \u68c0\u67e5\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0cKFP SDK\u7248\u672c\u5e94\u8be5\u8981\u5927\u4e8e1.6 ! python3 - c \"import kfp; print('KFP SDK version: {} '.format(kfp.__version__))\" ! python3 - c \"import google_cloud_pipeline_components; print('google_cloud_pipeline_components version: {} '.format(google_cloud_pipeline_components.__version__))\" google-cloud-apiplatform KFP google-cloud-pipeline-components 2.2 \u8bbe\u7f6e\u9879\u76eeID\u548cbucket \u5982\u679c\u4e0d\u77e5\u9053\u9879\u76eeID\uff0c\u5219\u6253\u5370\uff1a import os PROJECT_ID = \"\" # Get your Google Cloud project ID from gcloud if not os . getenv ( \"IS_TESTING\" ): shell_output = ! gcloud config list -- format 'value(core.project)' 2 >/ dev / null PROJECT_ID = shell_output [ 0 ] print ( \"Project ID: \" , PROJECT_ID ) \u8bbe\u7f6e BUCKET_NAME \uff0c\u540e\u9762\u8981\u7528\u5230\uff1a BUCKET_NAME = \"gs://\" + PROJECT_ID + \"-bucket\" 2.3 \u5bfc\u5165\u6784\u5efaPipeline\u7684\u4f9d\u8d56 from typing import NamedTuple import kfp from kfp import dsl from kfp.v2 import compiler from kfp.v2.dsl import ( Artifact , Dataset , Input , InputPath , Model , Output , OutputPath , ClassificationMetrics , Metrics , component ) from kfp.v2.google.client import AIPlatformClient from google.cloud import aiplatform from google_cloud_pipeline_components import aiplatform as gcc_aip 2.4 \u8bbe\u7f6e\u5e38\u91cf \u8bbe\u7f6e\u9700\u8981\u7528\u7684\u5e38\u91cf\uff1a PIPELINE_ROOT \u662fCloud Storage\u50a8\u5b58artifacts\u7684\u8def\u5f84 us-central1 \u662f\u521b\u5efa\u4e91\u670d\u52a1\u65f6\u9009\u62e9\u7684region PATH =% env PATH % env PATH = { PATH }: / home / jupyter /. local / bin REGION = \"us-central1\" PIPELINE_ROOT = f \" { BUCKET_NAME } /pipeline_root/\" PIPELINE_ROOT 3. \u4e00\u4e2a\u7b80\u5355\u7684\u7ec3\u4e60 3.1 \u5185\u5bb9\u6458\u8981 \u76ee\u6807\uff1a \u5b66\u4e60\u5982\u4f55\u5728KFP SDK\u91cc\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ec4\u4ef6 \u5b66\u4e60\u5982\u4f55\u8fd0\u884c\u548c\u76d1\u6d4bVertext\u7ba1\u9053 \u5185\u5bb9\uff1a \u529f\u80fd\u7ec4\u4ef6 \uff1a\u521b\u5efa\u4e00\u4e2a product_name() \u8f93\u5165 \uff1a\u4e3a product name \u5904\u7406 \uff1a\u6ca1\u6709\u5904\u7406 \u8f93\u51fa \uff1aproduct name\u7684 string \u529f\u80fd\u7ec4\u4ef6 \uff1a\u521b\u5efa\u4e00\u4e2a emoji() \u8f93\u5165 \uff1a\u8868\u60c5\u5305\u7684 text description \u5904\u7406 \uff1a\u5c06\u8868\u60c5\u5305\u7684\u6587\u672c\u8f6c\u5316\u4e3a\u8868\u60c5\u5305\uff0c\u4f8b\u5982sparkle \u5230 \u8f93\u51fa \uff1a\u8868\u60c5\u5305\uff0c\u4f8b\u5982 \u6253\u5305\u7ec4\u4ef6 \uff1a\u521b\u5efa\u4e00\u4e2a build_sentence() \u8f93\u5165 \uff1a\u524d\u4e24\u4e2a\u529f\u80fd\u51fd\u6570\u7684\u8f93\u51fa \u529f\u80fd \uff1a\u7528\u8fd9\u4e24\u4e2a\u8f93\u51fa\uff08\u5305\u542bemoji\u8868\u60c5\u5305\uff09\u6784\u5efa\u4e00\u4e2a\u53e5\u5b50 \u8f93\u51fa \uff1a\u5e26emoji\u8868\u60c5\u7684\u53e5\u5b50 3.2 \u7ec4\u4ef6\u548c\u51fd\u6570 \u529f\u80fd\u7ec4\u4ef6 product_name() # \u89e3\u91ca\uff1a@component\u88c5\u9970\u5668\u4f5c\u7528\uff1a\u5f53\u6267\u884cpipeline\u65f6\uff0c\u81ea\u52a8\u7f16\u8bd1\u8fd9\u4e2a\u51fd\u6570 # \u89e3\u91ca\uff1abase_image\u662f\u7ec4\u4ef6\u4f1a\u4f7f\u7528\u7684\u5bb9\u5668\u955c\u50cf\u540d # \u89e3\u91ca\uff1aoutput_component_file\u662f\u53ef\u9009\u9879\uff0c\u4f1a\u81ea\u52a8\u751f\u6210yaml\u6587\u4ef6\u3002\u5f53\u9700\u8981\u5206\u4eab\u8fd9\u4e2a\u7ec4\u4ef6\u7ed9\u522b\u4eba\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2ayaml\u6587\u4ef6\u6765\u5bfc\u5165\u7ec4\u4ef6 @component ( base_image = \"python:3.9\" , output_component_file = \"first-component.yaml\" ) def product_name ( text : str ) -> str : return text # \u5206\u4eabyaml\u548c\u5bfc\u5165\u7ec4\u4ef6 product_name_component = kfp . components . load_component_from_file ( './first-component.yaml' ) \u529f\u80fd\u7ec4\u4ef6 emoji() # \u89e3\u91ca\uff1apackages_to_install\u662f\u8fd9\u4e2a\u7ec4\u4ef6\u9700\u8981\u5b89\u88c5\u7684\u5305 # \u89e3\u91ca\uff1a\u8fd9\u4e2a\u7ec4\u4ef6\u8fd4\u56de\u4e00\u4e2aNamedTuple\u4f5c\u4e3a\u8f93\u51fa @component ( packages_to_install = [ \"emoji\" ]) def emoji ( text : str , ) -> NamedTuple ( \"Outputs\" , [ ( \"emoji_text\" , str ), # Return parameters ( \"emoji\" , str ), ], ): import emoji emoji_text = text emoji_str = emoji . emojize ( ':' + emoji_text + ':' , use_aliases = True ) print ( \"output one: {} ; output_two: {} \" . format ( emoji_text , emoji_str )) return ( emoji_text , emoji_str ) \u6253\u5305\u7ec4\u4ef6 build_sentence() @component def build_sentence ( product : str , emoji : str , emojitext : str ) -> str : print ( \"We completed the pipeline, hooray!\" ) end_str = product + \" is \" if len ( emoji ) > 0 : end_str += emoji else : end_str += emojitext return ( end_str ) 3.3 \u7ec4\u4ef6\u5230Pipeline \u6bcf\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u7ec4\u4ef6\u53ef\u4ee5\u4e3aPipeline\u521b\u5efa\u6b65\u9aa4 \u8bbe\u7f6epipeline\u9700\u8981\u4f7f\u7528 @dsl.pipeline \u88c5\u9970\u5668\uff0c\u7ed9\u4e00\u4e2a name \u3001\u4e00\u4e2a description \u4ee5\u53ca\u7ed9\u4e00\u4e2a path \u6765\u5199\u5165pipeline\u6240\u521b\u5efa\u7684artifacts Artifact\u6307\u7684\u662f\u4efb\u4f55pipeline\u8f93\u51fa\u7684\u6587\u4ef6\uff08\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u6587\u4ef6\uff09 # from kfp import dsl @dsl . pipeline ( name = \"hello-world\" , description = \"An intro pipeline\" , pipeline_root = PIPELINE_ROOT , ) # You can change the `text` and `emoji_str` parameters here to update the pipeline output # \u6307\u5b9apipeline\u521d\u59cb\u7684\u8f93\u5165\uff0c\u5b9a\u4e49\u5404\u4e2a\u6b65\u9aa4\u5982\u4f55\u8fde\u63a5 def intro_pipeline ( text : str = \"Vertex Pipelines\" , emoji_str : str = \"sparkles\" ): product_task = product_name ( text ) emoji_task = emoji ( emoji_str ) consumer_task = build_sentence ( product_task . output , emoji_task . outputs [ \"emoji\" ], emoji_task . outputs [ \"emoji_text\" ], ) 3.4 \u7f16\u8bd1\u8fd0\u884cpipeline 3.4.1 \u7f16\u8bd1 \u521b\u5efa\u4e00\u4e2ajson\u6587\u4ef6\uff0c\u9700\u8981\u4f7f\u7528\u5b83\u6765\u8fd0\u884cpipeline # from kfp.v2 import compiler # \u6307\u5b9a\u7528dsl.pipeline\u88c5\u9970\u7684\u7ec4\u4ef6 compiler.Compiler () .compile ( pipeline_func = intro_pipeline, package_path = \"intro_pipeline_job.json\" ) 3.4.2 \u5b9e\u4f8b\u5316API\u5ba2\u6237\u7aef # from kfp.v2.google.client import AIPlatformClient # \u6307\u5b9a\u9879\u76eeID\u548cRegion api_client = AIPlatformClient ( project_id = PROJECT_ID, region = REGION, ) 3.4.3 \u8fd0\u884cpipeline response = api_client.create_run_from_job_spec ( # \u4f7f\u7528\u524d\u9762\u751f\u6210\u7684JSON\u6765\u8fd0\u884cpipeline job_spec_path = \"intro_pipeline_job.json\" , # pipeline_root=PIPELINE_ROOT # this argument is necessary if you did not specify PIPELINE_ROOT as part of the pipeline definition. ) 4. \u521b\u5efa\u7aef\u5230\u7aef\u7684ML\u7ba1\u9053 4.1 \u6a21\u578b\u8bc4\u4f30\u7684\u81ea\u5b9a\u4e49\u7ec4\u4ef6 \u4ee5\u4e0b\u4ee3\u7801\u505a\u4e86\u51e0\u4ef6\u4e8b\u60c5\uff1a \u4ece\u8bad\u7ec3\u7684AutoML\u5206\u7c7b\u6a21\u578b\u83b7\u53d6\u6a21\u578b\u8bc4\u4f30\u7684 metrics \u89e3\u6790 metrics \u5e76\u4e14\u6e32\u67d3\u5230Vertex Pipelines UI \u5c06 metrics \u4e0e\u8bbe\u5b9a\u7684 threshold \u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u786e\u5b9a\u6a21\u578b\u662f\u5426\u5e94\u8be5\u88ab\u90e8\u7f72 @component ( base_image = \"gcr.io/deeplearning-platform-release/tf2-cpu.2-3:latest\" , output_component_file = \"tables_eval_component.yaml\" , # Optional: you can use this to load the component later packages_to_install = [ \"google-cloud-aiplatform\" ], ) def classif_model_eval_metrics ( project : str , location : str , # \"us-central1\", api_endpoint : str , # \"us-central1-aiplatform.googleapis.com\", thresholds_dict_str : str , model : Input [ Model ], metrics : Output [ Metrics ], metricsc : Output [ ClassificationMetrics ], ) -> NamedTuple ( \"Outputs\" , [( \"dep_decision\" , str )]): # Return parameter. \"\"\"This function renders evaluation metrics for an AutoML Tabular classification model. It retrieves the classification model evaluation generated by the AutoML Tabular training process, does some parsing, and uses that info to render the ROC curve and confusion matrix for the model. It also uses given metrics threshold information and compares that to the evaluation results to determine whether the model is sufficiently accurate to deploy. \"\"\" import json import logging from google.cloud import aiplatform # Fetch model eval info def get_eval_info ( client , model_name ): from google.protobuf.json_format import MessageToDict response = client . list_model_evaluations ( parent = model_name ) metrics_list = [] metrics_string_list = [] for evaluation in response : print ( \"model_evaluation\" ) print ( \" name:\" , evaluation . name ) print ( \" metrics_schema_uri:\" , evaluation . metrics_schema_uri ) metrics = MessageToDict ( evaluation . _pb . metrics ) for metric in metrics . keys (): logging . info ( \"metric: %s , value: %s \" , metric , metrics [ metric ]) metrics_str = json . dumps ( metrics ) metrics_list . append ( metrics ) metrics_string_list . append ( metrics_str ) return ( evaluation . name , metrics_list , metrics_string_list , ) # Use the given metrics threshold(s) to determine whether the model is # accurate enough to deploy. def classification_thresholds_check ( metrics_dict , thresholds_dict ): for k , v in thresholds_dict . items (): logging . info ( \"k {} , v {} \" . format ( k , v )) if k in [ \"auRoc\" , \"auPrc\" ]: # higher is better if metrics_dict [ k ] < v : # if under threshold, don't deploy logging . info ( \" {} < {} ; returning False\" . format ( metrics_dict [ k ], v ) ) return False logging . info ( \"threshold checks passed.\" ) return True def log_metrics ( metrics_list , metricsc ): test_confusion_matrix = metrics_list [ 0 ][ \"confusionMatrix\" ] logging . info ( \"rows: %s \" , test_confusion_matrix [ \"rows\" ]) # log the ROC curve fpr = [] tpr = [] thresholds = [] for item in metrics_list [ 0 ][ \"confidenceMetrics\" ]: fpr . append ( item . get ( \"falsePositiveRate\" , 0.0 )) tpr . append ( item . get ( \"recall\" , 0.0 )) thresholds . append ( item . get ( \"confidenceThreshold\" , 0.0 )) print ( f \"fpr: { fpr } \" ) print ( f \"tpr: { tpr } \" ) print ( f \"thresholds: { thresholds } \" ) metricsc . log_roc_curve ( fpr , tpr , thresholds ) # log the confusion matrix annotations = [] for item in test_confusion_matrix [ \"annotationSpecs\" ]: annotations . append ( item [ \"displayName\" ]) logging . info ( \"confusion matrix annotations: %s \" , annotations ) metricsc . log_confusion_matrix ( annotations , test_confusion_matrix [ \"rows\" ], ) # log textual metrics info as well for metric in metrics_list [ 0 ] . keys (): if metric != \"confidenceMetrics\" : val_string = json . dumps ( metrics_list [ 0 ][ metric ]) metrics . log_metric ( metric , val_string ) # metrics.metadata[\"model_type\"] = \"AutoML Tabular classification\" logging . getLogger () . setLevel ( logging . INFO ) aiplatform . init ( project = project ) # extract the model resource name from the input Model Artifact model_resource_path = model . uri . replace ( \"aiplatform://v1/\" , \"\" ) logging . info ( \"model path: %s \" , model_resource_path ) client_options = { \"api_endpoint\" : api_endpoint } # Initialize client that will be used to create and send requests. client = aiplatform . gapic . ModelServiceClient ( client_options = client_options ) eval_name , metrics_list , metrics_str_list = get_eval_info ( client , model_resource_path ) logging . info ( \"got evaluation name: %s \" , eval_name ) logging . info ( \"got metrics list: %s \" , metrics_list ) log_metrics ( metrics_list , metricsc ) thresholds_dict = json . loads ( thresholds_dict_str ) deploy = classification_thresholds_check ( metrics_list [ 0 ], thresholds_dict ) if deploy : dep_decision = \"true\" else : dep_decision = \"false\" logging . info ( \"deployment decision is %s \" , dep_decision ) return ( dep_decision ,) 4.2 Google Cloud\u5185\u7f6e\u7684\u7ec4\u4ef6 \u4f7f\u7528timestamp\u8bbe\u7f6e\u4e00\u4e2a\u5c55\u793a\u540d import time DISPLAY_NAME = 'automl-beans {} ' . format ( str ( int ( time . time ()))) print ( DISPLAY_NAME ) \u4ee5\u4e0b\u4ee3\u7801\u505a\u4e86\u4e00\u4e9b\u4e8b\u60c5\uff1a \u5b9a\u4e49pipeline\u9700\u8981\u7684\u8f93\u5165\u53c2\u6570\uff08\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u5176\u4ed6\u7ec4\u4ef6\u7684\u8f93\u51fa\u65e0\u5173\uff09 \u4e00\u4e9b\u4e0eVertext AI\u4ea4\u4e92\u7684\u5185\u7f6e\u7ec4\u4ef6 TabularDatasetCreateOp \u8f93\u5165\uff1a\u6307\u5b9a\u7684\u6570\u636e\u6e90\uff08\u6765\u81eaCloud Storage\u6216\u8005BigQuery\uff09 \u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u901a\u8fc7BigQuery table URL\u6765\u4f20\u9012\u6570\u636e AutoMLTabularTrainingJobRunOp \u529f\u80fd\uff1a\u4e3a\u8f93\u5165\u7684\u6570\u636e\u5f00\u542fAutoML\u8bad\u7ec3\u5de5\u4f5c \u8f93\u5165\uff1a\u4e00\u4e9b\u914d\u7f6e\u53c2\u6570\u4f8b\u5982\u6a21\u578b\u7c7b\u578b\uff08\u8fd9\u91cc\u662f\u5206\u7c7b\uff09\u3001\u6570\u636e\u5217\u7684\u4e00\u4e9b\u5185\u5bb9\u3001\u5e0c\u671b\u8bad\u7ec3\u591a\u4e45\u3001\u6570\u636e\u6e90\u914d\u7f6e\u7b49\u7b49 ModelDeployOp \u90e8\u7f72\u4e00\u4e2a\u6307\u5b9a\u6a21\u578b\u5230Vertex AI\u7684endpoint \u9700\u8981\u6307\u5b9a\u4e00\u4e9b\u989d\u5916\u914d\u7f6e\u9879\uff0c\u4f8b\u5982endpoint\u7684\u673a\u5668\u7c7b\u578b\u3001\u9879\u76ee\u3001\u6a21\u578b\u7b49 @kfp . dsl . pipeline ( name = \"automl-tab-beans-training-v2\" , pipeline_root = PIPELINE_ROOT ) def pipeline ( bq_source : str = \"bq://aju-dev-demos.beans.beans1\" , display_name : str = DISPLAY_NAME , project : str = PROJECT_ID , gcp_region : str = \"us-central1\" , api_endpoint : str = \"us-central1-aiplatform.googleapis.com\" , thresholds_dict_str : str = '{\"auRoc\": 0.95}' , ): # \u5185\u7f6e\u7ec4\u4ef6 TabularDatasetCreateOp dataset_create_op = gcc_aip . TabularDatasetCreateOp ( project = project , display_name = display_name , bq_source = bq_source ) # \u5185\u7f6e\u7ec4\u4ef6 AutoMLTabularTrainingJobRunOp training_op = gcc_aip . AutoMLTabularTrainingJobRunOp ( project = project , display_name = display_name , optimization_prediction_type = \"classification\" , budget_milli_node_hours = 1000 , column_transformations = [ { \"numeric\" : { \"column_name\" : \"Area\" }}, { \"numeric\" : { \"column_name\" : \"Perimeter\" }}, { \"numeric\" : { \"column_name\" : \"MajorAxisLength\" }}, { \"numeric\" : { \"column_name\" : \"MinorAxisLength\" }}, { \"numeric\" : { \"column_name\" : \"AspectRation\" }}, { \"numeric\" : { \"column_name\" : \"Eccentricity\" }}, { \"numeric\" : { \"column_name\" : \"ConvexArea\" }}, { \"numeric\" : { \"column_name\" : \"EquivDiameter\" }}, { \"numeric\" : { \"column_name\" : \"Extent\" }}, { \"numeric\" : { \"column_name\" : \"Solidity\" }}, { \"numeric\" : { \"column_name\" : \"roundness\" }}, { \"numeric\" : { \"column_name\" : \"Compactness\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor1\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor2\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor3\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor4\" }}, { \"categorical\" : { \"column_name\" : \"Class\" }}, ], dataset = dataset_create_op . outputs [ \"dataset\" ], target_column = \"Class\" , ) model_eval_task = classif_model_eval_metrics ( project , gcp_region , api_endpoint , thresholds_dict_str , training_op . outputs [ \"model\" ], ) with dsl . Condition ( model_eval_task . outputs [ \"dep_decision\" ] == \"true\" , name = \"deploy_decision\" , ): # \u5185\u7f6e\u7ec4\u4ef6 ModelDeployOp deploy_op = gcc_aip . ModelDeployOp ( # noqa: F841 model = training_op . outputs [ \"model\" ], project = project , machine_type = \"n1-standard-4\" , ) 4.3 \u7f16\u8bd1\u8fd0\u884cML\u7ba1\u9053 \u7f16\u8bd1\uff1a compiler.Compiler () .compile ( pipeline_func = pipeline, package_path = \"tab_classif_pipeline.json\" ) \u5f00\u542fpipeline response = api_client . create_run_from_job_spec ( \"tab_classif_pipeline.json\" , pipeline_root = PIPELINE_ROOT , parameter_values = { \"project\" : PROJECT_ID , \"display_name\" : DISPLAY_NAME } ) 5. \u5bf9\u6bd4\u6307\u6807 \u5982\u679c\u8fd0\u884c\u4e86\u8fd9\u4e2apipeline\u591a\u6b21\uff0c\u4f1a\u5e0c\u671b\u5bf9\u6bd4\u4e0d\u540c\u7684metrics \u53ef\u4ee5\u4f7f\u7528 aiplatform.get_pipeline_df() \u65b9\u6cd5\u6765\u8bbf\u95eemetadata \u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u53ef\u4ee5\u83b7\u53d6pipeline\u7684\u4e00\u4e2aDataFrame pipeline_df = aiplatform . get_pipeline_df ( pipeline = \"automl-tab-beans-training-v2\" ) small_pipeline_df = pipeline_df . head ( 2 ) small_pipeline_df \u5b66\u4e60\u8d44\u6599 Cousera MLOps\u8bfe\u7a0b","title":"Vertext AI"},{"location":"tools/gcp/vertex-ai/#vertex-pipelines","text":"","title":"Vertex Pipelines"},{"location":"tools/gcp/vertex-ai/#_1","text":"\u5b66\u4e60\u4f7f\u7528Vertext AI\u96c6\u6210ML\u670d\u52a1\u7684\u6b65\u9aa4","title":"\u76ee\u6807"},{"location":"tools/gcp/vertex-ai/#vertext-ai","text":"Vertex AI\u8de8Google Cloud\u96c6\u6210\u4e86ML\u670d\u52a1 \u4ee5\u524d\uff0cAutoML\u8bad\u7ec3\u6a21\u578b\uff0c\u4e0d\u540c\u7684\u81ea\u5b9a\u4e49\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u5355\u72ec\u7684\u670d\u52a1\u8bbf\u95ee \u73b0\u5728\uff0cVertex AI\u5c06\u4e24\u8005\u7ed3\u5408\u5230\u4e00\u4e2a\u5355\u72ec\u7684API\u3002\u5b83\u4e5f\u5305\u542b\u4e86MLOps\u4ea7\u54c1\uff0c\u4f8b\u5982Vertex Pipelines \u4ece\u8fd9\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5b66\u5230\u5982\u4f55\u4f7f\u7528Vertex Pipelines\u521b\u5efa\u548c\u8fd0\u884cML pipelines\uff1a \u4f7f\u7528Kubeflow Pipeline SDK\u6784\u5efa\u4e00\u4e2a\u53ef\u6269\u5c55\u7684ML pipelines \u521b\u5efa\u548c\u8fd0\u884c\u4e00\u4e2a3\u6b65\u7684\u4f8b\u5b50 \u521b\u5efa\u548c\u8fd0\u884c\u4e00\u4e2a\u8bad\u7ec3\u3001\u8bc4\u4f30\u3001\u90e8\u7f72AutoML\u5206\u7c7b\u6a21\u578b\u7684pipeline \u4f7f\u7528google_cloud_pipeline_components\u5e93\u5185\u5efa\u7684\u7ec4\u4ef6\u4e0eVertex AI\u670d\u52a1\u4e92\u52a8\uff0c \u4f7f\u7528Cloud Scheduler\u8c03\u5ea6pipeline\u4efb\u52a1","title":"\u4ec0\u4e48\u662fVertext AI"},{"location":"tools/gcp/vertex-ai/#1-notebook","text":"\u5728Sidebar\u5bfc\u822a\u680f\u9009\u62e9 Vertext AI > Workbench > Open JupyterLab","title":"1. \u521b\u5efaNotebook"},{"location":"tools/gcp/vertex-ai/#2-vertex","text":"","title":"2. \u8bbe\u7f6eVertex\u7ba1\u9053"},{"location":"tools/gcp/vertex-ai/#21","text":"\u4ee3\u7801\u4e0e\u542b\u4e49\uff1a # \u5168\u5c40\u53d8\u91cf USER_FLAG = \"--user\" # \u5b89\u88c5google-cloud-apiplatform\u548ckfp google-cloud-piepeline-components ! pip3 install { USER_FLAG } google - cloud - aiplatform == 1.0.0 -- upgrade ! pip3 install { USER_FLAG } kfp google - cloud - pipeline - components == 0.1.1 -- upgrade # \u81ea\u52a8\u91cd\u542fkernel import os if not os . getenv ( \"IS_TESTING\" ): # Automatically restart kernel after installs import IPython app = IPython . Application . instance () app . kernel . do_shutdown ( True ) # \u68c0\u67e5\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0cKFP SDK\u7248\u672c\u5e94\u8be5\u8981\u5927\u4e8e1.6 ! python3 - c \"import kfp; print('KFP SDK version: {} '.format(kfp.__version__))\" ! python3 - c \"import google_cloud_pipeline_components; print('google_cloud_pipeline_components version: {} '.format(google_cloud_pipeline_components.__version__))\" google-cloud-apiplatform KFP google-cloud-pipeline-components","title":"2.1 \u5b89\u88c5\u4f9d\u8d56"},{"location":"tools/gcp/vertex-ai/#22-idbucket","text":"\u5982\u679c\u4e0d\u77e5\u9053\u9879\u76eeID\uff0c\u5219\u6253\u5370\uff1a import os PROJECT_ID = \"\" # Get your Google Cloud project ID from gcloud if not os . getenv ( \"IS_TESTING\" ): shell_output = ! gcloud config list -- format 'value(core.project)' 2 >/ dev / null PROJECT_ID = shell_output [ 0 ] print ( \"Project ID: \" , PROJECT_ID ) \u8bbe\u7f6e BUCKET_NAME \uff0c\u540e\u9762\u8981\u7528\u5230\uff1a BUCKET_NAME = \"gs://\" + PROJECT_ID + \"-bucket\"","title":"2.2 \u8bbe\u7f6e\u9879\u76eeID\u548cbucket"},{"location":"tools/gcp/vertex-ai/#23-pipeline","text":"from typing import NamedTuple import kfp from kfp import dsl from kfp.v2 import compiler from kfp.v2.dsl import ( Artifact , Dataset , Input , InputPath , Model , Output , OutputPath , ClassificationMetrics , Metrics , component ) from kfp.v2.google.client import AIPlatformClient from google.cloud import aiplatform from google_cloud_pipeline_components import aiplatform as gcc_aip","title":"2.3 \u5bfc\u5165\u6784\u5efaPipeline\u7684\u4f9d\u8d56"},{"location":"tools/gcp/vertex-ai/#24","text":"\u8bbe\u7f6e\u9700\u8981\u7528\u7684\u5e38\u91cf\uff1a PIPELINE_ROOT \u662fCloud Storage\u50a8\u5b58artifacts\u7684\u8def\u5f84 us-central1 \u662f\u521b\u5efa\u4e91\u670d\u52a1\u65f6\u9009\u62e9\u7684region PATH =% env PATH % env PATH = { PATH }: / home / jupyter /. local / bin REGION = \"us-central1\" PIPELINE_ROOT = f \" { BUCKET_NAME } /pipeline_root/\" PIPELINE_ROOT","title":"2.4 \u8bbe\u7f6e\u5e38\u91cf"},{"location":"tools/gcp/vertex-ai/#3","text":"","title":"3. \u4e00\u4e2a\u7b80\u5355\u7684\u7ec3\u4e60"},{"location":"tools/gcp/vertex-ai/#31","text":"\u76ee\u6807\uff1a \u5b66\u4e60\u5982\u4f55\u5728KFP SDK\u91cc\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u7ec4\u4ef6 \u5b66\u4e60\u5982\u4f55\u8fd0\u884c\u548c\u76d1\u6d4bVertext\u7ba1\u9053 \u5185\u5bb9\uff1a \u529f\u80fd\u7ec4\u4ef6 \uff1a\u521b\u5efa\u4e00\u4e2a product_name() \u8f93\u5165 \uff1a\u4e3a product name \u5904\u7406 \uff1a\u6ca1\u6709\u5904\u7406 \u8f93\u51fa \uff1aproduct name\u7684 string \u529f\u80fd\u7ec4\u4ef6 \uff1a\u521b\u5efa\u4e00\u4e2a emoji() \u8f93\u5165 \uff1a\u8868\u60c5\u5305\u7684 text description \u5904\u7406 \uff1a\u5c06\u8868\u60c5\u5305\u7684\u6587\u672c\u8f6c\u5316\u4e3a\u8868\u60c5\u5305\uff0c\u4f8b\u5982sparkle \u5230 \u8f93\u51fa \uff1a\u8868\u60c5\u5305\uff0c\u4f8b\u5982 \u6253\u5305\u7ec4\u4ef6 \uff1a\u521b\u5efa\u4e00\u4e2a build_sentence() \u8f93\u5165 \uff1a\u524d\u4e24\u4e2a\u529f\u80fd\u51fd\u6570\u7684\u8f93\u51fa \u529f\u80fd \uff1a\u7528\u8fd9\u4e24\u4e2a\u8f93\u51fa\uff08\u5305\u542bemoji\u8868\u60c5\u5305\uff09\u6784\u5efa\u4e00\u4e2a\u53e5\u5b50 \u8f93\u51fa \uff1a\u5e26emoji\u8868\u60c5\u7684\u53e5\u5b50","title":"3.1 \u5185\u5bb9\u6458\u8981"},{"location":"tools/gcp/vertex-ai/#32","text":"","title":"3.2 \u7ec4\u4ef6\u548c\u51fd\u6570"},{"location":"tools/gcp/vertex-ai/#product_name","text":"# \u89e3\u91ca\uff1a@component\u88c5\u9970\u5668\u4f5c\u7528\uff1a\u5f53\u6267\u884cpipeline\u65f6\uff0c\u81ea\u52a8\u7f16\u8bd1\u8fd9\u4e2a\u51fd\u6570 # \u89e3\u91ca\uff1abase_image\u662f\u7ec4\u4ef6\u4f1a\u4f7f\u7528\u7684\u5bb9\u5668\u955c\u50cf\u540d # \u89e3\u91ca\uff1aoutput_component_file\u662f\u53ef\u9009\u9879\uff0c\u4f1a\u81ea\u52a8\u751f\u6210yaml\u6587\u4ef6\u3002\u5f53\u9700\u8981\u5206\u4eab\u8fd9\u4e2a\u7ec4\u4ef6\u7ed9\u522b\u4eba\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2ayaml\u6587\u4ef6\u6765\u5bfc\u5165\u7ec4\u4ef6 @component ( base_image = \"python:3.9\" , output_component_file = \"first-component.yaml\" ) def product_name ( text : str ) -> str : return text # \u5206\u4eabyaml\u548c\u5bfc\u5165\u7ec4\u4ef6 product_name_component = kfp . components . load_component_from_file ( './first-component.yaml' )","title":"\u529f\u80fd\u7ec4\u4ef6 product_name()"},{"location":"tools/gcp/vertex-ai/#emoji","text":"# \u89e3\u91ca\uff1apackages_to_install\u662f\u8fd9\u4e2a\u7ec4\u4ef6\u9700\u8981\u5b89\u88c5\u7684\u5305 # \u89e3\u91ca\uff1a\u8fd9\u4e2a\u7ec4\u4ef6\u8fd4\u56de\u4e00\u4e2aNamedTuple\u4f5c\u4e3a\u8f93\u51fa @component ( packages_to_install = [ \"emoji\" ]) def emoji ( text : str , ) -> NamedTuple ( \"Outputs\" , [ ( \"emoji_text\" , str ), # Return parameters ( \"emoji\" , str ), ], ): import emoji emoji_text = text emoji_str = emoji . emojize ( ':' + emoji_text + ':' , use_aliases = True ) print ( \"output one: {} ; output_two: {} \" . format ( emoji_text , emoji_str )) return ( emoji_text , emoji_str )","title":"\u529f\u80fd\u7ec4\u4ef6 emoji()"},{"location":"tools/gcp/vertex-ai/#build_sentence","text":"@component def build_sentence ( product : str , emoji : str , emojitext : str ) -> str : print ( \"We completed the pipeline, hooray!\" ) end_str = product + \" is \" if len ( emoji ) > 0 : end_str += emoji else : end_str += emojitext return ( end_str )","title":"\u6253\u5305\u7ec4\u4ef6 build_sentence()"},{"location":"tools/gcp/vertex-ai/#33-pipeline","text":"\u6bcf\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u7ec4\u4ef6\u53ef\u4ee5\u4e3aPipeline\u521b\u5efa\u6b65\u9aa4 \u8bbe\u7f6epipeline\u9700\u8981\u4f7f\u7528 @dsl.pipeline \u88c5\u9970\u5668\uff0c\u7ed9\u4e00\u4e2a name \u3001\u4e00\u4e2a description \u4ee5\u53ca\u7ed9\u4e00\u4e2a path \u6765\u5199\u5165pipeline\u6240\u521b\u5efa\u7684artifacts Artifact\u6307\u7684\u662f\u4efb\u4f55pipeline\u8f93\u51fa\u7684\u6587\u4ef6\uff08\u8fd9\u4e2a\u7ec3\u4e60\u4e2d\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u6587\u4ef6\uff09 # from kfp import dsl @dsl . pipeline ( name = \"hello-world\" , description = \"An intro pipeline\" , pipeline_root = PIPELINE_ROOT , ) # You can change the `text` and `emoji_str` parameters here to update the pipeline output # \u6307\u5b9apipeline\u521d\u59cb\u7684\u8f93\u5165\uff0c\u5b9a\u4e49\u5404\u4e2a\u6b65\u9aa4\u5982\u4f55\u8fde\u63a5 def intro_pipeline ( text : str = \"Vertex Pipelines\" , emoji_str : str = \"sparkles\" ): product_task = product_name ( text ) emoji_task = emoji ( emoji_str ) consumer_task = build_sentence ( product_task . output , emoji_task . outputs [ \"emoji\" ], emoji_task . outputs [ \"emoji_text\" ], )","title":"3.3 \u7ec4\u4ef6\u5230Pipeline"},{"location":"tools/gcp/vertex-ai/#34-pipeline","text":"","title":"3.4 \u7f16\u8bd1\u8fd0\u884cpipeline"},{"location":"tools/gcp/vertex-ai/#341","text":"\u521b\u5efa\u4e00\u4e2ajson\u6587\u4ef6\uff0c\u9700\u8981\u4f7f\u7528\u5b83\u6765\u8fd0\u884cpipeline # from kfp.v2 import compiler # \u6307\u5b9a\u7528dsl.pipeline\u88c5\u9970\u7684\u7ec4\u4ef6 compiler.Compiler () .compile ( pipeline_func = intro_pipeline, package_path = \"intro_pipeline_job.json\" )","title":"3.4.1 \u7f16\u8bd1"},{"location":"tools/gcp/vertex-ai/#342-api","text":"# from kfp.v2.google.client import AIPlatformClient # \u6307\u5b9a\u9879\u76eeID\u548cRegion api_client = AIPlatformClient ( project_id = PROJECT_ID, region = REGION, )","title":"3.4.2 \u5b9e\u4f8b\u5316API\u5ba2\u6237\u7aef"},{"location":"tools/gcp/vertex-ai/#343-pipeline","text":"response = api_client.create_run_from_job_spec ( # \u4f7f\u7528\u524d\u9762\u751f\u6210\u7684JSON\u6765\u8fd0\u884cpipeline job_spec_path = \"intro_pipeline_job.json\" , # pipeline_root=PIPELINE_ROOT # this argument is necessary if you did not specify PIPELINE_ROOT as part of the pipeline definition. )","title":"3.4.3 \u8fd0\u884cpipeline"},{"location":"tools/gcp/vertex-ai/#4-ml","text":"","title":"4. \u521b\u5efa\u7aef\u5230\u7aef\u7684ML\u7ba1\u9053"},{"location":"tools/gcp/vertex-ai/#41","text":"\u4ee5\u4e0b\u4ee3\u7801\u505a\u4e86\u51e0\u4ef6\u4e8b\u60c5\uff1a \u4ece\u8bad\u7ec3\u7684AutoML\u5206\u7c7b\u6a21\u578b\u83b7\u53d6\u6a21\u578b\u8bc4\u4f30\u7684 metrics \u89e3\u6790 metrics \u5e76\u4e14\u6e32\u67d3\u5230Vertex Pipelines UI \u5c06 metrics \u4e0e\u8bbe\u5b9a\u7684 threshold \u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u786e\u5b9a\u6a21\u578b\u662f\u5426\u5e94\u8be5\u88ab\u90e8\u7f72 @component ( base_image = \"gcr.io/deeplearning-platform-release/tf2-cpu.2-3:latest\" , output_component_file = \"tables_eval_component.yaml\" , # Optional: you can use this to load the component later packages_to_install = [ \"google-cloud-aiplatform\" ], ) def classif_model_eval_metrics ( project : str , location : str , # \"us-central1\", api_endpoint : str , # \"us-central1-aiplatform.googleapis.com\", thresholds_dict_str : str , model : Input [ Model ], metrics : Output [ Metrics ], metricsc : Output [ ClassificationMetrics ], ) -> NamedTuple ( \"Outputs\" , [( \"dep_decision\" , str )]): # Return parameter. \"\"\"This function renders evaluation metrics for an AutoML Tabular classification model. It retrieves the classification model evaluation generated by the AutoML Tabular training process, does some parsing, and uses that info to render the ROC curve and confusion matrix for the model. It also uses given metrics threshold information and compares that to the evaluation results to determine whether the model is sufficiently accurate to deploy. \"\"\" import json import logging from google.cloud import aiplatform # Fetch model eval info def get_eval_info ( client , model_name ): from google.protobuf.json_format import MessageToDict response = client . list_model_evaluations ( parent = model_name ) metrics_list = [] metrics_string_list = [] for evaluation in response : print ( \"model_evaluation\" ) print ( \" name:\" , evaluation . name ) print ( \" metrics_schema_uri:\" , evaluation . metrics_schema_uri ) metrics = MessageToDict ( evaluation . _pb . metrics ) for metric in metrics . keys (): logging . info ( \"metric: %s , value: %s \" , metric , metrics [ metric ]) metrics_str = json . dumps ( metrics ) metrics_list . append ( metrics ) metrics_string_list . append ( metrics_str ) return ( evaluation . name , metrics_list , metrics_string_list , ) # Use the given metrics threshold(s) to determine whether the model is # accurate enough to deploy. def classification_thresholds_check ( metrics_dict , thresholds_dict ): for k , v in thresholds_dict . items (): logging . info ( \"k {} , v {} \" . format ( k , v )) if k in [ \"auRoc\" , \"auPrc\" ]: # higher is better if metrics_dict [ k ] < v : # if under threshold, don't deploy logging . info ( \" {} < {} ; returning False\" . format ( metrics_dict [ k ], v ) ) return False logging . info ( \"threshold checks passed.\" ) return True def log_metrics ( metrics_list , metricsc ): test_confusion_matrix = metrics_list [ 0 ][ \"confusionMatrix\" ] logging . info ( \"rows: %s \" , test_confusion_matrix [ \"rows\" ]) # log the ROC curve fpr = [] tpr = [] thresholds = [] for item in metrics_list [ 0 ][ \"confidenceMetrics\" ]: fpr . append ( item . get ( \"falsePositiveRate\" , 0.0 )) tpr . append ( item . get ( \"recall\" , 0.0 )) thresholds . append ( item . get ( \"confidenceThreshold\" , 0.0 )) print ( f \"fpr: { fpr } \" ) print ( f \"tpr: { tpr } \" ) print ( f \"thresholds: { thresholds } \" ) metricsc . log_roc_curve ( fpr , tpr , thresholds ) # log the confusion matrix annotations = [] for item in test_confusion_matrix [ \"annotationSpecs\" ]: annotations . append ( item [ \"displayName\" ]) logging . info ( \"confusion matrix annotations: %s \" , annotations ) metricsc . log_confusion_matrix ( annotations , test_confusion_matrix [ \"rows\" ], ) # log textual metrics info as well for metric in metrics_list [ 0 ] . keys (): if metric != \"confidenceMetrics\" : val_string = json . dumps ( metrics_list [ 0 ][ metric ]) metrics . log_metric ( metric , val_string ) # metrics.metadata[\"model_type\"] = \"AutoML Tabular classification\" logging . getLogger () . setLevel ( logging . INFO ) aiplatform . init ( project = project ) # extract the model resource name from the input Model Artifact model_resource_path = model . uri . replace ( \"aiplatform://v1/\" , \"\" ) logging . info ( \"model path: %s \" , model_resource_path ) client_options = { \"api_endpoint\" : api_endpoint } # Initialize client that will be used to create and send requests. client = aiplatform . gapic . ModelServiceClient ( client_options = client_options ) eval_name , metrics_list , metrics_str_list = get_eval_info ( client , model_resource_path ) logging . info ( \"got evaluation name: %s \" , eval_name ) logging . info ( \"got metrics list: %s \" , metrics_list ) log_metrics ( metrics_list , metricsc ) thresholds_dict = json . loads ( thresholds_dict_str ) deploy = classification_thresholds_check ( metrics_list [ 0 ], thresholds_dict ) if deploy : dep_decision = \"true\" else : dep_decision = \"false\" logging . info ( \"deployment decision is %s \" , dep_decision ) return ( dep_decision ,)","title":"4.1 \u6a21\u578b\u8bc4\u4f30\u7684\u81ea\u5b9a\u4e49\u7ec4\u4ef6"},{"location":"tools/gcp/vertex-ai/#42-google-cloud","text":"\u4f7f\u7528timestamp\u8bbe\u7f6e\u4e00\u4e2a\u5c55\u793a\u540d import time DISPLAY_NAME = 'automl-beans {} ' . format ( str ( int ( time . time ()))) print ( DISPLAY_NAME ) \u4ee5\u4e0b\u4ee3\u7801\u505a\u4e86\u4e00\u4e9b\u4e8b\u60c5\uff1a \u5b9a\u4e49pipeline\u9700\u8981\u7684\u8f93\u5165\u53c2\u6570\uff08\u9700\u8981\u624b\u52a8\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u5176\u4ed6\u7ec4\u4ef6\u7684\u8f93\u51fa\u65e0\u5173\uff09 \u4e00\u4e9b\u4e0eVertext AI\u4ea4\u4e92\u7684\u5185\u7f6e\u7ec4\u4ef6 TabularDatasetCreateOp \u8f93\u5165\uff1a\u6307\u5b9a\u7684\u6570\u636e\u6e90\uff08\u6765\u81eaCloud Storage\u6216\u8005BigQuery\uff09 \u8fd9\u4e2a\u7ec3\u4e60\u4e2d\uff0c\u901a\u8fc7BigQuery table URL\u6765\u4f20\u9012\u6570\u636e AutoMLTabularTrainingJobRunOp \u529f\u80fd\uff1a\u4e3a\u8f93\u5165\u7684\u6570\u636e\u5f00\u542fAutoML\u8bad\u7ec3\u5de5\u4f5c \u8f93\u5165\uff1a\u4e00\u4e9b\u914d\u7f6e\u53c2\u6570\u4f8b\u5982\u6a21\u578b\u7c7b\u578b\uff08\u8fd9\u91cc\u662f\u5206\u7c7b\uff09\u3001\u6570\u636e\u5217\u7684\u4e00\u4e9b\u5185\u5bb9\u3001\u5e0c\u671b\u8bad\u7ec3\u591a\u4e45\u3001\u6570\u636e\u6e90\u914d\u7f6e\u7b49\u7b49 ModelDeployOp \u90e8\u7f72\u4e00\u4e2a\u6307\u5b9a\u6a21\u578b\u5230Vertex AI\u7684endpoint \u9700\u8981\u6307\u5b9a\u4e00\u4e9b\u989d\u5916\u914d\u7f6e\u9879\uff0c\u4f8b\u5982endpoint\u7684\u673a\u5668\u7c7b\u578b\u3001\u9879\u76ee\u3001\u6a21\u578b\u7b49 @kfp . dsl . pipeline ( name = \"automl-tab-beans-training-v2\" , pipeline_root = PIPELINE_ROOT ) def pipeline ( bq_source : str = \"bq://aju-dev-demos.beans.beans1\" , display_name : str = DISPLAY_NAME , project : str = PROJECT_ID , gcp_region : str = \"us-central1\" , api_endpoint : str = \"us-central1-aiplatform.googleapis.com\" , thresholds_dict_str : str = '{\"auRoc\": 0.95}' , ): # \u5185\u7f6e\u7ec4\u4ef6 TabularDatasetCreateOp dataset_create_op = gcc_aip . TabularDatasetCreateOp ( project = project , display_name = display_name , bq_source = bq_source ) # \u5185\u7f6e\u7ec4\u4ef6 AutoMLTabularTrainingJobRunOp training_op = gcc_aip . AutoMLTabularTrainingJobRunOp ( project = project , display_name = display_name , optimization_prediction_type = \"classification\" , budget_milli_node_hours = 1000 , column_transformations = [ { \"numeric\" : { \"column_name\" : \"Area\" }}, { \"numeric\" : { \"column_name\" : \"Perimeter\" }}, { \"numeric\" : { \"column_name\" : \"MajorAxisLength\" }}, { \"numeric\" : { \"column_name\" : \"MinorAxisLength\" }}, { \"numeric\" : { \"column_name\" : \"AspectRation\" }}, { \"numeric\" : { \"column_name\" : \"Eccentricity\" }}, { \"numeric\" : { \"column_name\" : \"ConvexArea\" }}, { \"numeric\" : { \"column_name\" : \"EquivDiameter\" }}, { \"numeric\" : { \"column_name\" : \"Extent\" }}, { \"numeric\" : { \"column_name\" : \"Solidity\" }}, { \"numeric\" : { \"column_name\" : \"roundness\" }}, { \"numeric\" : { \"column_name\" : \"Compactness\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor1\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor2\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor3\" }}, { \"numeric\" : { \"column_name\" : \"ShapeFactor4\" }}, { \"categorical\" : { \"column_name\" : \"Class\" }}, ], dataset = dataset_create_op . outputs [ \"dataset\" ], target_column = \"Class\" , ) model_eval_task = classif_model_eval_metrics ( project , gcp_region , api_endpoint , thresholds_dict_str , training_op . outputs [ \"model\" ], ) with dsl . Condition ( model_eval_task . outputs [ \"dep_decision\" ] == \"true\" , name = \"deploy_decision\" , ): # \u5185\u7f6e\u7ec4\u4ef6 ModelDeployOp deploy_op = gcc_aip . ModelDeployOp ( # noqa: F841 model = training_op . outputs [ \"model\" ], project = project , machine_type = \"n1-standard-4\" , )","title":"4.2 Google Cloud\u5185\u7f6e\u7684\u7ec4\u4ef6"},{"location":"tools/gcp/vertex-ai/#43-ml","text":"\u7f16\u8bd1\uff1a compiler.Compiler () .compile ( pipeline_func = pipeline, package_path = \"tab_classif_pipeline.json\" ) \u5f00\u542fpipeline response = api_client . create_run_from_job_spec ( \"tab_classif_pipeline.json\" , pipeline_root = PIPELINE_ROOT , parameter_values = { \"project\" : PROJECT_ID , \"display_name\" : DISPLAY_NAME } )","title":"4.3 \u7f16\u8bd1\u8fd0\u884cML\u7ba1\u9053"},{"location":"tools/gcp/vertex-ai/#5","text":"\u5982\u679c\u8fd0\u884c\u4e86\u8fd9\u4e2apipeline\u591a\u6b21\uff0c\u4f1a\u5e0c\u671b\u5bf9\u6bd4\u4e0d\u540c\u7684metrics \u53ef\u4ee5\u4f7f\u7528 aiplatform.get_pipeline_df() \u65b9\u6cd5\u6765\u8bbf\u95eemetadata \u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u53ef\u4ee5\u83b7\u53d6pipeline\u7684\u4e00\u4e2aDataFrame pipeline_df = aiplatform . get_pipeline_df ( pipeline = \"automl-tab-beans-training-v2\" ) small_pipeline_df = pipeline_df . head ( 2 ) small_pipeline_df","title":"5. \u5bf9\u6bd4\u6307\u6807"},{"location":"tools/gcp/vertex-ai/#_2","text":"Cousera MLOps\u8bfe\u7a0b","title":"\u5b66\u4e60\u8d44\u6599"}]}